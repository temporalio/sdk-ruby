# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/interaction/v1/message.proto

require 'google/protobuf'

require 'temporal/api/common/v1/message_pb'
require 'temporal/api/failure/v1/message_pb'
require 'temporal/api/enums/v1/interaction_type_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("temporal/api/interaction/v1/message.proto", :syntax => :proto3) do
    add_message "temporal.api.interaction.v1.Meta" do
      optional :id, :string, 1
      optional :event_id, :int64, 2
      optional :interaction_type, :enum, 3, "temporal.api.enums.v1.InteractionType"
      optional :identity, :string, 4
      optional :request_id, :string, 5
    end
    add_message "temporal.api.interaction.v1.Input" do
      optional :header, :message, 1, "temporal.api.common.v1.Header"
      optional :name, :string, 2
      optional :args, :message, 3, "temporal.api.common.v1.Payloads"
    end
    add_message "temporal.api.interaction.v1.Output" do
      optional :header, :message, 1, "temporal.api.common.v1.Header"
      oneof :result do
        optional :success, :message, 2, "temporal.api.common.v1.Payloads"
        optional :failure, :message, 3, "temporal.api.failure.v1.Failure"
      end
    end
    add_message "temporal.api.interaction.v1.Invocation" do
      optional :meta, :message, 1, "temporal.api.interaction.v1.Meta"
      optional :input, :message, 2, "temporal.api.interaction.v1.Input"
    end
  end
end

module Temporalio
  module Api
    module Interaction
      module V1
        Meta = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.api.interaction.v1.Meta").msgclass
        Input = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.api.interaction.v1.Input").msgclass
        Output = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.api.interaction.v1.Output").msgclass
        Invocation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.api.interaction.v1.Invocation").msgclass
      end
    end
  end
end
