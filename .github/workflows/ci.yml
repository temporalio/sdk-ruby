name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  build-lint-test:
    strategy:
      fail-fast: false
      matrix:
        # TODO(cretz): Enable ubuntu-24.04-arm when oxidize-rb/actions/setup-ruby-and-rust
        # supports it
        # 
        # TODO(cretz): Enable x64-mingw-ucrt if we can figure out Windows issue, see
        # https://github.com/temporalio/sdk-ruby/issues/172
        os: [ubuntu-latest, macos-latest]
        # Earliest and latest supported
        rubyVersion: ["3.2", "3.4"]
        
        include:
          - os: ubuntu-latest
            rubyVersion: "3.4"
            checkTarget: true
            docsTarget: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Ruby and Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ matrix.rubyVersion }}
          bundler-cache: true
          cargo-cache: true
          working-directory: ./temporalio

      # Needed for tests currently
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      # Needed because gRPC tools does not have a macOS protoc binary
      # currently, see https://github.com/grpc/grpc/issues/25755
      - name: Install protoc for mac
        if: ${{ matrix.os == 'macos-latest' }}
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install bundle
        working-directory: ./temporalio
        run: bundle install

      - name: Check generated protos
        if: ${{ matrix.checkTarget }}
        working-directory: ./temporalio
        run: |
          bundle exec rake proto:generate
          [[ -z $(git status --porcelain lib/temporalio/api) ]] || (git diff lib/temporalio/api; echo "Protos changed" 1>&2; exit 1)

      - name: Lint, compile, test Ruby
        working-directory: ./temporalio
        # Timeout just in case there's a hanging part in rake
        timeout-minutes: 20
        # Set env vars for cloud tests. If secrets aren't present, tests will be skipped.
        env:
          # For mTLS tests
          TEMPORAL_CLOUD_MTLS_TEST_TARGET_HOST: ${{ vars.TEMPORAL_CLIENT_NAMESPACE }}.tmprl.cloud:7233
          TEMPORAL_CLOUD_MTLS_TEST_NAMESPACE: ${{ vars.TEMPORAL_CLIENT_NAMESPACE }}
          TEMPORAL_CLOUD_MTLS_TEST_CLIENT_CERT: ${{ secrets.TEMPORAL_CLIENT_CERT }}
          TEMPORAL_CLOUD_MTLS_TEST_CLIENT_KEY: ${{ secrets.TEMPORAL_CLIENT_KEY }}

          # For API key tests
          TEMPORAL_CLOUD_API_KEY_TEST_TARGET_HOST: us-west-2.aws.api.temporal.io:7233
          TEMPORAL_CLOUD_API_KEY_TEST_NAMESPACE: ${{ vars.TEMPORAL_CLIENT_NAMESPACE }}
          TEMPORAL_CLOUD_API_KEY_TEST_API_KEY: ${{ secrets.TEMPORAL_CLIENT_CLOUD_API_KEY }}

          # For cloud ops tests
          TEMPORAL_CLOUD_OPS_TEST_TARGET_HOST: saas-api.tmprl.cloud:443
          TEMPORAL_CLOUD_OPS_TEST_NAMESPACE: ${{ vars.TEMPORAL_CLIENT_NAMESPACE }}
          TEMPORAL_CLOUD_OPS_TEST_API_KEY: ${{ secrets.TEMPORAL_CLIENT_CLOUD_API_KEY }}
          TEMPORAL_CLOUD_OPS_TEST_API_VERSION: 2024-05-13-00
        run: bundle exec rake TESTOPTS="--verbose"

      - name: Deploy docs
        # Only deploy on main merge, not in PRs
        if: ${{ github.ref == 'refs/heads/main' && matrix.docsTarget }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: npx vercel deploy temporalio/doc --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
