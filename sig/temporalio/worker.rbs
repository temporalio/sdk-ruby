module Temporalio
  class Worker
    @running: bool

    def initialize: (
      Temporalio::Connection connection,
      String namespace,
      String task_queue,
      ?activities: Array[singleton(Temporalio::Activity)],
      ?data_converter: Temporalio::DataConverter,
      ?activity_executor: Temporalio::Worker::_ActivityExecutor?,
      ?max_concurrent_activities: Integer
    ) -> void
    def run: -> void
    def start: (?Temporalio::Worker::_Reactor? reactor) -> void
    def shutdown: -> void

    private

    attr_reader mutex: Thread::Mutex
    attr_reader runtime: Temporalio::Runtime
    attr_reader core_worker: Temporalio::Bridge::Worker
    attr_reader activity_worker: Temporalio::Worker::ActivityWorker?
    attr_reader workflow_worker: untyped

    def running?: -> bool
    def init_activity_worker: (
      String task_queue,
      Temporalio::Bridge::Worker core_worker,
      Array[singleton(Temporalio::Activity)] activities,
      Temporalio::DataConverter data_converter,
      Temporalio::Worker::_ActivityExecutor executor
    ) -> Temporalio::Worker::ActivityWorker?
  end
end
