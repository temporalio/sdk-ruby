module Temporalio
  class Client
    class WorkflowHandle
      interface _Interface
        # attr_readers
        def id: -> String
        def run_id: -> String?
        def result_run_id: -> String?
        def first_execution_run_id: -> String?

        # methods
        def result: (?follow_runs: bool, ?rpc_metadata: Hash[String, String], ?rpc_timeout: Integer?) -> untyped
        def describe: (?rpc_metadata: Hash[String, String], ?rpc_timeout: Integer?) -> Temporalio::Workflow::ExecutionInfo
        def cancel: (?String? reason, ?rpc_metadata: Hash[String, String], ?rpc_timeout: Integer?) -> void
        def query: (String | Symbol query, *untyped args, ?reject_condition: Symbol, ?rpc_metadata: Hash[String, String], ?rpc_timeout: Integer?) -> untyped
        def signal: (String | Symbol signal, *untyped args, ?rpc_metadata: Hash[String, String], ?rpc_timeout: Integer?) -> void
        def terminate: (?String? reason, ?untyped args, ?rpc_metadata: Hash[String, String], ?rpc_timeout: Integer?) -> void
      end

      # Implement own interface
      include _Interface

      def initialize: (
        Temporalio::Client::Implementation client_impl,
        String id,
        ?run_id: String?,
        ?result_run_id: String?,
        ?first_execution_run_id: String?
      ) -> void

      private

      @id: String
      @run_id: String?
      @result_run_id: String?
      @first_execution_run_id: String?

      attr_reader client_impl: Temporalio::Client::Implementation
    end
  end
end
