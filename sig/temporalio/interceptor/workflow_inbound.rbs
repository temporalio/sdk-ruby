module Temporalio
  module Interceptor
    module WorkflowInbound
      type methods = (:execute_workflow)

      def execute_workflow: (ExecuteWorkflowInput input) ?{ (ExecuteWorkflowInput) -> untyped } -> untyped

      class ExecuteWorkflowInput < Struct[untyped]
        attr_accessor workflow: singleton(Temporalio::Workflow)
        attr_accessor args: Array[untyped]
        attr_accessor headers: Hash[String, Temporalio::Api::Common::V1::Payload]

        def self.new: (
          workflow: singleton(Temporalio::Workflow),
          args: Array[untyped],
          headers: Hash[String, Temporalio::Api::Common::V1::Payload],
        ) -> ExecuteWorkflowInput
      end
    end
  end
end
