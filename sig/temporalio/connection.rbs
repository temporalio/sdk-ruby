module Temporalio
  # A connection to the Temporal server. It provides gRPC level communication to a Temporal server.
  #
  # Connections are usually used through either {Temporalio::Client} or a {Temporalio::Worker}.
  # It may also be used to perform gRPC requests to the server (see {#workflow_service}).
  class Connection
    # @api private
    attr_reader core_connection: Temporalio::Bridge::Connection

    # @param address [String | nil] `host[:port]` for the Temporal server. Defaults to `localhost:7233`.
    # @param tls [Temporalio::Connection::TlsOptions | nil] TLS/mTLS options for the connection. By default, TLS is disabled.
    # @param metadata [Hash | nil] gRPC metadata (ie. HTTP headers) to send with each request to the server. Optional.
    # @param retry_config [Temporalio::Connection::RetryConfig | nil] gRPC retry configuration to use by default on this connection.
    def initialize: (
      ?String? address,
      ?tls: TlsOptions?,
      ?metadata: Hash[String, String]?,
      ?retry_config: RetryConfig?,
    ) -> void
    def workflow_service: -> Temporalio::Connection::WorkflowService
    def test_service: -> Temporalio::Connection::TestService

    private

    @workflow_service: Temporalio::Connection::WorkflowService?
    @test_service: Temporalio::Connection::TestService?

    def parse_url: (String?) -> [String, Integer]
  end
end
