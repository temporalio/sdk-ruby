module Temporalio
  class Worker
    interface _ActivityExecutor
      def schedule: { -> untyped } -> void
      def shutdown: -> void
    end

    class ThreadPoolExecutor
      EXIT_SYMBOL: :exit

      def initialize: (Integer size) -> void
      def schedule: { -> untyped } -> void
      def shutdown: -> void

      private

      attr_reader queue: Thread::Queue
      attr_reader pool: Array[Thread]

      def poll: -> void
    end
  end
end
