module Temporalio
  class Worker
    class WorkflowRunner
      class Completion < Struct[untyped]
        attr_accessor resolve(): ^(untyped) -> untyped
        attr_accessor reject(): ^(Exception) -> untyped

        def self.new: (^(untyped) -> untyped resolve, ^(Exception) -> untyped reject) -> Completion
      end

      attr_reader time: Time?

      def initialize: (
        String namespace,
        String task_queue,
        singleton(Temporalio::Workflow) workflow_class,
        String run_id,
        Temporalio::Worker::SyncWorker worker,
        Temporalio::DataConverter converter,
        Temporalio::Interceptor::Chain[Temporalio::Interceptor::WorkflowInbound] inbound_interceptors,
        Temporalio::Interceptor::Chain[Temporalio::Interceptor::WorkflowOutbound] outbound_interceptors
      ) -> void
      def process: (Temporalio::Bridge::Api::WorkflowActivation::WorkflowActivation activation) -> Array[Temporalio::Bridge::Api::WorkflowCommands::WorkflowCommand]
      def push_command: (Temporalio::Bridge::Api::WorkflowCommands::WorkflowCommand command) -> Array[untyped]
      def add_completion: (Symbol type, ^(untyped) -> void resolve, ^(Exception) -> void reject) -> Integer
      def remove_completion: (Symbol type, Integer seq) -> bool
      def finished?: -> bool
      def replay?: -> bool

      private

      @replay: bool
      @finished: bool

      attr_reader namespace: String
      attr_reader task_queue: String
      attr_reader workflow_class: singleton(Temporalio::Workflow)
      attr_reader run_id: String
      attr_reader worker: Temporalio::Worker::SyncWorker
      attr_reader converter: Temporalio::DataConverter
      attr_reader inbound_interceptors: Temporalio::Interceptor::Chain[Temporalio::Interceptor::WorkflowInbound]
      attr_reader outbound_interceptors: Temporalio::Interceptor::Chain[Temporalio::Interceptor::WorkflowOutbound]
      attr_reader commands: Array[Temporalio::Bridge::Api::WorkflowCommands::WorkflowCommand]
      attr_reader sequences: Hash[Symbol, Integer]
      attr_reader completions: Hash[Symbol, Hash[Integer, Temporalio::Worker::WorkflowRunner::Completion]]
      attr_reader fiber: Fiber?

      def order_jobs: (Array[Temporalio::Bridge::Api::WorkflowActivation::WorkflowActivationJob] jobs) -> Array[Temporalio::Bridge::Api::WorkflowActivation::WorkflowActivationJob]
      def apply: (Temporalio::Bridge::Api::WorkflowActivation::WorkflowActivationJob job) -> nil
      def apply_start_workflow: (Temporalio::Bridge::Api::WorkflowActivation::StartWorkflow job) -> untyped
      def apply_fire_timer: (Temporalio::Bridge::Api::WorkflowActivation::FireTimer job) -> untyped
      def generate_workflow_info: (Temporalio::Bridge::Api::WorkflowActivation::StartWorkflow) -> Temporalio::Workflow::Info
    end
  end
end
