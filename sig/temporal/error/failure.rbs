module Temporal
  class Error < StandardError
    class Failure < Error
      @cause: Failure?
      attr_reader raw: Temporal::Api::Failure::V1::Failure?

      def initialize: (String message, ?raw: Temporal::Api::Failure::V1::Failure?, ?cause: Failure?) -> void
      def cause: -> (Failure | Exception)?
    end

    class ApplicationError < Failure
      attr_reader type: String
      attr_reader details: Array[untyped]
      attr_reader non_retryable: bool

      def initialize: (
        String message,
        type: String,
        ?details: Array[untyped],
        ?non_retryable: bool,
        ?raw: Temporal::Api::Failure::V1::Failure?,
        ?cause: Failure?
      ) -> void
      def retryable?: -> bool
    end

    class TimeoutError < Failure
      attr_reader type: Temporal::TimeoutType::values
      attr_reader last_heartbeat_details: Array[untyped]

      def initialize: (
        String message,
        type: Temporal::TimeoutType::values,
        ?last_heartbeat_details: Array[untyped],
        ?raw: Temporal::Api::Failure::V1::Failure?,
        ?cause: Failure?
      ) -> void
    end

    class CancelledError < Failure
      attr_reader details: Array[untyped]?

      def initialize: (
        String message,
        ?details: Array[untyped]?,
        ?raw: Temporal::Api::Failure::V1::Failure?,
        ?cause: Failure?
      ) -> void
    end

    class TerminatedError < Failure
    end

    class ServerError < Failure
      attr_reader non_retryable: bool

      def initialize: (
        String message,
        non_retryable: bool,
        ?raw: Temporal::Api::Failure::V1::Failure?,
        ?cause: Failure?
      ) -> void
      def retryable?: -> bool
    end

    class ResetWorkflowError < Failure
      attr_reader last_heartbeat_details: Array[untyped]

      def initialize: (
        String message,
        ?last_heartbeat_details: Array[untyped],
        ?raw: Temporal::Api::Failure::V1::Failure?,
        ?cause: Failure?
      ) -> void
    end

    class ActivityError < Failure
      attr_reader scheduled_event_id: Integer
      attr_reader started_event_id: Integer
      attr_reader identity: String
      attr_reader activity_name: String?
      attr_reader activity_id: String
      attr_reader retry_state: Temporal::RetryState::values

      def initialize: (
        String message,
        scheduled_event_id: Integer,
        started_event_id: Integer,
        identity: String,
        activity_name: String?,
        activity_id: String,
        retry_state: Temporal::RetryState::values,
        ?raw: Temporal::Api::Failure::V1::Failure?,
        ?cause: Failure?
      ) -> void
    end

    class ChildWorkflowError < Failure
      attr_reader namespace: String
      attr_reader workflow_id: String?
      attr_reader run_id: String?
      attr_reader workflow_name: String?
      attr_reader initiated_event_id: Integer
      attr_reader started_event_id: Integer
      attr_reader retry_state: Temporal::RetryState::values

      def initialize: (
        String message,
        namespace: String,
        workflow_id: String?,
        run_id: String?,
        workflow_name: String?,
        initiated_event_id: Integer,
        started_event_id: Integer,
        retry_state: Temporal::RetryState::values,
        ?raw: Temporal::Api::Failure::V1::Failure?,
        ?cause: Failure?
      ) -> void
    end
  end
end
