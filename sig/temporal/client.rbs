module Temporal
  class Client
    attr_reader namespace: Symbol | String

    def initialize: (
      Temporal::Connection connection,
      String | Symbol namespace,
      ?interceptors: Array[Temporal::Interceptor::Client]
    ) -> void
    def start_workflow: (
      String workflow,
      *untyped args,
      id: String,
      task_queue: Symbol | String,
      ?execution_timeout: Integer?,
      ?run_timeout: Integer?,
      ?task_timeout: Integer?,
      ?id_reuse_policy: Symbol?,
      ?retry_policy: Temporal::RetryPolicy?,
      ?cron_schedule: String?,
      ?memo: Hash[Symbol | String, untyped]?,
      ?search_attributes: Hash[Symbol | String, untyped]?,
      ?start_signal: Symbol | String?,
      ?start_signal_args: Array[untyped]?
    ) -> untyped
    def workflow_handle: (String id, ?run_id: String?, ?first_execution_run_id: String?) -> WorkflowHandle

    private

    attr_reader implementation: Implementation
  end
end
