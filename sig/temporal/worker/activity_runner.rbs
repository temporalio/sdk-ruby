module Temporal
  class Worker
    class ActivityRunner
      def initialize: (
        singleton(Temporal::Activity) activity_class,
        Coresdk::ActivityTask::Start start,
        String task_queue,
        String task_token,
        Temporal::Worker::SyncWorker worker,
        Temporal::DataConverter converter
      ) -> void
      def run: -> (Temporal::Api::Common::V1::Payload | Temporal::Api::Failure::V1::Failure)
      def cancel: -> void

      private

      @context: Temporal::Activity::Context

      attr_reader activity_class: singleton(Temporal::Activity)
      attr_reader start: Coresdk::ActivityTask::Start
      attr_reader task_queue: String
      attr_reader task_token: String
      attr_reader worker: Temporal::Worker::SyncWorker
      attr_reader converter: Temporal::DataConverter

      def context: -> Temporal::Activity::Context
      def generate_activity_info: -> Temporal::Activity::Info
      def heartbeat: (*untyped) -> void
    end
  end
end
