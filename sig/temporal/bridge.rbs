BRIDGE_DIR: String

class Rutie
  def initialize: (
    Symbol bridge,
    ?lib_path: String | Symbol,
    ?lib_suffix: String | Symbol,
    ?lib_prefix: String | Symbol
  ) -> void
  def init: (String, String) -> void
end

module Temporal
  module Bridge
    class Error < StandardError
    end

    def self.init_telemetry: -> void

    class Connection
      def self.connect: (Runtime, String) -> Temporal::Bridge::Connection
      def call: (Symbol, String, Hash[String, String], Integer?) -> String
    end

    class Runtime
      def self.init: () -> Temporal::Bridge::Runtime
      def run_callback_loop: () -> void
    end

    class Worker
      def self.create: (Runtime, Connection, String, String) -> Temporal::Bridge::Worker
      def poll_activity_task: { (String?, Exception?) -> void } -> void
      def complete_activity_task: (String) { (nil, Exception?) -> void } -> void
      def record_activity_heartbeat: (String) -> void
      def initiate_shutdown: -> void
      def shutdown: -> void
    end
  end
end
