module Coresdk
  module Common
    # Identifying information about a particular workflow execution, including namespace
    #
    class NamespacedWorkflowExecution < ::Protobuf::Message
      # Namespace the workflow run is located in
      #
      attr_accessor namespace(): ::String

      def namespace!: () -> ::String?

      # Can never be empty
      #
      attr_accessor workflow_id(): ::String

      def workflow_id!: () -> ::String?

      # May be empty if the most recent run of the workflow with the given ID is being targeted
      #
      attr_accessor run_id(): ::String

      def run_id!: () -> ::String?

      def initialize: (?namespace: ::String, ?workflow_id: ::String, ?run_id: ::String) -> void

      def []: (:namespace) -> ::String
            | (:workflow_id) -> ::String
            | (:run_id) -> ::String
            | (::Symbol) -> untyped

      def []=: (:namespace, ::String) -> ::String
             | (:workflow_id, ::String) -> ::String
             | (:run_id, ::String) -> ::String
             | (::Symbol, untyped) -> untyped

      interface _ToProto
        def to_proto: () -> NamespacedWorkflowExecution
      end

      # The type of `#initialize` parameter.
      type init = NamespacedWorkflowExecution | _ToProto

      # The type of `repeated` field.
      type field_array = ::Protobuf::Field::FieldArray[NamespacedWorkflowExecution, NamespacedWorkflowExecution | _ToProto]

      # The type of `map` field.
      type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, NamespacedWorkflowExecution, NamespacedWorkflowExecution | _ToProto]

      type array = ::Array[NamespacedWorkflowExecution | _ToProto]

      type hash[KEY] = ::Hash[KEY, NamespacedWorkflowExecution | _ToProto]
    end
  end
end
