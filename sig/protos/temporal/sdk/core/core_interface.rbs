module Coresdk
  # A request as given to `record_activity_heartbeat`
  #
  class ActivityHeartbeat < ::Protobuf::Message
    attr_accessor task_token(): ::String

    def task_token!: () -> ::String?

    attr_accessor details(): ::Temporal::Api::Common::V1::Payload::field_array

    def details=: (::Temporal::Api::Common::V1::Payload::array) -> ::Temporal::Api::Common::V1::Payload::array
                | ...

    def details!: () -> ::Temporal::Api::Common::V1::Payload::field_array?

    def initialize: (?task_token: ::String, ?details: ::Temporal::Api::Common::V1::Payload::array) -> void

    def []: (:task_token) -> ::String
          | (:details) -> ::Temporal::Api::Common::V1::Payload::field_array
          | (::Symbol) -> untyped

    def []=: (:task_token, ::String) -> ::String
           | (:details, ::Temporal::Api::Common::V1::Payload::field_array) -> ::Temporal::Api::Common::V1::Payload::field_array
           | (:details, ::Temporal::Api::Common::V1::Payload::array) -> ::Temporal::Api::Common::V1::Payload::array
           | (::Symbol, untyped) -> untyped

    interface _ToProto
      def to_proto: () -> ActivityHeartbeat
    end

    # The type of `#initialize` parameter.
    type init = ActivityHeartbeat | _ToProto

    # The type of `repeated` field.
    type field_array = ::Protobuf::Field::FieldArray[ActivityHeartbeat, ActivityHeartbeat | _ToProto]

    # The type of `map` field.
    type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityHeartbeat, ActivityHeartbeat | _ToProto]

    type array = ::Array[ActivityHeartbeat | _ToProto]

    type hash[KEY] = ::Hash[KEY, ActivityHeartbeat | _ToProto]
  end

  # A request as given to `complete_activity_task`
  #
  class ActivityTaskCompletion < ::Protobuf::Message
    attr_accessor task_token(): ::String

    def task_token!: () -> ::String?

    attr_accessor result(): ::Coresdk::Activity_result::ActivityExecutionResult?

    def result=: [M < ::Coresdk::Activity_result::ActivityExecutionResult::_ToProto] (M?) -> M?
               | ...

    def result!: () -> ::Coresdk::Activity_result::ActivityExecutionResult?

    def initialize: (?task_token: ::String, ?result: ::Coresdk::Activity_result::ActivityExecutionResult::init?) -> void

    def []: (:task_token) -> ::String
          | (:result) -> ::Coresdk::Activity_result::ActivityExecutionResult?
          | (::Symbol) -> untyped

    def []=: (:task_token, ::String) -> ::String
           | (:result, ::Coresdk::Activity_result::ActivityExecutionResult?) -> ::Coresdk::Activity_result::ActivityExecutionResult?
           | [M < ::Coresdk::Activity_result::ActivityExecutionResult::_ToProto] (:result, M?) -> M?
           | (::Symbol, untyped) -> untyped

    interface _ToProto
      def to_proto: () -> ActivityTaskCompletion
    end

    # The type of `#initialize` parameter.
    type init = ActivityTaskCompletion | _ToProto

    # The type of `repeated` field.
    type field_array = ::Protobuf::Field::FieldArray[ActivityTaskCompletion, ActivityTaskCompletion | _ToProto]

    # The type of `map` field.
    type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskCompletion, ActivityTaskCompletion | _ToProto]

    type array = ::Array[ActivityTaskCompletion | _ToProto]

    type hash[KEY] = ::Hash[KEY, ActivityTaskCompletion | _ToProto]
  end
end
