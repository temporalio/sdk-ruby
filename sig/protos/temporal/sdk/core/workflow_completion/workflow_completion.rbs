module Coresdk
  module WorkflowCompletion
    # / Result of a single workflow activation, reported from lang to core
    #
    class WorkflowActivationCompletion < ::Protobuf::Message
      # The run id from the workflow activation you are completing
      #
      attr_accessor run_id(): ::String

      def run_id!: () -> ::String?

      attr_accessor successful(): ::Coresdk::WorkflowCompletion::Success?

      def successful=: [M < ::Coresdk::WorkflowCompletion::Success::_ToProto] (M?) -> M?
                     | ...

      def successful!: () -> ::Coresdk::WorkflowCompletion::Success?

      attr_accessor failed(): ::Coresdk::WorkflowCompletion::Failure?

      def failed=: [M < ::Coresdk::WorkflowCompletion::Failure::_ToProto] (M?) -> M?
                 | ...

      def failed!: () -> ::Coresdk::WorkflowCompletion::Failure?

      def initialize: (?run_id: ::String, ?successful: ::Coresdk::WorkflowCompletion::Success::init?, ?failed: ::Coresdk::WorkflowCompletion::Failure::init?) -> void

      def []: (:run_id) -> ::String
            | (:successful) -> ::Coresdk::WorkflowCompletion::Success?
            | (:failed) -> ::Coresdk::WorkflowCompletion::Failure?
            | (::Symbol) -> untyped

      def []=: (:run_id, ::String) -> ::String
             | (:successful, ::Coresdk::WorkflowCompletion::Success?) -> ::Coresdk::WorkflowCompletion::Success?
             | [M < ::Coresdk::WorkflowCompletion::Success::_ToProto] (:successful, M?) -> M?
             | (:failed, ::Coresdk::WorkflowCompletion::Failure?) -> ::Coresdk::WorkflowCompletion::Failure?
             | [M < ::Coresdk::WorkflowCompletion::Failure::_ToProto] (:failed, M?) -> M?
             | (::Symbol, untyped) -> untyped

      interface _ToProto
        def to_proto: () -> WorkflowActivationCompletion
      end

      # The type of `#initialize` parameter.
      type init = WorkflowActivationCompletion | _ToProto

      # The type of `repeated` field.
      type field_array = ::Protobuf::Field::FieldArray[WorkflowActivationCompletion, WorkflowActivationCompletion | _ToProto]

      # The type of `map` field.
      type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowActivationCompletion, WorkflowActivationCompletion | _ToProto]

      type array = ::Array[WorkflowActivationCompletion | _ToProto]

      type hash[KEY] = ::Hash[KEY, WorkflowActivationCompletion | _ToProto]
    end

    # / Successful workflow activation with a list of commands generated by the workflow execution
    #
    class Success < ::Protobuf::Message
      # A list of commands to send back to the temporal server
      #
      attr_accessor commands(): ::Coresdk::WorkflowCommands::WorkflowCommand::field_array

      # A list of commands to send back to the temporal server
      #
      def commands=: (::Coresdk::WorkflowCommands::WorkflowCommand::array) -> ::Coresdk::WorkflowCommands::WorkflowCommand::array
                   | ...

      def commands!: () -> ::Coresdk::WorkflowCommands::WorkflowCommand::field_array?

      def initialize: (?commands: ::Coresdk::WorkflowCommands::WorkflowCommand::array) -> void

      def []: (:commands) -> ::Coresdk::WorkflowCommands::WorkflowCommand::field_array
            | (::Symbol) -> untyped

      def []=: (:commands, ::Coresdk::WorkflowCommands::WorkflowCommand::field_array) -> ::Coresdk::WorkflowCommands::WorkflowCommand::field_array
             | (:commands, ::Coresdk::WorkflowCommands::WorkflowCommand::array) -> ::Coresdk::WorkflowCommands::WorkflowCommand::array
             | (::Symbol, untyped) -> untyped

      interface _ToProto
        def to_proto: () -> Success
      end

      # The type of `#initialize` parameter.
      type init = Success | _ToProto

      # The type of `repeated` field.
      type field_array = ::Protobuf::Field::FieldArray[Success, Success | _ToProto]

      # The type of `map` field.
      type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, Success, Success | _ToProto]

      type array = ::Array[Success | _ToProto]

      type hash[KEY] = ::Hash[KEY, Success | _ToProto]
    end

    # / Failure to activate or execute a workflow
    #
    class Failure < ::Protobuf::Message
      attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

      def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                  | ...

      def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

      def initialize: (?failure: ::Temporalio::Api::Failure::V1::Failure::init?) -> void

      def []: (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
            | (::Symbol) -> untyped

      def []=: (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
             | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
             | (::Symbol, untyped) -> untyped

      interface _ToProto
        def to_proto: () -> Failure
      end

      # The type of `#initialize` parameter.
      type init = Failure | _ToProto

      # The type of `repeated` field.
      type field_array = ::Protobuf::Field::FieldArray[Failure, Failure | _ToProto]

      # The type of `map` field.
      type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, Failure, Failure | _ToProto]

      type array = ::Array[Failure | _ToProto]

      type hash[KEY] = ::Hash[KEY, Failure | _ToProto]
    end
  end
end
