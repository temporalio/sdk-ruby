module Temporalio
  module Api
    module History
      module V1
        # Always the first event in workflow history
        #
        class WorkflowExecutionStartedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionStartedEventAttributes) -> String

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # If this workflow is a child, the namespace our parent lives in.
          #  SDKs and UI tools should use `parent_workflow_namespace` field but server must use `parent_workflow_namespace_id` only.
          #
          attr_accessor parent_workflow_namespace(): ::String

          def parent_workflow_namespace!: () -> ::String?

          attr_accessor parent_workflow_namespace_id(): ::String

          def parent_workflow_namespace_id!: () -> ::String?

          # Contains information about parent workflow execution that initiated the child workflow these attributes belong to.
          #  If the workflow these attributes belong to is not a child workflow of any other execution, this field will not be populated.
          #
          attr_accessor parent_workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          # Contains information about parent workflow execution that initiated the child workflow these attributes belong to.
          #  If the workflow these attributes belong to is not a child workflow of any other execution, this field will not be populated.
          #
          def parent_workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                        | ...

          def parent_workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # EventID of the child execution initiated event in parent workflow
          #
          attr_accessor parent_initiated_event_id(): ::Integer

          def parent_initiated_event_id!: () -> ::Integer?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # SDK will deserialize this and provide it as arguments to the workflow function
          #
          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          # SDK will deserialize this and provide it as arguments to the workflow function
          #
          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Total workflow execution timeout including retries and continue as new.
          #
          attr_accessor workflow_execution_timeout(): ::Google::Protobuf::Duration?

          # Total workflow execution timeout including retries and continue as new.
          #
          def workflow_execution_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                         | ...

          def workflow_execution_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          attr_accessor workflow_run_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          def workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                   | ...

          def workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          attr_accessor workflow_task_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          def workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # Run id of the previous workflow which continued-as-new or retired or cron executed into this
          #  workflow.
          #
          attr_accessor continued_execution_run_id(): ::String

          def continued_execution_run_id!: () -> ::String?

          attr_accessor initiator(): ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator

          def initiator=: (::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values
                        | ...

          def initiator!: () -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator?

          attr_accessor continued_failure(): ::Temporalio::Api::Failure::V1::Failure?

          def continued_failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                                | ...

          def continued_failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          attr_accessor last_completion_result(): ::Temporalio::Api::Common::V1::Payloads?

          def last_completion_result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                                     | ...

          def last_completion_result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # This is the run id when the WorkflowExecutionStarted event was written.
          #  A workflow reset changes the execution run_id, but preserves this field.
          #
          attr_accessor original_execution_run_id(): ::String

          def original_execution_run_id!: () -> ::String?

          # Identity of the client who requested this execution
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # This is the very first runId along the chain of ContinueAsNew, Retry, Cron and Reset.
          #  Used to identify a chain.
          #
          attr_accessor first_execution_run_id(): ::String

          def first_execution_run_id!: () -> ::String?

          attr_accessor retry_policy(): ::Temporalio::Api::Common::V1::RetryPolicy?

          def retry_policy=: [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporalio::Api::Common::V1::RetryPolicy?

          # Starting at 1, the number of times we have tried to execute this workflow
          #
          attr_accessor attempt(): ::Integer

          def attempt!: () -> ::Integer?

          # The absolute time at which the workflow will be timed out.
          #  This is passed without change to the next run/retry of a workflow.
          #
          attr_accessor workflow_execution_expiration_time(): ::Google::Protobuf::Timestamp?

          # The absolute time at which the workflow will be timed out.
          #  This is passed without change to the next run/retry of a workflow.
          #
          def workflow_execution_expiration_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                                                 | ...

          def workflow_execution_expiration_time!: () -> ::Google::Protobuf::Timestamp?

          # If this workflow runs on a cron schedule, it will appear here
          #
          attr_accessor cron_schedule(): ::String

          def cron_schedule!: () -> ::String?

          # For a cron workflow, this contains the amount of time between when this iteration of
          #  the cron workflow was scheduled and when it should run next per its cron_schedule.
          #
          attr_accessor first_workflow_task_backoff(): ::Google::Protobuf::Duration?

          # For a cron workflow, this contains the amount of time between when this iteration of
          #  the cron workflow was scheduled and when it should run next per its cron_schedule.
          #
          def first_workflow_task_backoff=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                          | ...

          def first_workflow_task_backoff!: () -> ::Google::Protobuf::Duration?

          attr_accessor memo(): ::Temporalio::Api::Common::V1::Memo?

          def memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          attr_accessor prev_auto_reset_points(): ::Temporalio::Api::Workflow::V1::ResetPoints?

          def prev_auto_reset_points=: [M < ::Temporalio::Api::Workflow::V1::ResetPoints::_ToProto] (M?) -> M?
                                     | ...

          def prev_auto_reset_points!: () -> ::Temporalio::Api::Workflow::V1::ResetPoints?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          # Version of the child execution initiated event in parent workflow
          #  It should be used together with parent_initiated_event_id to identify
          #  a child initiated event for global namespace
          #
          attr_accessor parent_initiated_event_version(): ::Integer

          def parent_initiated_event_version!: () -> ::Integer?

          def initialize: (?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?parent_workflow_namespace: ::String, ?parent_workflow_namespace_id: ::String, ?parent_workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?parent_initiated_event_id: ::Integer, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?workflow_execution_timeout: ::Google::Protobuf::Duration::init?, ?workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?continued_execution_run_id: ::String, ?initiator: ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::init, ?continued_failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?last_completion_result: ::Temporalio::Api::Common::V1::Payloads::init?, ?original_execution_run_id: ::String, ?identity: ::String, ?first_execution_run_id: ::String, ?retry_policy: ::Temporalio::Api::Common::V1::RetryPolicy::init?, ?attempt: ::Integer, ?workflow_execution_expiration_time: ::Google::Protobuf::Timestamp::init?, ?cron_schedule: ::String, ?first_workflow_task_backoff: ::Google::Protobuf::Duration::init?, ?memo: ::Temporalio::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?, ?prev_auto_reset_points: ::Temporalio::Api::Workflow::V1::ResetPoints::init?, ?header: ::Temporalio::Api::Common::V1::Header::init?, ?parent_initiated_event_version: ::Integer) -> void

          def []: (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:parent_workflow_namespace) -> ::String
                | (:parent_workflow_namespace_id) -> ::String
                | (:parent_workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:parent_initiated_event_id) -> ::Integer
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:workflow_execution_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:continued_execution_run_id) -> ::String
                | (:initiator) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator
                | (:continued_failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:last_completion_result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:original_execution_run_id) -> ::String
                | (:identity) -> ::String
                | (:first_execution_run_id) -> ::String
                | (:retry_policy) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                | (:attempt) -> ::Integer
                | (:workflow_execution_expiration_time) -> ::Google::Protobuf::Timestamp?
                | (:cron_schedule) -> ::String
                | (:first_workflow_task_backoff) -> ::Google::Protobuf::Duration?
                | (:memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (:prev_auto_reset_points) -> ::Temporalio::Api::Workflow::V1::ResetPoints?
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (:parent_initiated_event_version) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:parent_workflow_namespace, ::String) -> ::String
                 | (:parent_workflow_namespace_id, ::String) -> ::String
                 | (:parent_workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:parent_workflow_execution, M?) -> M?
                 | (:parent_initiated_event_id, ::Integer) -> ::Integer
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:workflow_execution_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_execution_timeout, M?) -> M?
                 | (:workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_run_timeout, M?) -> M?
                 | (:workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_task_timeout, M?) -> M?
                 | (:continued_execution_run_id, ::String) -> ::String
                 | (:initiator, ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator
                 | (:initiator, ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values
                 | (:continued_failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:continued_failure, M?) -> M?
                 | (:last_completion_result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:last_completion_result, M?) -> M?
                 | (:original_execution_run_id, ::String) -> ::String
                 | (:identity, ::String) -> ::String
                 | (:first_execution_run_id, ::String) -> ::String
                 | (:retry_policy, ::Temporalio::Api::Common::V1::RetryPolicy?) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (:attempt, ::Integer) -> ::Integer
                 | (:workflow_execution_expiration_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:workflow_execution_expiration_time, M?) -> M?
                 | (:cron_schedule, ::String) -> ::String
                 | (:first_workflow_task_backoff, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:first_workflow_task_backoff, M?) -> M?
                 | (:memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (:prev_auto_reset_points, ::Temporalio::Api::Workflow::V1::ResetPoints?) -> ::Temporalio::Api::Workflow::V1::ResetPoints?
                 | [M < ::Temporalio::Api::Workflow::V1::ResetPoints::_ToProto] (:prev_auto_reset_points, M?) -> M?
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:parent_initiated_event_version, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionStartedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionStartedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionStartedEventAttributes, WorkflowExecutionStartedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionStartedEventAttributes, WorkflowExecutionStartedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionStartedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionStartedEventAttributes | _ToProto]
        end

        class WorkflowExecutionCompletedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionCompletedEventAttributes) -> String

          # Serialized result of workflow completion (ie: The return value of the workflow function)
          #
          attr_accessor result(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized result of workflow completion (ie: The return value of the workflow function)
          #
          def result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                     | ...

          def result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # If another run is started by cron, this contains the new run id.
          #
          attr_accessor new_execution_run_id(): ::String

          def new_execution_run_id!: () -> ::String?

          def initialize: (?result: ::Temporalio::Api::Common::V1::Payloads::init?, ?workflow_task_completed_event_id: ::Integer, ?new_execution_run_id: ::String) -> void

          def []: (:result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:new_execution_run_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:result, M?) -> M?
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:new_execution_run_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionCompletedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionCompletedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionCompletedEventAttributes, WorkflowExecutionCompletedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionCompletedEventAttributes, WorkflowExecutionCompletedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionCompletedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionCompletedEventAttributes | _ToProto]
        end

        class WorkflowExecutionFailedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionFailedEventAttributes) -> String

          # Serialized result of workflow failure (ex: An exception thrown, or error returned)
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # Serialized result of workflow failure (ex: An exception thrown, or error returned)
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          attr_accessor retry_state(): ::Temporalio::Api::Enums::V1::RetryState

          def retry_state=: (::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                          | ...

          def retry_state!: () -> ::Temporalio::Api::Enums::V1::RetryState?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # If another run is started by cron or retry, this contains the new run id.
          #
          attr_accessor new_execution_run_id(): ::String

          def new_execution_run_id!: () -> ::String?

          def initialize: (?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?retry_state: ::Temporalio::Api::Enums::V1::RetryState::init, ?workflow_task_completed_event_id: ::Integer, ?new_execution_run_id: ::String) -> void

          def []: (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:retry_state) -> ::Temporalio::Api::Enums::V1::RetryState
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:new_execution_run_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState) -> ::Temporalio::Api::Enums::V1::RetryState
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:new_execution_run_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionFailedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionFailedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionFailedEventAttributes, WorkflowExecutionFailedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionFailedEventAttributes, WorkflowExecutionFailedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionFailedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionFailedEventAttributes | _ToProto]
        end

        class WorkflowExecutionTimedOutEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionTimedOutEventAttributes) -> String

          attr_accessor retry_state(): ::Temporalio::Api::Enums::V1::RetryState

          def retry_state=: (::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                          | ...

          def retry_state!: () -> ::Temporalio::Api::Enums::V1::RetryState?

          # If another run is started by cron or retry, this contains the new run id.
          #
          attr_accessor new_execution_run_id(): ::String

          def new_execution_run_id!: () -> ::String?

          def initialize: (?retry_state: ::Temporalio::Api::Enums::V1::RetryState::init, ?new_execution_run_id: ::String) -> void

          def []: (:retry_state) -> ::Temporalio::Api::Enums::V1::RetryState
                | (:new_execution_run_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:retry_state, ::Temporalio::Api::Enums::V1::RetryState) -> ::Temporalio::Api::Enums::V1::RetryState
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                 | (:new_execution_run_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionTimedOutEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionTimedOutEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionTimedOutEventAttributes, WorkflowExecutionTimedOutEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionTimedOutEventAttributes, WorkflowExecutionTimedOutEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionTimedOutEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionTimedOutEventAttributes | _ToProto]
        end

        class WorkflowExecutionContinuedAsNewEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionContinuedAsNewEventAttributes) -> String

          # The run ID of the new workflow started by this continue-as-new
          #
          attr_accessor new_execution_run_id(): ::String

          def new_execution_run_id!: () -> ::String?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Timeout of a single workflow run.
          #
          attr_accessor workflow_run_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          def workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                   | ...

          def workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          attr_accessor workflow_task_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          def workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # TODO: How and is this used?
          #
          attr_accessor backoff_start_interval(): ::Google::Protobuf::Duration?

          # TODO: How and is this used?
          #
          def backoff_start_interval=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                     | ...

          def backoff_start_interval!: () -> ::Google::Protobuf::Duration?

          attr_accessor initiator(): ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator

          def initiator=: (::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values
                        | ...

          def initiator!: () -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator?

          # TODO: David are these right?
          #  Deprecated. If a workflow's retry policy would cause a new run to start when the current one
          #  has failed, this field would be populated with that failure. Now (when supported by server
          #  and sdk) the final event will be `WORKFLOW_EXECUTION_FAILED` with `new_execution_run_id` set.
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # TODO: David are these right?
          #  Deprecated. If a workflow's retry policy would cause a new run to start when the current one
          #  has failed, this field would be populated with that failure. Now (when supported by server
          #  and sdk) the final event will be `WORKFLOW_EXECUTION_FAILED` with `new_execution_run_id` set.
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # TODO: Is this the result of *this* workflow as it continued-as-new?
          #
          attr_accessor last_completion_result(): ::Temporalio::Api::Common::V1::Payloads?

          # TODO: Is this the result of *this* workflow as it continued-as-new?
          #
          def last_completion_result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                                     | ...

          def last_completion_result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          attr_accessor memo(): ::Temporalio::Api::Common::V1::Memo?

          def memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          def initialize: (?new_execution_run_id: ::String, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_completed_event_id: ::Integer, ?backoff_start_interval: ::Google::Protobuf::Duration::init?, ?initiator: ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::init, ?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?last_completion_result: ::Temporalio::Api::Common::V1::Payloads::init?, ?header: ::Temporalio::Api::Common::V1::Header::init?, ?memo: ::Temporalio::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?) -> void

          def []: (:new_execution_run_id) -> ::String
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:backoff_start_interval) -> ::Google::Protobuf::Duration?
                | (:initiator) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator
                | (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:last_completion_result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (:memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (::Symbol) -> untyped

          def []=: (:new_execution_run_id, ::String) -> ::String
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_run_timeout, M?) -> M?
                 | (:workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_task_timeout, M?) -> M?
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:backoff_start_interval, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:backoff_start_interval, M?) -> M?
                 | (:initiator, ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator
                 | (:initiator, ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values) -> ::Temporalio::Api::Enums::V1::ContinueAsNewInitiator::values
                 | (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:last_completion_result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:last_completion_result, M?) -> M?
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionContinuedAsNewEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionContinuedAsNewEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionContinuedAsNewEventAttributes, WorkflowExecutionContinuedAsNewEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionContinuedAsNewEventAttributes, WorkflowExecutionContinuedAsNewEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionContinuedAsNewEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionContinuedAsNewEventAttributes | _ToProto]
        end

        class WorkflowTaskScheduledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowTaskScheduledEventAttributes) -> String

          # The task queue this workflow task was enqueued in, which could be a normal or sticky queue
          #
          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # The task queue this workflow task was enqueued in, which could be a normal or sticky queue
          #
          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # How long the worker has to process this task once receiving it before it times out
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor start_to_close_timeout(): ::Google::Protobuf::Duration?

          # How long the worker has to process this task once receiving it before it times out
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def start_to_close_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                     | ...

          def start_to_close_timeout!: () -> ::Google::Protobuf::Duration?

          # Starting at 1, how many attempts there have been to complete this task
          #
          attr_accessor attempt(): ::Integer

          def attempt!: () -> ::Integer?

          def initialize: (?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?start_to_close_timeout: ::Google::Protobuf::Duration::init?, ?attempt: ::Integer) -> void

          def []: (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:start_to_close_timeout) -> ::Google::Protobuf::Duration?
                | (:attempt) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:start_to_close_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:start_to_close_timeout, M?) -> M?
                 | (:attempt, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowTaskScheduledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowTaskScheduledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowTaskScheduledEventAttributes, WorkflowTaskScheduledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowTaskScheduledEventAttributes, WorkflowTaskScheduledEventAttributes | _ToProto]

          type array = ::Array[WorkflowTaskScheduledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowTaskScheduledEventAttributes | _ToProto]
        end

        class WorkflowTaskStartedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowTaskStartedEventAttributes) -> String

          # The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # Identity of the worker who picked up this task
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # TODO: ? Appears unused?
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # True if this workflow should continue-as-new soon because its history size (in
          #  either event count or bytes) is getting large.
          #
          attr_accessor suggest_continue_as_new(): bool

          def suggest_continue_as_new!: () -> bool?

          # Total history size in bytes, which the workflow might use to decide when to
          #  continue-as-new regardless of the suggestion. Note that history event count is
          #  just the event id of this event, so we don't include it explicitly here.
          #
          attr_accessor history_size_bytes(): ::Integer

          def history_size_bytes!: () -> ::Integer?

          def initialize: (?scheduled_event_id: ::Integer, ?identity: ::String, ?request_id: ::String, ?suggest_continue_as_new: bool, ?history_size_bytes: ::Integer) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (:suggest_continue_as_new) -> bool
                | (:history_size_bytes) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (:suggest_continue_as_new, bool) -> bool
                 | (:history_size_bytes, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          def suggest_continue_as_new?: () -> bool

          interface _ToProto
            def to_proto: () -> WorkflowTaskStartedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowTaskStartedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowTaskStartedEventAttributes, WorkflowTaskStartedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowTaskStartedEventAttributes, WorkflowTaskStartedEventAttributes | _ToProto]

          type array = ::Array[WorkflowTaskStartedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowTaskStartedEventAttributes | _ToProto]
        end

        class WorkflowTaskCompletedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowTaskCompletedEventAttributes) -> String

          # The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The id of the `WORKFLOW_TASK_STARTED` event this task corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          # Identity of the worker who completed this task
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Binary ID of the worker who completed this task
          #
          attr_accessor binary_checksum(): ::String

          def binary_checksum!: () -> ::String?

          # ID of the worker who picked up this workflow task, or missing if worker
          #  is not using versioning.
          #
          attr_accessor worker_versioning_id(): ::Temporalio::Api::TaskQueue::V1::VersionId?

          # ID of the worker who picked up this workflow task, or missing if worker
          #  is not using versioning.
          #
          def worker_versioning_id=: [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (M?) -> M?
                                   | ...

          def worker_versioning_id!: () -> ::Temporalio::Api::TaskQueue::V1::VersionId?

          # Data the SDK wishes to record for itself, but server need not interpret, and does not
          #  directly impact workflow state.
          #
          attr_accessor sdk_metadata(): ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata?

          # Data the SDK wishes to record for itself, but server need not interpret, and does not
          #  directly impact workflow state.
          #
          def sdk_metadata=: [M < ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata::_ToProto] (M?) -> M?
                           | ...

          def sdk_metadata!: () -> ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata?

          # Local usage data sent during workflow task completion and recorded here for posterity
          #
          attr_accessor metering_metadata(): ::Temporalio::Api::Common::V1::MeteringMetadata?

          # Local usage data sent during workflow task completion and recorded here for posterity
          #
          def metering_metadata=: [M < ::Temporalio::Api::Common::V1::MeteringMetadata::_ToProto] (M?) -> M?
                                | ...

          def metering_metadata!: () -> ::Temporalio::Api::Common::V1::MeteringMetadata?

          def initialize: (?scheduled_event_id: ::Integer, ?started_event_id: ::Integer, ?identity: ::String, ?binary_checksum: ::String, ?worker_versioning_id: ::Temporalio::Api::TaskQueue::V1::VersionId::init?, ?sdk_metadata: ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata::init?, ?metering_metadata: ::Temporalio::Api::Common::V1::MeteringMetadata::init?) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:identity) -> ::String
                | (:binary_checksum) -> ::String
                | (:worker_versioning_id) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                | (:sdk_metadata) -> ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata?
                | (:metering_metadata) -> ::Temporalio::Api::Common::V1::MeteringMetadata?
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (:binary_checksum, ::String) -> ::String
                 | (:worker_versioning_id, ::Temporalio::Api::TaskQueue::V1::VersionId?) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                 | [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (:worker_versioning_id, M?) -> M?
                 | (:sdk_metadata, ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata?) -> ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata?
                 | [M < ::Temporalio::Api::Sdk::V1::WorkflowTaskCompletedMetadata::_ToProto] (:sdk_metadata, M?) -> M?
                 | (:metering_metadata, ::Temporalio::Api::Common::V1::MeteringMetadata?) -> ::Temporalio::Api::Common::V1::MeteringMetadata?
                 | [M < ::Temporalio::Api::Common::V1::MeteringMetadata::_ToProto] (:metering_metadata, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowTaskCompletedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowTaskCompletedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowTaskCompletedEventAttributes, WorkflowTaskCompletedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowTaskCompletedEventAttributes, WorkflowTaskCompletedEventAttributes | _ToProto]

          type array = ::Array[WorkflowTaskCompletedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowTaskCompletedEventAttributes | _ToProto]
        end

        class WorkflowTaskTimedOutEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowTaskTimedOutEventAttributes) -> String

          # The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The id of the `WORKFLOW_TASK_STARTED` event this task corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          attr_accessor timeout_type(): ::Temporalio::Api::Enums::V1::TimeoutType

          def timeout_type=: (::Temporalio::Api::Enums::V1::TimeoutType::values) -> ::Temporalio::Api::Enums::V1::TimeoutType::values
                           | ...

          def timeout_type!: () -> ::Temporalio::Api::Enums::V1::TimeoutType?

          def initialize: (?scheduled_event_id: ::Integer, ?started_event_id: ::Integer, ?timeout_type: ::Temporalio::Api::Enums::V1::TimeoutType::init) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:timeout_type) -> ::Temporalio::Api::Enums::V1::TimeoutType
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:timeout_type, ::Temporalio::Api::Enums::V1::TimeoutType) -> ::Temporalio::Api::Enums::V1::TimeoutType
                 | (:timeout_type, ::Temporalio::Api::Enums::V1::TimeoutType::values) -> ::Temporalio::Api::Enums::V1::TimeoutType::values
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowTaskTimedOutEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowTaskTimedOutEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowTaskTimedOutEventAttributes, WorkflowTaskTimedOutEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowTaskTimedOutEventAttributes, WorkflowTaskTimedOutEventAttributes | _ToProto]

          type array = ::Array[WorkflowTaskTimedOutEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowTaskTimedOutEventAttributes | _ToProto]
        end

        class WorkflowTaskFailedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowTaskFailedEventAttributes) -> String

          # The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The id of the `WORKFLOW_TASK_STARTED` event this task corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          attr_accessor cause(): ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause

          def cause=: (::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values
                    | ...

          def cause!: () -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause?

          # The failure details
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # The failure details
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # If a worker explicitly failed this task, it's identity. TODO: What is this set to if server fails the task?
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # The original run id of the workflow. For reset workflow.
          #
          attr_accessor base_run_id(): ::String

          def base_run_id!: () -> ::String?

          # If the workflow is being reset, the new run id.
          #
          attr_accessor new_run_id(): ::String

          def new_run_id!: () -> ::String?

          # TODO: ?
          #
          attr_accessor fork_event_version(): ::Integer

          def fork_event_version!: () -> ::Integer?

          # If a worker explicitly failed this task, it's binary id
          #
          attr_accessor binary_checksum(): ::String

          def binary_checksum!: () -> ::String?

          def initialize: (?scheduled_event_id: ::Integer, ?started_event_id: ::Integer, ?cause: ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::init, ?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?identity: ::String, ?base_run_id: ::String, ?new_run_id: ::String, ?fork_event_version: ::Integer, ?binary_checksum: ::String) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:cause) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause
                | (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:identity) -> ::String
                | (:base_run_id) -> ::String
                | (:new_run_id) -> ::String
                | (:fork_event_version) -> ::Integer
                | (:binary_checksum) -> ::String
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:cause, ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause
                 | (:cause, ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values
                 | (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:base_run_id, ::String) -> ::String
                 | (:new_run_id, ::String) -> ::String
                 | (:fork_event_version, ::Integer) -> ::Integer
                 | (:binary_checksum, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowTaskFailedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowTaskFailedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowTaskFailedEventAttributes, WorkflowTaskFailedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowTaskFailedEventAttributes, WorkflowTaskFailedEventAttributes | _ToProto]

          type array = ::Array[WorkflowTaskFailedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowTaskFailedEventAttributes | _ToProto]
        end

        class ActivityTaskScheduledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityTaskScheduledEventAttributes) -> String

          # The worker/user assigned identifier for the activity
          #
          attr_accessor activity_id(): ::String

          def activity_id!: () -> ::String?

          attr_accessor activity_type(): ::Temporalio::Api::Common::V1::ActivityType?

          def activity_type=: [M < ::Temporalio::Api::Common::V1::ActivityType::_ToProto] (M?) -> M?
                            | ...

          def activity_type!: () -> ::Temporalio::Api::Common::V1::ActivityType?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Indicates how long the caller is willing to wait for an activity completion. Limits how long
          #  retries will be attempted. Either this or `start_to_close_timeout` must be specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor schedule_to_close_timeout(): ::Google::Protobuf::Duration?

          # Indicates how long the caller is willing to wait for an activity completion. Limits how long
          #  retries will be attempted. Either this or `start_to_close_timeout` must be specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def schedule_to_close_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                        | ...

          def schedule_to_close_timeout!: () -> ::Google::Protobuf::Duration?

          # Limits time an activity task can stay in a task queue before a worker picks it up. This
          #  timeout is always non retryable, as all a retry would achieve is to put it back into the same
          #  queue. Defaults to `schedule_to_close_timeout` or workflow execution timeout if not
          #  specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor schedule_to_start_timeout(): ::Google::Protobuf::Duration?

          # Limits time an activity task can stay in a task queue before a worker picks it up. This
          #  timeout is always non retryable, as all a retry would achieve is to put it back into the same
          #  queue. Defaults to `schedule_to_close_timeout` or workflow execution timeout if not
          #  specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def schedule_to_start_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                        | ...

          def schedule_to_start_timeout!: () -> ::Google::Protobuf::Duration?

          # Maximum time an activity is allowed to execute after being picked up by a worker. This
          #  timeout is always retryable. Either this or `schedule_to_close_timeout` must be
          #  specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor start_to_close_timeout(): ::Google::Protobuf::Duration?

          # Maximum time an activity is allowed to execute after being picked up by a worker. This
          #  timeout is always retryable. Either this or `schedule_to_close_timeout` must be
          #  specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def start_to_close_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                     | ...

          def start_to_close_timeout!: () -> ::Google::Protobuf::Duration?

          # Maximum permitted time between successful worker heartbeats.
          #
          attr_accessor heartbeat_timeout(): ::Google::Protobuf::Duration?

          # Maximum permitted time between successful worker heartbeats.
          #
          def heartbeat_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                | ...

          def heartbeat_timeout!: () -> ::Google::Protobuf::Duration?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # Activities are assigned a default retry policy controlled by the service's dynamic
          #  configuration. Retries will happen up to `schedule_to_close_timeout`. To disable retries set
          #  retry_policy.maximum_attempts to 1.
          #
          attr_accessor retry_policy(): ::Temporalio::Api::Common::V1::RetryPolicy?

          # Activities are assigned a default retry policy controlled by the service's dynamic
          #  configuration. Retries will happen up to `schedule_to_close_timeout`. To disable retries set
          #  retry_policy.maximum_attempts to 1.
          #
          def retry_policy=: [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporalio::Api::Common::V1::RetryPolicy?

          def initialize: (?activity_id: ::String, ?activity_type: ::Temporalio::Api::Common::V1::ActivityType::init?, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?header: ::Temporalio::Api::Common::V1::Header::init?, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?schedule_to_close_timeout: ::Google::Protobuf::Duration::init?, ?schedule_to_start_timeout: ::Google::Protobuf::Duration::init?, ?start_to_close_timeout: ::Google::Protobuf::Duration::init?, ?heartbeat_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_completed_event_id: ::Integer, ?retry_policy: ::Temporalio::Api::Common::V1::RetryPolicy::init?) -> void

          def []: (:activity_id) -> ::String
                | (:activity_type) -> ::Temporalio::Api::Common::V1::ActivityType?
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:schedule_to_close_timeout) -> ::Google::Protobuf::Duration?
                | (:schedule_to_start_timeout) -> ::Google::Protobuf::Duration?
                | (:start_to_close_timeout) -> ::Google::Protobuf::Duration?
                | (:heartbeat_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:retry_policy) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                | (::Symbol) -> untyped

          def []=: (:activity_id, ::String) -> ::String
                 | (:activity_type, ::Temporalio::Api::Common::V1::ActivityType?) -> ::Temporalio::Api::Common::V1::ActivityType?
                 | [M < ::Temporalio::Api::Common::V1::ActivityType::_ToProto] (:activity_type, M?) -> M?
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:schedule_to_close_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:schedule_to_close_timeout, M?) -> M?
                 | (:schedule_to_start_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:schedule_to_start_timeout, M?) -> M?
                 | (:start_to_close_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:start_to_close_timeout, M?) -> M?
                 | (:heartbeat_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:heartbeat_timeout, M?) -> M?
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:retry_policy, ::Temporalio::Api::Common::V1::RetryPolicy?) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityTaskScheduledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityTaskScheduledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityTaskScheduledEventAttributes, ActivityTaskScheduledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskScheduledEventAttributes, ActivityTaskScheduledEventAttributes | _ToProto]

          type array = ::Array[ActivityTaskScheduledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityTaskScheduledEventAttributes | _ToProto]
        end

        class ActivityTaskStartedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityTaskStartedEventAttributes) -> String

          # The id of the `ACTIVITY_TASK_SCHEDULED` event this task corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # id of the worker that picked up this task
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # TODO ??
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # Starting at 1, the number of times this task has been attempted
          #
          attr_accessor attempt(): ::Integer

          def attempt!: () -> ::Integer?

          # Will be set to the most recent failure details, if this task has previously failed and then
          #  been retried.
          #
          attr_accessor last_failure(): ::Temporalio::Api::Failure::V1::Failure?

          # Will be set to the most recent failure details, if this task has previously failed and then
          #  been retried.
          #
          def last_failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                           | ...

          def last_failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          def initialize: (?scheduled_event_id: ::Integer, ?identity: ::String, ?request_id: ::String, ?attempt: ::Integer, ?last_failure: ::Temporalio::Api::Failure::V1::Failure::init?) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (:attempt) -> ::Integer
                | (:last_failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (:attempt, ::Integer) -> ::Integer
                 | (:last_failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:last_failure, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityTaskStartedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityTaskStartedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityTaskStartedEventAttributes, ActivityTaskStartedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskStartedEventAttributes, ActivityTaskStartedEventAttributes | _ToProto]

          type array = ::Array[ActivityTaskStartedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityTaskStartedEventAttributes | _ToProto]
        end

        class ActivityTaskCompletedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityTaskCompletedEventAttributes) -> String

          # Serialized results of the activity. IE: The return value of the activity function
          #
          attr_accessor result(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized results of the activity. IE: The return value of the activity function
          #
          def result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                     | ...

          def result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The id of the `ACTIVITY_TASK_SCHEDULED` event this completion corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The id of the `ACTIVITY_TASK_STARTED` event this completion corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          # id of the worker that completed this task
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?result: ::Temporalio::Api::Common::V1::Payloads::init?, ?scheduled_event_id: ::Integer, ?started_event_id: ::Integer, ?identity: ::String) -> void

          def []: (:result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:scheduled_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:result, M?) -> M?
                 | (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityTaskCompletedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityTaskCompletedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityTaskCompletedEventAttributes, ActivityTaskCompletedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskCompletedEventAttributes, ActivityTaskCompletedEventAttributes | _ToProto]

          type array = ::Array[ActivityTaskCompletedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityTaskCompletedEventAttributes | _ToProto]
        end

        class ActivityTaskFailedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityTaskFailedEventAttributes) -> String

          # Failure details
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # Failure details
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # The id of the `ACTIVITY_TASK_SCHEDULED` event this failure corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The id of the `ACTIVITY_TASK_STARTED` event this failure corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          # id of the worker that failed this task
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          attr_accessor retry_state(): ::Temporalio::Api::Enums::V1::RetryState

          def retry_state=: (::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                          | ...

          def retry_state!: () -> ::Temporalio::Api::Enums::V1::RetryState?

          def initialize: (?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?scheduled_event_id: ::Integer, ?started_event_id: ::Integer, ?identity: ::String, ?retry_state: ::Temporalio::Api::Enums::V1::RetryState::init) -> void

          def []: (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:scheduled_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:identity) -> ::String
                | (:retry_state) -> ::Temporalio::Api::Enums::V1::RetryState
                | (::Symbol) -> untyped

          def []=: (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState) -> ::Temporalio::Api::Enums::V1::RetryState
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityTaskFailedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityTaskFailedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityTaskFailedEventAttributes, ActivityTaskFailedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskFailedEventAttributes, ActivityTaskFailedEventAttributes | _ToProto]

          type array = ::Array[ActivityTaskFailedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityTaskFailedEventAttributes | _ToProto]
        end

        class ActivityTaskTimedOutEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityTaskTimedOutEventAttributes) -> String

          # If this activity had failed, was retried, and then timed out, that failure is stored as the
          #  `cause` in here.
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # If this activity had failed, was retried, and then timed out, that failure is stored as the
          #  `cause` in here.
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # The id of the `ACTIVITY_TASK_SCHEDULED` event this timeout corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The id of the `ACTIVITY_TASK_STARTED` event this timeout corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          attr_accessor retry_state(): ::Temporalio::Api::Enums::V1::RetryState

          def retry_state=: (::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                          | ...

          def retry_state!: () -> ::Temporalio::Api::Enums::V1::RetryState?

          def initialize: (?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?scheduled_event_id: ::Integer, ?started_event_id: ::Integer, ?retry_state: ::Temporalio::Api::Enums::V1::RetryState::init) -> void

          def []: (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:scheduled_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:retry_state) -> ::Temporalio::Api::Enums::V1::RetryState
                | (::Symbol) -> untyped

          def []=: (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState) -> ::Temporalio::Api::Enums::V1::RetryState
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityTaskTimedOutEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityTaskTimedOutEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityTaskTimedOutEventAttributes, ActivityTaskTimedOutEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskTimedOutEventAttributes, ActivityTaskTimedOutEventAttributes | _ToProto]

          type array = ::Array[ActivityTaskTimedOutEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityTaskTimedOutEventAttributes | _ToProto]
        end

        class ActivityTaskCancelRequestedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityTaskCancelRequestedEventAttributes) -> String

          # The id of the `ACTIVITY_TASK_SCHEDULED` event this cancel request corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          def initialize: (?scheduled_event_id: ::Integer, ?workflow_task_completed_event_id: ::Integer) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (:workflow_task_completed_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityTaskCancelRequestedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityTaskCancelRequestedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityTaskCancelRequestedEventAttributes, ActivityTaskCancelRequestedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskCancelRequestedEventAttributes, ActivityTaskCancelRequestedEventAttributes | _ToProto]

          type array = ::Array[ActivityTaskCancelRequestedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityTaskCancelRequestedEventAttributes | _ToProto]
        end

        class ActivityTaskCanceledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityTaskCanceledEventAttributes) -> String

          # Additional information that the activity reported upon confirming cancellation
          #
          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          # Additional information that the activity reported upon confirming cancellation
          #
          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # id of the most recent `ACTIVITY_TASK_CANCEL_REQUESTED` event which refers to the same
          #  activity
          #
          attr_accessor latest_cancel_requested_event_id(): ::Integer

          def latest_cancel_requested_event_id!: () -> ::Integer?

          # The id of the `ACTIVITY_TASK_SCHEDULED` event this cancel confirmation corresponds to
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # The id of the `ACTIVITY_TASK_STARTED` event this cancel confirmation corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          # id of the worker who canceled this activity
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?latest_cancel_requested_event_id: ::Integer, ?scheduled_event_id: ::Integer, ?started_event_id: ::Integer, ?identity: ::String) -> void

          def []: (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:latest_cancel_requested_event_id) -> ::Integer
                | (:scheduled_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:latest_cancel_requested_event_id, ::Integer) -> ::Integer
                 | (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityTaskCanceledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityTaskCanceledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityTaskCanceledEventAttributes, ActivityTaskCanceledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityTaskCanceledEventAttributes, ActivityTaskCanceledEventAttributes | _ToProto]

          type array = ::Array[ActivityTaskCanceledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityTaskCanceledEventAttributes | _ToProto]
        end

        class TimerStartedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (TimerStartedEventAttributes) -> String

          # The worker/user assigned id for this timer
          #
          attr_accessor timer_id(): ::String

          def timer_id!: () -> ::String?

          # How long until this timer fires
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor start_to_fire_timeout(): ::Google::Protobuf::Duration?

          # How long until this timer fires
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def start_to_fire_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def start_to_fire_timeout!: () -> ::Google::Protobuf::Duration?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          def initialize: (?timer_id: ::String, ?start_to_fire_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_completed_event_id: ::Integer) -> void

          def []: (:timer_id) -> ::String
                | (:start_to_fire_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_completed_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:timer_id, ::String) -> ::String
                 | (:start_to_fire_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:start_to_fire_timeout, M?) -> M?
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> TimerStartedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = TimerStartedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[TimerStartedEventAttributes, TimerStartedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, TimerStartedEventAttributes, TimerStartedEventAttributes | _ToProto]

          type array = ::Array[TimerStartedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, TimerStartedEventAttributes | _ToProto]
        end

        class TimerFiredEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (TimerFiredEventAttributes) -> String

          # Will match the `timer_id` from `TIMER_STARTED` event for this timer
          #
          attr_accessor timer_id(): ::String

          def timer_id!: () -> ::String?

          # The id of the `TIMER_STARTED` event itself
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          def initialize: (?timer_id: ::String, ?started_event_id: ::Integer) -> void

          def []: (:timer_id) -> ::String
                | (:started_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:timer_id, ::String) -> ::String
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> TimerFiredEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = TimerFiredEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[TimerFiredEventAttributes, TimerFiredEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, TimerFiredEventAttributes, TimerFiredEventAttributes | _ToProto]

          type array = ::Array[TimerFiredEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, TimerFiredEventAttributes | _ToProto]
        end

        class TimerCanceledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (TimerCanceledEventAttributes) -> String

          # Will match the `timer_id` from `TIMER_STARTED` event for this timer
          #
          attr_accessor timer_id(): ::String

          def timer_id!: () -> ::String?

          # The id of the `TIMER_STARTED` event itself
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # The id of the worker who requested this cancel
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?timer_id: ::String, ?started_event_id: ::Integer, ?workflow_task_completed_event_id: ::Integer, ?identity: ::String) -> void

          def []: (:timer_id) -> ::String
                | (:started_event_id) -> ::Integer
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:timer_id, ::String) -> ::String
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> TimerCanceledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = TimerCanceledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[TimerCanceledEventAttributes, TimerCanceledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, TimerCanceledEventAttributes, TimerCanceledEventAttributes | _ToProto]

          type array = ::Array[TimerCanceledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, TimerCanceledEventAttributes | _ToProto]
        end

        class WorkflowExecutionCancelRequestedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionCancelRequestedEventAttributes) -> String

          # User provided reason for requesting cancellation
          #  TODO: shall we create a new field with name "reason" and deprecate this one?
          #
          attr_accessor cause(): ::String

          def cause!: () -> ::String?

          # TODO: Is this the ID of the event in the workflow which initiated this cancel, if there was one?
          #
          attr_accessor external_initiated_event_id(): ::Integer

          def external_initiated_event_id!: () -> ::Integer?

          attr_accessor external_workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def external_workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                          | ...

          def external_workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # id of the worker or client who requested this cancel
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?cause: ::String, ?external_initiated_event_id: ::Integer, ?external_workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?identity: ::String) -> void

          def []: (:cause) -> ::String
                | (:external_initiated_event_id) -> ::Integer
                | (:external_workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:cause, ::String) -> ::String
                 | (:external_initiated_event_id, ::Integer) -> ::Integer
                 | (:external_workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:external_workflow_execution, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionCancelRequestedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionCancelRequestedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionCancelRequestedEventAttributes, WorkflowExecutionCancelRequestedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionCancelRequestedEventAttributes, WorkflowExecutionCancelRequestedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionCancelRequestedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionCancelRequestedEventAttributes | _ToProto]
        end

        class WorkflowExecutionCanceledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionCanceledEventAttributes) -> String

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          def initialize: (?workflow_task_completed_event_id: ::Integer, ?details: ::Temporalio::Api::Common::V1::Payloads::init?) -> void

          def []: (:workflow_task_completed_event_id) -> ::Integer
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (::Symbol) -> untyped

          def []=: (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionCanceledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionCanceledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionCanceledEventAttributes, WorkflowExecutionCanceledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionCanceledEventAttributes, WorkflowExecutionCanceledEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionCanceledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionCanceledEventAttributes | _ToProto]
        end

        class MarkerRecordedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (MarkerRecordedEventAttributes) -> String

          # Workers use this to identify the "types" of various markers. Ex: Local activity, side effect.
          #
          attr_accessor marker_name(): ::String

          def marker_name!: () -> ::String?

          # Serialized information recorded in the marker
          #
          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads::field_hash[::String]

          # Serialized information recorded in the marker
          #
          def details=: (::Temporalio::Api::Common::V1::Payloads::hash[::String]) -> ::Temporalio::Api::Common::V1::Payloads::hash[::String]
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads::field_hash[::String]?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          # Some uses of markers, like a local activity, could "fail". If they did that is recorded here.
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # Some uses of markers, like a local activity, could "fail". If they did that is recorded here.
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          def initialize: (?marker_name: ::String, ?details: ::Temporalio::Api::Common::V1::Payloads::hash[::String], ?workflow_task_completed_event_id: ::Integer, ?header: ::Temporalio::Api::Common::V1::Header::init?, ?failure: ::Temporalio::Api::Failure::V1::Failure::init?) -> void

          def []: (:marker_name) -> ::String
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads::field_hash[::String]
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (::Symbol) -> untyped

          def []=: (:marker_name, ::String) -> ::String
                 | (:details, ::Temporalio::Api::Common::V1::Payloads::field_hash[::String]) -> ::Temporalio::Api::Common::V1::Payloads::field_hash[::String]
                 | (:details, ::Temporalio::Api::Common::V1::Payloads::hash[::String]) -> ::Temporalio::Api::Common::V1::Payloads::hash[::String]
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> MarkerRecordedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = MarkerRecordedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[MarkerRecordedEventAttributes, MarkerRecordedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, MarkerRecordedEventAttributes, MarkerRecordedEventAttributes | _ToProto]

          type array = ::Array[MarkerRecordedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, MarkerRecordedEventAttributes | _ToProto]
        end

        class WorkflowExecutionSignaledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionSignaledEventAttributes) -> String

          # The name/type of the signal to fire
          #
          attr_accessor signal_name(): ::String

          def signal_name!: () -> ::String?

          # Will be deserialized and provided as argument(s) to the signal handler
          #
          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          # Will be deserialized and provided as argument(s) to the signal handler
          #
          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # id of the worker/client who sent this signal
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Headers that were passed by the sender of the signal and copied by temporal 
          #  server into the workflow task.
          #
          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          # Headers that were passed by the sender of the signal and copied by temporal 
          #  server into the workflow task.
          #
          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          def initialize: (?signal_name: ::String, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String, ?header: ::Temporalio::Api::Common::V1::Header::init?) -> void

          def []: (:signal_name) -> ::String
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (::Symbol) -> untyped

          def []=: (:signal_name, ::String) -> ::String
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionSignaledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionSignaledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionSignaledEventAttributes, WorkflowExecutionSignaledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionSignaledEventAttributes, WorkflowExecutionSignaledEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionSignaledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionSignaledEventAttributes | _ToProto]
        end

        class WorkflowExecutionTerminatedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionTerminatedEventAttributes) -> String

          # User/client provided reason for termination
          #
          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # id of the client who requested termination
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?reason: ::String, ?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String) -> void

          def []: (:reason) -> ::String
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:reason, ::String) -> ::String
                 | (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionTerminatedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionTerminatedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionTerminatedEventAttributes, WorkflowExecutionTerminatedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionTerminatedEventAttributes, WorkflowExecutionTerminatedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionTerminatedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionTerminatedEventAttributes | _ToProto]
        end

        class RequestCancelExternalWorkflowExecutionInitiatedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (RequestCancelExternalWorkflowExecutionInitiatedEventAttributes) -> String

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # The namespace the workflow to be cancelled lives in.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Workers are expected to set this to true if the workflow they are requesting to cancel is
          #  a child of the workflow which issued the request
          #
          attr_accessor child_workflow_only(): bool

          def child_workflow_only!: () -> bool?

          # Reason for requesting the cancellation
          #
          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          def initialize: (?workflow_task_completed_event_id: ::Integer, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?control: ::String, ?child_workflow_only: bool, ?reason: ::String) -> void

          def []: (:workflow_task_completed_event_id) -> ::Integer
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:control) -> ::String
                | (:child_workflow_only) -> bool
                | (:reason) -> ::String
                | (::Symbol) -> untyped

          def []=: (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:control, ::String) -> ::String
                 | (:child_workflow_only, bool) -> bool
                 | (:reason, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          def child_workflow_only?: () -> bool

          interface _ToProto
            def to_proto: () -> RequestCancelExternalWorkflowExecutionInitiatedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = RequestCancelExternalWorkflowExecutionInitiatedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RequestCancelExternalWorkflowExecutionInitiatedEventAttributes, RequestCancelExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RequestCancelExternalWorkflowExecutionInitiatedEventAttributes, RequestCancelExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]

          type array = ::Array[RequestCancelExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, RequestCancelExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]
        end

        class RequestCancelExternalWorkflowExecutionFailedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (RequestCancelExternalWorkflowExecutionFailedEventAttributes) -> String

          attr_accessor cause(): ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause

          def cause=: (::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause::values) -> ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause::values
                    | ...

          def cause!: () -> ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # Namespace of the workflow which failed to cancel.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # id of the `REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED` event this failure
          #  corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          def initialize: (?cause: ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause::init, ?workflow_task_completed_event_id: ::Integer, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?initiated_event_id: ::Integer, ?control: ::String) -> void

          def []: (:cause) -> ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:initiated_event_id) -> ::Integer
                | (:control) -> ::String
                | (::Symbol) -> untyped

          def []=: (:cause, ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause) -> ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause
                 | (:cause, ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause::values) -> ::Temporalio::Api::Enums::V1::CancelExternalWorkflowExecutionFailedCause::values
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:control, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RequestCancelExternalWorkflowExecutionFailedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = RequestCancelExternalWorkflowExecutionFailedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RequestCancelExternalWorkflowExecutionFailedEventAttributes, RequestCancelExternalWorkflowExecutionFailedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RequestCancelExternalWorkflowExecutionFailedEventAttributes, RequestCancelExternalWorkflowExecutionFailedEventAttributes | _ToProto]

          type array = ::Array[RequestCancelExternalWorkflowExecutionFailedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, RequestCancelExternalWorkflowExecutionFailedEventAttributes | _ToProto]
        end

        class ExternalWorkflowExecutionCancelRequestedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ExternalWorkflowExecutionCancelRequestedEventAttributes) -> String

          # id of the `REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED` event this event corresponds
          #  to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Namespace of the to-be-cancelled workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          def initialize: (?initiated_event_id: ::Integer, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?) -> void

          def []: (:initiated_event_id) -> ::Integer
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (::Symbol) -> untyped

          def []=: (:initiated_event_id, ::Integer) -> ::Integer
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ExternalWorkflowExecutionCancelRequestedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ExternalWorkflowExecutionCancelRequestedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ExternalWorkflowExecutionCancelRequestedEventAttributes, ExternalWorkflowExecutionCancelRequestedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ExternalWorkflowExecutionCancelRequestedEventAttributes, ExternalWorkflowExecutionCancelRequestedEventAttributes | _ToProto]

          type array = ::Array[ExternalWorkflowExecutionCancelRequestedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ExternalWorkflowExecutionCancelRequestedEventAttributes | _ToProto]
        end

        class SignalExternalWorkflowExecutionInitiatedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (SignalExternalWorkflowExecutionInitiatedEventAttributes) -> String

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # Namespace of the to-be-signalled workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # name/type of the signal to fire in the external workflow
          #
          attr_accessor signal_name(): ::String

          def signal_name!: () -> ::String?

          # Serialized arguments to provide to the signal handler
          #
          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized arguments to provide to the signal handler
          #
          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Workers are expected to set this to true if the workflow they are requesting to cancel is
          #  a child of the workflow which issued the request
          #
          attr_accessor child_workflow_only(): bool

          def child_workflow_only!: () -> bool?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          def initialize: (?workflow_task_completed_event_id: ::Integer, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?signal_name: ::String, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?control: ::String, ?child_workflow_only: bool, ?header: ::Temporalio::Api::Common::V1::Header::init?) -> void

          def []: (:workflow_task_completed_event_id) -> ::Integer
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:signal_name) -> ::String
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:control) -> ::String
                | (:child_workflow_only) -> bool
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (::Symbol) -> untyped

          def []=: (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:signal_name, ::String) -> ::String
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:control, ::String) -> ::String
                 | (:child_workflow_only, bool) -> bool
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          def child_workflow_only?: () -> bool

          interface _ToProto
            def to_proto: () -> SignalExternalWorkflowExecutionInitiatedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = SignalExternalWorkflowExecutionInitiatedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalExternalWorkflowExecutionInitiatedEventAttributes, SignalExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalExternalWorkflowExecutionInitiatedEventAttributes, SignalExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]

          type array = ::Array[SignalExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, SignalExternalWorkflowExecutionInitiatedEventAttributes | _ToProto]
        end

        class SignalExternalWorkflowExecutionFailedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (SignalExternalWorkflowExecutionFailedEventAttributes) -> String

          attr_accessor cause(): ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause

          def cause=: (::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause::values) -> ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause::values
                    | ...

          def cause!: () -> ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # Namespace of the workflow which failed the signal.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          def initialize: (?cause: ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause::init, ?workflow_task_completed_event_id: ::Integer, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?initiated_event_id: ::Integer, ?control: ::String) -> void

          def []: (:cause) -> ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:initiated_event_id) -> ::Integer
                | (:control) -> ::String
                | (::Symbol) -> untyped

          def []=: (:cause, ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause) -> ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause
                 | (:cause, ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause::values) -> ::Temporalio::Api::Enums::V1::SignalExternalWorkflowExecutionFailedCause::values
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:control, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> SignalExternalWorkflowExecutionFailedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = SignalExternalWorkflowExecutionFailedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalExternalWorkflowExecutionFailedEventAttributes, SignalExternalWorkflowExecutionFailedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalExternalWorkflowExecutionFailedEventAttributes, SignalExternalWorkflowExecutionFailedEventAttributes | _ToProto]

          type array = ::Array[SignalExternalWorkflowExecutionFailedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, SignalExternalWorkflowExecutionFailedEventAttributes | _ToProto]
        end

        class ExternalWorkflowExecutionSignaledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ExternalWorkflowExecutionSignaledEventAttributes) -> String

          # id of the `SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED` event this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Namespace of the workflow which was signaled.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          def initialize: (?initiated_event_id: ::Integer, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?control: ::String) -> void

          def []: (:initiated_event_id) -> ::Integer
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:control) -> ::String
                | (::Symbol) -> untyped

          def []=: (:initiated_event_id, ::Integer) -> ::Integer
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:control, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ExternalWorkflowExecutionSignaledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ExternalWorkflowExecutionSignaledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ExternalWorkflowExecutionSignaledEventAttributes, ExternalWorkflowExecutionSignaledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ExternalWorkflowExecutionSignaledEventAttributes, ExternalWorkflowExecutionSignaledEventAttributes | _ToProto]

          type array = ::Array[ExternalWorkflowExecutionSignaledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ExternalWorkflowExecutionSignaledEventAttributes | _ToProto]
        end

        class UpsertWorkflowSearchAttributesEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (UpsertWorkflowSearchAttributesEventAttributes) -> String

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          def initialize: (?workflow_task_completed_event_id: ::Integer, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?) -> void

          def []: (:workflow_task_completed_event_id) -> ::Integer
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (::Symbol) -> untyped

          def []=: (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> UpsertWorkflowSearchAttributesEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = UpsertWorkflowSearchAttributesEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpsertWorkflowSearchAttributesEventAttributes, UpsertWorkflowSearchAttributesEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpsertWorkflowSearchAttributesEventAttributes, UpsertWorkflowSearchAttributesEventAttributes | _ToProto]

          type array = ::Array[UpsertWorkflowSearchAttributesEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpsertWorkflowSearchAttributesEventAttributes | _ToProto]
        end

        class WorkflowPropertiesModifiedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowPropertiesModifiedEventAttributes) -> String

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # If set, update the workflow memo with the provided values. The values will be merged with
          #  the existing memo. If the user wants to delete values, a default/empty Payload should be
          #  used as the value for the key being deleted.
          #
          attr_accessor upserted_memo(): ::Temporalio::Api::Common::V1::Memo?

          # If set, update the workflow memo with the provided values. The values will be merged with
          #  the existing memo. If the user wants to delete values, a default/empty Payload should be
          #  used as the value for the key being deleted.
          #
          def upserted_memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                            | ...

          def upserted_memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          def initialize: (?workflow_task_completed_event_id: ::Integer, ?upserted_memo: ::Temporalio::Api::Common::V1::Memo::init?) -> void

          def []: (:workflow_task_completed_event_id) -> ::Integer
                | (:upserted_memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (::Symbol) -> untyped

          def []=: (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:upserted_memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:upserted_memo, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowPropertiesModifiedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowPropertiesModifiedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowPropertiesModifiedEventAttributes, WorkflowPropertiesModifiedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowPropertiesModifiedEventAttributes, WorkflowPropertiesModifiedEventAttributes | _ToProto]

          type array = ::Array[WorkflowPropertiesModifiedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowPropertiesModifiedEventAttributes | _ToProto]
        end

        class StartChildWorkflowExecutionInitiatedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (StartChildWorkflowExecutionInitiatedEventAttributes) -> String

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Total workflow execution timeout including retries and continue as new.
          #
          attr_accessor workflow_execution_timeout(): ::Google::Protobuf::Duration?

          # Total workflow execution timeout including retries and continue as new.
          #
          def workflow_execution_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                         | ...

          def workflow_execution_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          attr_accessor workflow_run_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          def workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                   | ...

          def workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          attr_accessor workflow_task_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          def workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # Default: PARENT_CLOSE_POLICY_TERMINATE.
          #
          attr_accessor parent_close_policy(): ::Temporalio::Api::Enums::V1::ParentClosePolicy

          # Default: PARENT_CLOSE_POLICY_TERMINATE.
          #
          def parent_close_policy=: (::Temporalio::Api::Enums::V1::ParentClosePolicy::values) -> ::Temporalio::Api::Enums::V1::ParentClosePolicy::values
                                  | ...

          def parent_close_policy!: () -> ::Temporalio::Api::Enums::V1::ParentClosePolicy?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          # Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          attr_accessor workflow_id_reuse_policy(): ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy

          # Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          def workflow_id_reuse_policy=: (::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values
                                       | ...

          def workflow_id_reuse_policy!: () -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy?

          attr_accessor retry_policy(): ::Temporalio::Api::Common::V1::RetryPolicy?

          def retry_policy=: [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporalio::Api::Common::V1::RetryPolicy?

          # If this child runs on a cron schedule, it will appear here
          #
          attr_accessor cron_schedule(): ::String

          def cron_schedule!: () -> ::String?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          attr_accessor memo(): ::Temporalio::Api::Common::V1::Memo?

          def memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          def initialize: (?namespace: ::String, ?namespace_id: ::String, ?workflow_id: ::String, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?workflow_execution_timeout: ::Google::Protobuf::Duration::init?, ?workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?parent_close_policy: ::Temporalio::Api::Enums::V1::ParentClosePolicy::init, ?control: ::String, ?workflow_task_completed_event_id: ::Integer, ?workflow_id_reuse_policy: ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::init, ?retry_policy: ::Temporalio::Api::Common::V1::RetryPolicy::init?, ?cron_schedule: ::String, ?header: ::Temporalio::Api::Common::V1::Header::init?, ?memo: ::Temporalio::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?) -> void

          def []: (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_id) -> ::String
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:workflow_execution_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:parent_close_policy) -> ::Temporalio::Api::Enums::V1::ParentClosePolicy
                | (:control) -> ::String
                | (:workflow_task_completed_event_id) -> ::Integer
                | (:workflow_id_reuse_policy) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy
                | (:retry_policy) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                | (:cron_schedule) -> ::String
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (:memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:workflow_execution_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_execution_timeout, M?) -> M?
                 | (:workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_run_timeout, M?) -> M?
                 | (:workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_task_timeout, M?) -> M?
                 | (:parent_close_policy, ::Temporalio::Api::Enums::V1::ParentClosePolicy) -> ::Temporalio::Api::Enums::V1::ParentClosePolicy
                 | (:parent_close_policy, ::Temporalio::Api::Enums::V1::ParentClosePolicy::values) -> ::Temporalio::Api::Enums::V1::ParentClosePolicy::values
                 | (:control, ::String) -> ::String
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (:workflow_id_reuse_policy, ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy
                 | (:workflow_id_reuse_policy, ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values
                 | (:retry_policy, ::Temporalio::Api::Common::V1::RetryPolicy?) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (:cron_schedule, ::String) -> ::String
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StartChildWorkflowExecutionInitiatedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = StartChildWorkflowExecutionInitiatedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartChildWorkflowExecutionInitiatedEventAttributes, StartChildWorkflowExecutionInitiatedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartChildWorkflowExecutionInitiatedEventAttributes, StartChildWorkflowExecutionInitiatedEventAttributes | _ToProto]

          type array = ::Array[StartChildWorkflowExecutionInitiatedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartChildWorkflowExecutionInitiatedEventAttributes | _ToProto]
        end

        class StartChildWorkflowExecutionFailedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (StartChildWorkflowExecutionFailedEventAttributes) -> String

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          attr_accessor cause(): ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause

          def cause=: (::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause::values) -> ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause::values
                    | ...

          def cause!: () -> ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Id of the `START_CHILD_WORKFLOW_EXECUTION_INITIATED` event which this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # The `WORKFLOW_TASK_COMPLETED` event which this command was reported with
          #
          attr_accessor workflow_task_completed_event_id(): ::Integer

          def workflow_task_completed_event_id!: () -> ::Integer?

          def initialize: (?namespace: ::String, ?namespace_id: ::String, ?workflow_id: ::String, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?cause: ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause::init, ?control: ::String, ?initiated_event_id: ::Integer, ?workflow_task_completed_event_id: ::Integer) -> void

          def []: (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_id) -> ::String
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:cause) -> ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause
                | (:control) -> ::String
                | (:initiated_event_id) -> ::Integer
                | (:workflow_task_completed_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:cause, ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause) -> ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause
                 | (:cause, ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause::values) -> ::Temporalio::Api::Enums::V1::StartChildWorkflowExecutionFailedCause::values
                 | (:control, ::String) -> ::String
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:workflow_task_completed_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StartChildWorkflowExecutionFailedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = StartChildWorkflowExecutionFailedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartChildWorkflowExecutionFailedEventAttributes, StartChildWorkflowExecutionFailedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartChildWorkflowExecutionFailedEventAttributes, StartChildWorkflowExecutionFailedEventAttributes | _ToProto]

          type array = ::Array[StartChildWorkflowExecutionFailedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartChildWorkflowExecutionFailedEventAttributes | _ToProto]
        end

        class ChildWorkflowExecutionStartedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ChildWorkflowExecutionStartedEventAttributes) -> String

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          # Id of the `START_CHILD_WORKFLOW_EXECUTION_INITIATED` event which this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          def initialize: (?namespace: ::String, ?namespace_id: ::String, ?initiated_event_id: ::Integer, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?header: ::Temporalio::Api::Common::V1::Header::init?) -> void

          def []: (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:initiated_event_id) -> ::Integer
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ChildWorkflowExecutionStartedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ChildWorkflowExecutionStartedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ChildWorkflowExecutionStartedEventAttributes, ChildWorkflowExecutionStartedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ChildWorkflowExecutionStartedEventAttributes, ChildWorkflowExecutionStartedEventAttributes | _ToProto]

          type array = ::Array[ChildWorkflowExecutionStartedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ChildWorkflowExecutionStartedEventAttributes | _ToProto]
        end

        class ChildWorkflowExecutionCompletedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ChildWorkflowExecutionCompletedEventAttributes) -> String

          attr_accessor result(): ::Temporalio::Api::Common::V1::Payloads?

          def result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                     | ...

          def result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # Id of the `START_CHILD_WORKFLOW_EXECUTION_INITIATED` event which this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Id of the `CHILD_WORKFLOW_EXECUTION_STARTED` event which this event corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          def initialize: (?result: ::Temporalio::Api::Common::V1::Payloads::init?, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?initiated_event_id: ::Integer, ?started_event_id: ::Integer) -> void

          def []: (:result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:initiated_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:result, M?) -> M?
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ChildWorkflowExecutionCompletedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ChildWorkflowExecutionCompletedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ChildWorkflowExecutionCompletedEventAttributes, ChildWorkflowExecutionCompletedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ChildWorkflowExecutionCompletedEventAttributes, ChildWorkflowExecutionCompletedEventAttributes | _ToProto]

          type array = ::Array[ChildWorkflowExecutionCompletedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ChildWorkflowExecutionCompletedEventAttributes | _ToProto]
        end

        class ChildWorkflowExecutionFailedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ChildWorkflowExecutionFailedEventAttributes) -> String

          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # Id of the `START_CHILD_WORKFLOW_EXECUTION_INITIATED` event which this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Id of the `CHILD_WORKFLOW_EXECUTION_STARTED` event which this event corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          attr_accessor retry_state(): ::Temporalio::Api::Enums::V1::RetryState

          def retry_state=: (::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                          | ...

          def retry_state!: () -> ::Temporalio::Api::Enums::V1::RetryState?

          def initialize: (?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?initiated_event_id: ::Integer, ?started_event_id: ::Integer, ?retry_state: ::Temporalio::Api::Enums::V1::RetryState::init) -> void

          def []: (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:initiated_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:retry_state) -> ::Temporalio::Api::Enums::V1::RetryState
                | (::Symbol) -> untyped

          def []=: (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState) -> ::Temporalio::Api::Enums::V1::RetryState
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ChildWorkflowExecutionFailedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ChildWorkflowExecutionFailedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ChildWorkflowExecutionFailedEventAttributes, ChildWorkflowExecutionFailedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ChildWorkflowExecutionFailedEventAttributes, ChildWorkflowExecutionFailedEventAttributes | _ToProto]

          type array = ::Array[ChildWorkflowExecutionFailedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ChildWorkflowExecutionFailedEventAttributes | _ToProto]
        end

        class ChildWorkflowExecutionCanceledEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ChildWorkflowExecutionCanceledEventAttributes) -> String

          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # Id of the `START_CHILD_WORKFLOW_EXECUTION_INITIATED` event which this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Id of the `CHILD_WORKFLOW_EXECUTION_STARTED` event which this event corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          def initialize: (?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?initiated_event_id: ::Integer, ?started_event_id: ::Integer) -> void

          def []: (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:initiated_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ChildWorkflowExecutionCanceledEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ChildWorkflowExecutionCanceledEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ChildWorkflowExecutionCanceledEventAttributes, ChildWorkflowExecutionCanceledEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ChildWorkflowExecutionCanceledEventAttributes, ChildWorkflowExecutionCanceledEventAttributes | _ToProto]

          type array = ::Array[ChildWorkflowExecutionCanceledEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ChildWorkflowExecutionCanceledEventAttributes | _ToProto]
        end

        class ChildWorkflowExecutionTimedOutEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ChildWorkflowExecutionTimedOutEventAttributes) -> String

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # Id of the `START_CHILD_WORKFLOW_EXECUTION_INITIATED` event which this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Id of the `CHILD_WORKFLOW_EXECUTION_STARTED` event which this event corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          attr_accessor retry_state(): ::Temporalio::Api::Enums::V1::RetryState

          def retry_state=: (::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                          | ...

          def retry_state!: () -> ::Temporalio::Api::Enums::V1::RetryState?

          def initialize: (?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?initiated_event_id: ::Integer, ?started_event_id: ::Integer, ?retry_state: ::Temporalio::Api::Enums::V1::RetryState::init) -> void

          def []: (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:initiated_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:retry_state) -> ::Temporalio::Api::Enums::V1::RetryState
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState) -> ::Temporalio::Api::Enums::V1::RetryState
                 | (:retry_state, ::Temporalio::Api::Enums::V1::RetryState::values) -> ::Temporalio::Api::Enums::V1::RetryState::values
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ChildWorkflowExecutionTimedOutEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ChildWorkflowExecutionTimedOutEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ChildWorkflowExecutionTimedOutEventAttributes, ChildWorkflowExecutionTimedOutEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ChildWorkflowExecutionTimedOutEventAttributes, ChildWorkflowExecutionTimedOutEventAttributes | _ToProto]

          type array = ::Array[ChildWorkflowExecutionTimedOutEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ChildWorkflowExecutionTimedOutEventAttributes | _ToProto]
        end

        class ChildWorkflowExecutionTerminatedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ChildWorkflowExecutionTerminatedEventAttributes) -> String

          # Namespace of the child workflow.
          #  SDKs and UI tools should use `namespace` field but server must use `namespace_id` only.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor namespace_id(): ::String

          def namespace_id!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # Id of the `START_CHILD_WORKFLOW_EXECUTION_INITIATED` event which this event corresponds to
          #
          attr_accessor initiated_event_id(): ::Integer

          def initiated_event_id!: () -> ::Integer?

          # Id of the `CHILD_WORKFLOW_EXECUTION_STARTED` event which this event corresponds to
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          def initialize: (?namespace: ::String, ?namespace_id: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?initiated_event_id: ::Integer, ?started_event_id: ::Integer) -> void

          def []: (:namespace) -> ::String
                | (:namespace_id) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:initiated_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:namespace_id, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:initiated_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ChildWorkflowExecutionTerminatedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ChildWorkflowExecutionTerminatedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ChildWorkflowExecutionTerminatedEventAttributes, ChildWorkflowExecutionTerminatedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ChildWorkflowExecutionTerminatedEventAttributes, ChildWorkflowExecutionTerminatedEventAttributes | _ToProto]

          type array = ::Array[ChildWorkflowExecutionTerminatedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ChildWorkflowExecutionTerminatedEventAttributes | _ToProto]
        end

        class WorkflowPropertiesModifiedExternallyEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowPropertiesModifiedExternallyEventAttributes) -> String

          # If set to a nonempty string, future workflow tasks for this workflow shall be dispatched on
          #  the provided queue.
          #
          attr_accessor new_task_queue(): ::String

          def new_task_queue!: () -> ::String?

          # If set, update the workflow task timeout to this value.
          #
          attr_accessor new_workflow_task_timeout(): ::Google::Protobuf::Duration?

          # If set, update the workflow task timeout to this value.
          #
          def new_workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                        | ...

          def new_workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # If set, update the workflow run timeout to this value. May be set to 0 for no timeout.
          #
          attr_accessor new_workflow_run_timeout(): ::Google::Protobuf::Duration?

          # If set, update the workflow run timeout to this value. May be set to 0 for no timeout.
          #
          def new_workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                       | ...

          def new_workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # If set, update the workflow execution timeout to this value. May be set to 0 for no timeout.
          #
          attr_accessor new_workflow_execution_timeout(): ::Google::Protobuf::Duration?

          # If set, update the workflow execution timeout to this value. May be set to 0 for no timeout.
          #
          def new_workflow_execution_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                             | ...

          def new_workflow_execution_timeout!: () -> ::Google::Protobuf::Duration?

          # If set, update the workflow memo with the provided values. The values will be merged with
          #  the existing memo. If the user wants to delete values, a default/empty Payload should be
          #  used as the value for the key being deleted.
          #
          attr_accessor upserted_memo(): ::Temporalio::Api::Common::V1::Memo?

          # If set, update the workflow memo with the provided values. The values will be merged with
          #  the existing memo. If the user wants to delete values, a default/empty Payload should be
          #  used as the value for the key being deleted.
          #
          def upserted_memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                            | ...

          def upserted_memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          def initialize: (?new_task_queue: ::String, ?new_workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?new_workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?new_workflow_execution_timeout: ::Google::Protobuf::Duration::init?, ?upserted_memo: ::Temporalio::Api::Common::V1::Memo::init?) -> void

          def []: (:new_task_queue) -> ::String
                | (:new_workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:new_workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:new_workflow_execution_timeout) -> ::Google::Protobuf::Duration?
                | (:upserted_memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (::Symbol) -> untyped

          def []=: (:new_task_queue, ::String) -> ::String
                 | (:new_workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:new_workflow_task_timeout, M?) -> M?
                 | (:new_workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:new_workflow_run_timeout, M?) -> M?
                 | (:new_workflow_execution_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:new_workflow_execution_timeout, M?) -> M?
                 | (:upserted_memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:upserted_memo, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowPropertiesModifiedExternallyEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowPropertiesModifiedExternallyEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowPropertiesModifiedExternallyEventAttributes, WorkflowPropertiesModifiedExternallyEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowPropertiesModifiedExternallyEventAttributes, WorkflowPropertiesModifiedExternallyEventAttributes | _ToProto]

          type array = ::Array[WorkflowPropertiesModifiedExternallyEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowPropertiesModifiedExternallyEventAttributes | _ToProto]
        end

        class ActivityPropertiesModifiedExternallyEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (ActivityPropertiesModifiedExternallyEventAttributes) -> String

          # The id of the `ACTIVITY_TASK_SCHEDULED` event this modification corresponds to.
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          # If set, update the retry policy of the activity, replacing it with the specified one.
          #  The number of attempts at the activity is preserved.
          #
          attr_accessor new_retry_policy(): ::Temporalio::Api::Common::V1::RetryPolicy?

          # If set, update the retry policy of the activity, replacing it with the specified one.
          #  The number of attempts at the activity is preserved.
          #
          def new_retry_policy=: [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                               | ...

          def new_retry_policy!: () -> ::Temporalio::Api::Common::V1::RetryPolicy?

          def initialize: (?scheduled_event_id: ::Integer, ?new_retry_policy: ::Temporalio::Api::Common::V1::RetryPolicy::init?) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (:new_retry_policy) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (:new_retry_policy, ::Temporalio::Api::Common::V1::RetryPolicy?) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (:new_retry_policy, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ActivityPropertiesModifiedExternallyEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = ActivityPropertiesModifiedExternallyEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ActivityPropertiesModifiedExternallyEventAttributes, ActivityPropertiesModifiedExternallyEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ActivityPropertiesModifiedExternallyEventAttributes, ActivityPropertiesModifiedExternallyEventAttributes | _ToProto]

          type array = ::Array[ActivityPropertiesModifiedExternallyEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ActivityPropertiesModifiedExternallyEventAttributes | _ToProto]
        end

        class WorkflowExecutionUpdateAcceptedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionUpdateAcceptedEventAttributes) -> String

          # The instance ID of the update protocol that generated this event.
          #
          attr_accessor protocol_instance_id(): ::String

          def protocol_instance_id!: () -> ::String?

          # The message ID of the original request message that initiated this
          #  update. Needed so that the worker can recreate and deliver that same
          #  message as part of replay.
          #
          attr_accessor accepted_request_message_id(): ::String

          def accepted_request_message_id!: () -> ::String?

          # The event ID used to sequence the original request message.
          #
          attr_accessor accepted_request_sequencing_event_id(): ::Integer

          def accepted_request_sequencing_event_id!: () -> ::Integer?

          # The message payload of the original request message that initiated this
          #  update.
          #
          attr_accessor accepted_request(): ::Temporalio::Api::Update::V1::Request?

          # The message payload of the original request message that initiated this
          #  update.
          #
          def accepted_request=: [M < ::Temporalio::Api::Update::V1::Request::_ToProto] (M?) -> M?
                               | ...

          def accepted_request!: () -> ::Temporalio::Api::Update::V1::Request?

          def initialize: (?protocol_instance_id: ::String, ?accepted_request_message_id: ::String, ?accepted_request_sequencing_event_id: ::Integer, ?accepted_request: ::Temporalio::Api::Update::V1::Request::init?) -> void

          def []: (:protocol_instance_id) -> ::String
                | (:accepted_request_message_id) -> ::String
                | (:accepted_request_sequencing_event_id) -> ::Integer
                | (:accepted_request) -> ::Temporalio::Api::Update::V1::Request?
                | (::Symbol) -> untyped

          def []=: (:protocol_instance_id, ::String) -> ::String
                 | (:accepted_request_message_id, ::String) -> ::String
                 | (:accepted_request_sequencing_event_id, ::Integer) -> ::Integer
                 | (:accepted_request, ::Temporalio::Api::Update::V1::Request?) -> ::Temporalio::Api::Update::V1::Request?
                 | [M < ::Temporalio::Api::Update::V1::Request::_ToProto] (:accepted_request, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionUpdateAcceptedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionUpdateAcceptedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionUpdateAcceptedEventAttributes, WorkflowExecutionUpdateAcceptedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionUpdateAcceptedEventAttributes, WorkflowExecutionUpdateAcceptedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionUpdateAcceptedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionUpdateAcceptedEventAttributes | _ToProto]
        end

        class WorkflowExecutionUpdateCompletedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionUpdateCompletedEventAttributes) -> String

          # The metadata about this update.
          #
          attr_accessor meta(): ::Temporalio::Api::Update::V1::Meta?

          # The metadata about this update.
          #
          def meta=: [M < ::Temporalio::Api::Update::V1::Meta::_ToProto] (M?) -> M?
                   | ...

          def meta!: () -> ::Temporalio::Api::Update::V1::Meta?

          # The outcome of executing the workflow update function.
          #
          attr_accessor outcome(): ::Temporalio::Api::Update::V1::Outcome?

          # The outcome of executing the workflow update function.
          #
          def outcome=: [M < ::Temporalio::Api::Update::V1::Outcome::_ToProto] (M?) -> M?
                      | ...

          def outcome!: () -> ::Temporalio::Api::Update::V1::Outcome?

          def initialize: (?meta: ::Temporalio::Api::Update::V1::Meta::init?, ?outcome: ::Temporalio::Api::Update::V1::Outcome::init?) -> void

          def []: (:meta) -> ::Temporalio::Api::Update::V1::Meta?
                | (:outcome) -> ::Temporalio::Api::Update::V1::Outcome?
                | (::Symbol) -> untyped

          def []=: (:meta, ::Temporalio::Api::Update::V1::Meta?) -> ::Temporalio::Api::Update::V1::Meta?
                 | [M < ::Temporalio::Api::Update::V1::Meta::_ToProto] (:meta, M?) -> M?
                 | (:outcome, ::Temporalio::Api::Update::V1::Outcome?) -> ::Temporalio::Api::Update::V1::Outcome?
                 | [M < ::Temporalio::Api::Update::V1::Outcome::_ToProto] (:outcome, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionUpdateCompletedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionUpdateCompletedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionUpdateCompletedEventAttributes, WorkflowExecutionUpdateCompletedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionUpdateCompletedEventAttributes, WorkflowExecutionUpdateCompletedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionUpdateCompletedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionUpdateCompletedEventAttributes | _ToProto]
        end

        class WorkflowExecutionUpdateRejectedEventAttributes < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (WorkflowExecutionUpdateRejectedEventAttributes) -> String

          # The instance ID of the update protocol that generated this event.
          #
          attr_accessor protocol_instance_id(): ::String

          def protocol_instance_id!: () -> ::String?

          # The message ID of the original request message that initiated this
          #  update. Needed so that the worker can recreate and deliver that same
          #  message as part of replay.
          #
          attr_accessor rejected_request_message_id(): ::String

          def rejected_request_message_id!: () -> ::String?

          # The event ID used to sequence the original request message.
          #
          attr_accessor rejected_request_sequencing_event_id(): ::Integer

          def rejected_request_sequencing_event_id!: () -> ::Integer?

          # The message payload of the original request message that initiated this
          #  update.
          #
          attr_accessor rejected_request(): ::Temporalio::Api::Update::V1::Request?

          # The message payload of the original request message that initiated this
          #  update.
          #
          def rejected_request=: [M < ::Temporalio::Api::Update::V1::Request::_ToProto] (M?) -> M?
                               | ...

          def rejected_request!: () -> ::Temporalio::Api::Update::V1::Request?

          # The cause of rejection.
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # The cause of rejection.
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          def initialize: (?protocol_instance_id: ::String, ?rejected_request_message_id: ::String, ?rejected_request_sequencing_event_id: ::Integer, ?rejected_request: ::Temporalio::Api::Update::V1::Request::init?, ?failure: ::Temporalio::Api::Failure::V1::Failure::init?) -> void

          def []: (:protocol_instance_id) -> ::String
                | (:rejected_request_message_id) -> ::String
                | (:rejected_request_sequencing_event_id) -> ::Integer
                | (:rejected_request) -> ::Temporalio::Api::Update::V1::Request?
                | (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (::Symbol) -> untyped

          def []=: (:protocol_instance_id, ::String) -> ::String
                 | (:rejected_request_message_id, ::String) -> ::String
                 | (:rejected_request_sequencing_event_id, ::Integer) -> ::Integer
                 | (:rejected_request, ::Temporalio::Api::Update::V1::Request?) -> ::Temporalio::Api::Update::V1::Request?
                 | [M < ::Temporalio::Api::Update::V1::Request::_ToProto] (:rejected_request, M?) -> M?
                 | (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> WorkflowExecutionUpdateRejectedEventAttributes
          end

          # The type of `#initialize` parameter.
          type init = WorkflowExecutionUpdateRejectedEventAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowExecutionUpdateRejectedEventAttributes, WorkflowExecutionUpdateRejectedEventAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowExecutionUpdateRejectedEventAttributes, WorkflowExecutionUpdateRejectedEventAttributes | _ToProto]

          type array = ::Array[WorkflowExecutionUpdateRejectedEventAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, WorkflowExecutionUpdateRejectedEventAttributes | _ToProto]
        end

        # History events are the method by which Temporal SDKs advance (or recreate) workflow state.
        #  See the `EventType` enum for more info about what each event is for.
        #
        class HistoryEvent < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (HistoryEvent) -> String

          # Monotonically increasing event number, starts at 1.
          #
          attr_accessor event_id(): ::Integer

          def event_id!: () -> ::Integer?

          attr_accessor event_time(): ::Google::Protobuf::Timestamp?

          def event_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                         | ...

          def event_time!: () -> ::Google::Protobuf::Timestamp?

          attr_accessor event_type(): ::Temporalio::Api::Enums::V1::EventType

          def event_type=: (::Temporalio::Api::Enums::V1::EventType::values) -> ::Temporalio::Api::Enums::V1::EventType::values
                         | ...

          def event_type!: () -> ::Temporalio::Api::Enums::V1::EventType?

          # TODO: What is this? Appears unused by SDKs
          #
          attr_accessor version(): ::Integer

          def version!: () -> ::Integer?

          # TODO: What is this? Appears unused by SDKs
          #
          attr_accessor task_id(): ::Integer

          def task_id!: () -> ::Integer?

          # Set to true when the SDK may ignore the event as it does not impact workflow state or
          #  information in any way that the SDK need be concerned with. If an SDK encounters an event
          #  type which it does not understand, it must error unless this is true. If it is true, it's
          #  acceptable for the event type and/or attributes to be uninterpretable.
          #
          attr_accessor worker_may_ignore(): bool

          def worker_may_ignore!: () -> bool?

          attr_accessor workflow_execution_started_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes?

          def workflow_execution_started_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes::_ToProto] (M?) -> M?
                                                          | ...

          def workflow_execution_started_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes?

          attr_accessor workflow_execution_completed_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes?

          def workflow_execution_completed_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes::_ToProto] (M?) -> M?
                                                            | ...

          def workflow_execution_completed_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes?

          attr_accessor workflow_execution_failed_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes?

          def workflow_execution_failed_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes::_ToProto] (M?) -> M?
                                                         | ...

          def workflow_execution_failed_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes?

          attr_accessor workflow_execution_timed_out_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes?

          def workflow_execution_timed_out_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes::_ToProto] (M?) -> M?
                                                            | ...

          def workflow_execution_timed_out_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes?

          attr_accessor workflow_task_scheduled_event_attributes(): ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes?

          def workflow_task_scheduled_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes::_ToProto] (M?) -> M?
                                                       | ...

          def workflow_task_scheduled_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes?

          attr_accessor workflow_task_started_event_attributes(): ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes?

          def workflow_task_started_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes::_ToProto] (M?) -> M?
                                                     | ...

          def workflow_task_started_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes?

          attr_accessor workflow_task_completed_event_attributes(): ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes?

          def workflow_task_completed_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes::_ToProto] (M?) -> M?
                                                       | ...

          def workflow_task_completed_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes?

          attr_accessor workflow_task_timed_out_event_attributes(): ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes?

          def workflow_task_timed_out_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes::_ToProto] (M?) -> M?
                                                       | ...

          def workflow_task_timed_out_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes?

          attr_accessor workflow_task_failed_event_attributes(): ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes?

          def workflow_task_failed_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes::_ToProto] (M?) -> M?
                                                    | ...

          def workflow_task_failed_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes?

          attr_accessor activity_task_scheduled_event_attributes(): ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes?

          def activity_task_scheduled_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes::_ToProto] (M?) -> M?
                                                       | ...

          def activity_task_scheduled_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes?

          attr_accessor activity_task_started_event_attributes(): ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes?

          def activity_task_started_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes::_ToProto] (M?) -> M?
                                                     | ...

          def activity_task_started_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes?

          attr_accessor activity_task_completed_event_attributes(): ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes?

          def activity_task_completed_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes::_ToProto] (M?) -> M?
                                                       | ...

          def activity_task_completed_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes?

          attr_accessor activity_task_failed_event_attributes(): ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes?

          def activity_task_failed_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes::_ToProto] (M?) -> M?
                                                    | ...

          def activity_task_failed_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes?

          attr_accessor activity_task_timed_out_event_attributes(): ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes?

          def activity_task_timed_out_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes::_ToProto] (M?) -> M?
                                                       | ...

          def activity_task_timed_out_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes?

          attr_accessor timer_started_event_attributes(): ::Temporalio::Api::History::V1::TimerStartedEventAttributes?

          def timer_started_event_attributes=: [M < ::Temporalio::Api::History::V1::TimerStartedEventAttributes::_ToProto] (M?) -> M?
                                             | ...

          def timer_started_event_attributes!: () -> ::Temporalio::Api::History::V1::TimerStartedEventAttributes?

          attr_accessor timer_fired_event_attributes(): ::Temporalio::Api::History::V1::TimerFiredEventAttributes?

          def timer_fired_event_attributes=: [M < ::Temporalio::Api::History::V1::TimerFiredEventAttributes::_ToProto] (M?) -> M?
                                           | ...

          def timer_fired_event_attributes!: () -> ::Temporalio::Api::History::V1::TimerFiredEventAttributes?

          attr_accessor activity_task_cancel_requested_event_attributes(): ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes?

          def activity_task_cancel_requested_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes::_ToProto] (M?) -> M?
                                                              | ...

          def activity_task_cancel_requested_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes?

          attr_accessor activity_task_canceled_event_attributes(): ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes?

          def activity_task_canceled_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes::_ToProto] (M?) -> M?
                                                      | ...

          def activity_task_canceled_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes?

          attr_accessor timer_canceled_event_attributes(): ::Temporalio::Api::History::V1::TimerCanceledEventAttributes?

          def timer_canceled_event_attributes=: [M < ::Temporalio::Api::History::V1::TimerCanceledEventAttributes::_ToProto] (M?) -> M?
                                              | ...

          def timer_canceled_event_attributes!: () -> ::Temporalio::Api::History::V1::TimerCanceledEventAttributes?

          attr_accessor marker_recorded_event_attributes(): ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes?

          def marker_recorded_event_attributes=: [M < ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes::_ToProto] (M?) -> M?
                                               | ...

          def marker_recorded_event_attributes!: () -> ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes?

          attr_accessor workflow_execution_signaled_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes?

          def workflow_execution_signaled_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes::_ToProto] (M?) -> M?
                                                           | ...

          def workflow_execution_signaled_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes?

          attr_accessor workflow_execution_terminated_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes?

          def workflow_execution_terminated_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes::_ToProto] (M?) -> M?
                                                             | ...

          def workflow_execution_terminated_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes?

          attr_accessor workflow_execution_cancel_requested_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes?

          def workflow_execution_cancel_requested_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes::_ToProto] (M?) -> M?
                                                                   | ...

          def workflow_execution_cancel_requested_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes?

          attr_accessor workflow_execution_canceled_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes?

          def workflow_execution_canceled_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes::_ToProto] (M?) -> M?
                                                           | ...

          def workflow_execution_canceled_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes?

          attr_accessor request_cancel_external_workflow_execution_initiated_event_attributes(): ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes?

          def request_cancel_external_workflow_execution_initiated_event_attributes=: [M < ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes::_ToProto] (M?) -> M?
                                                                                    | ...

          def request_cancel_external_workflow_execution_initiated_event_attributes!: () -> ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes?

          attr_accessor request_cancel_external_workflow_execution_failed_event_attributes(): ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes?

          def request_cancel_external_workflow_execution_failed_event_attributes=: [M < ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes::_ToProto] (M?) -> M?
                                                                                 | ...

          def request_cancel_external_workflow_execution_failed_event_attributes!: () -> ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes?

          attr_accessor external_workflow_execution_cancel_requested_event_attributes(): ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes?

          def external_workflow_execution_cancel_requested_event_attributes=: [M < ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes::_ToProto] (M?) -> M?
                                                                            | ...

          def external_workflow_execution_cancel_requested_event_attributes!: () -> ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes?

          attr_accessor workflow_execution_continued_as_new_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes?

          def workflow_execution_continued_as_new_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes::_ToProto] (M?) -> M?
                                                                   | ...

          def workflow_execution_continued_as_new_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes?

          attr_accessor start_child_workflow_execution_initiated_event_attributes(): ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes?

          def start_child_workflow_execution_initiated_event_attributes=: [M < ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes::_ToProto] (M?) -> M?
                                                                        | ...

          def start_child_workflow_execution_initiated_event_attributes!: () -> ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes?

          attr_accessor start_child_workflow_execution_failed_event_attributes(): ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes?

          def start_child_workflow_execution_failed_event_attributes=: [M < ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes::_ToProto] (M?) -> M?
                                                                     | ...

          def start_child_workflow_execution_failed_event_attributes!: () -> ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes?

          attr_accessor child_workflow_execution_started_event_attributes(): ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes?

          def child_workflow_execution_started_event_attributes=: [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes::_ToProto] (M?) -> M?
                                                                | ...

          def child_workflow_execution_started_event_attributes!: () -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes?

          attr_accessor child_workflow_execution_completed_event_attributes(): ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes?

          def child_workflow_execution_completed_event_attributes=: [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes::_ToProto] (M?) -> M?
                                                                  | ...

          def child_workflow_execution_completed_event_attributes!: () -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes?

          attr_accessor child_workflow_execution_failed_event_attributes(): ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes?

          def child_workflow_execution_failed_event_attributes=: [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes::_ToProto] (M?) -> M?
                                                               | ...

          def child_workflow_execution_failed_event_attributes!: () -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes?

          attr_accessor child_workflow_execution_canceled_event_attributes(): ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes?

          def child_workflow_execution_canceled_event_attributes=: [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes::_ToProto] (M?) -> M?
                                                                 | ...

          def child_workflow_execution_canceled_event_attributes!: () -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes?

          attr_accessor child_workflow_execution_timed_out_event_attributes(): ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes?

          def child_workflow_execution_timed_out_event_attributes=: [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes::_ToProto] (M?) -> M?
                                                                  | ...

          def child_workflow_execution_timed_out_event_attributes!: () -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes?

          attr_accessor child_workflow_execution_terminated_event_attributes(): ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes?

          def child_workflow_execution_terminated_event_attributes=: [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes::_ToProto] (M?) -> M?
                                                                   | ...

          def child_workflow_execution_terminated_event_attributes!: () -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes?

          attr_accessor signal_external_workflow_execution_initiated_event_attributes(): ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes?

          def signal_external_workflow_execution_initiated_event_attributes=: [M < ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes::_ToProto] (M?) -> M?
                                                                            | ...

          def signal_external_workflow_execution_initiated_event_attributes!: () -> ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes?

          attr_accessor signal_external_workflow_execution_failed_event_attributes(): ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes?

          def signal_external_workflow_execution_failed_event_attributes=: [M < ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes::_ToProto] (M?) -> M?
                                                                         | ...

          def signal_external_workflow_execution_failed_event_attributes!: () -> ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes?

          attr_accessor external_workflow_execution_signaled_event_attributes(): ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes?

          def external_workflow_execution_signaled_event_attributes=: [M < ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes::_ToProto] (M?) -> M?
                                                                    | ...

          def external_workflow_execution_signaled_event_attributes!: () -> ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes?

          attr_accessor upsert_workflow_search_attributes_event_attributes(): ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes?

          def upsert_workflow_search_attributes_event_attributes=: [M < ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes::_ToProto] (M?) -> M?
                                                                 | ...

          def upsert_workflow_search_attributes_event_attributes!: () -> ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes?

          attr_accessor workflow_execution_update_accepted_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes?

          def workflow_execution_update_accepted_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes::_ToProto] (M?) -> M?
                                                                  | ...

          def workflow_execution_update_accepted_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes?

          attr_accessor workflow_execution_update_rejected_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes?

          def workflow_execution_update_rejected_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes::_ToProto] (M?) -> M?
                                                                  | ...

          def workflow_execution_update_rejected_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes?

          attr_accessor workflow_execution_update_completed_event_attributes(): ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes?

          def workflow_execution_update_completed_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes::_ToProto] (M?) -> M?
                                                                   | ...

          def workflow_execution_update_completed_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes?

          attr_accessor workflow_properties_modified_externally_event_attributes(): ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes?

          def workflow_properties_modified_externally_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes::_ToProto] (M?) -> M?
                                                                       | ...

          def workflow_properties_modified_externally_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes?

          attr_accessor activity_properties_modified_externally_event_attributes(): ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes?

          def activity_properties_modified_externally_event_attributes=: [M < ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes::_ToProto] (M?) -> M?
                                                                       | ...

          def activity_properties_modified_externally_event_attributes!: () -> ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes?

          attr_accessor workflow_properties_modified_event_attributes(): ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes?

          def workflow_properties_modified_event_attributes=: [M < ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes::_ToProto] (M?) -> M?
                                                            | ...

          def workflow_properties_modified_event_attributes!: () -> ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes?

          def initialize: (?event_id: ::Integer, ?event_time: ::Google::Protobuf::Timestamp::init?, ?event_type: ::Temporalio::Api::Enums::V1::EventType::init, ?version: ::Integer, ?task_id: ::Integer, ?worker_may_ignore: bool, ?workflow_execution_started_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes::init?, ?workflow_execution_completed_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes::init?, ?workflow_execution_failed_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes::init?, ?workflow_execution_timed_out_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes::init?, ?workflow_task_scheduled_event_attributes: ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes::init?, ?workflow_task_started_event_attributes: ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes::init?, ?workflow_task_completed_event_attributes: ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes::init?, ?workflow_task_timed_out_event_attributes: ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes::init?, ?workflow_task_failed_event_attributes: ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes::init?, ?activity_task_scheduled_event_attributes: ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes::init?, ?activity_task_started_event_attributes: ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes::init?, ?activity_task_completed_event_attributes: ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes::init?, ?activity_task_failed_event_attributes: ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes::init?, ?activity_task_timed_out_event_attributes: ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes::init?, ?timer_started_event_attributes: ::Temporalio::Api::History::V1::TimerStartedEventAttributes::init?, ?timer_fired_event_attributes: ::Temporalio::Api::History::V1::TimerFiredEventAttributes::init?, ?activity_task_cancel_requested_event_attributes: ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes::init?, ?activity_task_canceled_event_attributes: ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes::init?, ?timer_canceled_event_attributes: ::Temporalio::Api::History::V1::TimerCanceledEventAttributes::init?, ?marker_recorded_event_attributes: ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes::init?, ?workflow_execution_signaled_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes::init?, ?workflow_execution_terminated_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes::init?, ?workflow_execution_cancel_requested_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes::init?, ?workflow_execution_canceled_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes::init?, ?request_cancel_external_workflow_execution_initiated_event_attributes: ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes::init?, ?request_cancel_external_workflow_execution_failed_event_attributes: ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes::init?, ?external_workflow_execution_cancel_requested_event_attributes: ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes::init?, ?workflow_execution_continued_as_new_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes::init?, ?start_child_workflow_execution_initiated_event_attributes: ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes::init?, ?start_child_workflow_execution_failed_event_attributes: ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes::init?, ?child_workflow_execution_started_event_attributes: ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes::init?, ?child_workflow_execution_completed_event_attributes: ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes::init?, ?child_workflow_execution_failed_event_attributes: ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes::init?, ?child_workflow_execution_canceled_event_attributes: ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes::init?, ?child_workflow_execution_timed_out_event_attributes: ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes::init?, ?child_workflow_execution_terminated_event_attributes: ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes::init?, ?signal_external_workflow_execution_initiated_event_attributes: ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes::init?, ?signal_external_workflow_execution_failed_event_attributes: ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes::init?, ?external_workflow_execution_signaled_event_attributes: ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes::init?, ?upsert_workflow_search_attributes_event_attributes: ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes::init?, ?workflow_execution_update_accepted_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes::init?, ?workflow_execution_update_rejected_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes::init?, ?workflow_execution_update_completed_event_attributes: ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes::init?, ?workflow_properties_modified_externally_event_attributes: ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes::init?, ?activity_properties_modified_externally_event_attributes: ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes::init?, ?workflow_properties_modified_event_attributes: ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes::init?) -> void

          def []: (:event_id) -> ::Integer
                | (:event_time) -> ::Google::Protobuf::Timestamp?
                | (:event_type) -> ::Temporalio::Api::Enums::V1::EventType
                | (:version) -> ::Integer
                | (:task_id) -> ::Integer
                | (:worker_may_ignore) -> bool
                | (:workflow_execution_started_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes?
                | (:workflow_execution_completed_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes?
                | (:workflow_execution_failed_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes?
                | (:workflow_execution_timed_out_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes?
                | (:workflow_task_scheduled_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes?
                | (:workflow_task_started_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes?
                | (:workflow_task_completed_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes?
                | (:workflow_task_timed_out_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes?
                | (:workflow_task_failed_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes?
                | (:activity_task_scheduled_event_attributes) -> ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes?
                | (:activity_task_started_event_attributes) -> ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes?
                | (:activity_task_completed_event_attributes) -> ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes?
                | (:activity_task_failed_event_attributes) -> ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes?
                | (:activity_task_timed_out_event_attributes) -> ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes?
                | (:timer_started_event_attributes) -> ::Temporalio::Api::History::V1::TimerStartedEventAttributes?
                | (:timer_fired_event_attributes) -> ::Temporalio::Api::History::V1::TimerFiredEventAttributes?
                | (:activity_task_cancel_requested_event_attributes) -> ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes?
                | (:activity_task_canceled_event_attributes) -> ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes?
                | (:timer_canceled_event_attributes) -> ::Temporalio::Api::History::V1::TimerCanceledEventAttributes?
                | (:marker_recorded_event_attributes) -> ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes?
                | (:workflow_execution_signaled_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes?
                | (:workflow_execution_terminated_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes?
                | (:workflow_execution_cancel_requested_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes?
                | (:workflow_execution_canceled_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes?
                | (:request_cancel_external_workflow_execution_initiated_event_attributes) -> ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes?
                | (:request_cancel_external_workflow_execution_failed_event_attributes) -> ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes?
                | (:external_workflow_execution_cancel_requested_event_attributes) -> ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes?
                | (:workflow_execution_continued_as_new_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes?
                | (:start_child_workflow_execution_initiated_event_attributes) -> ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes?
                | (:start_child_workflow_execution_failed_event_attributes) -> ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes?
                | (:child_workflow_execution_started_event_attributes) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes?
                | (:child_workflow_execution_completed_event_attributes) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes?
                | (:child_workflow_execution_failed_event_attributes) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes?
                | (:child_workflow_execution_canceled_event_attributes) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes?
                | (:child_workflow_execution_timed_out_event_attributes) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes?
                | (:child_workflow_execution_terminated_event_attributes) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes?
                | (:signal_external_workflow_execution_initiated_event_attributes) -> ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes?
                | (:signal_external_workflow_execution_failed_event_attributes) -> ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes?
                | (:external_workflow_execution_signaled_event_attributes) -> ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes?
                | (:upsert_workflow_search_attributes_event_attributes) -> ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes?
                | (:workflow_execution_update_accepted_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes?
                | (:workflow_execution_update_rejected_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes?
                | (:workflow_execution_update_completed_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes?
                | (:workflow_properties_modified_externally_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes?
                | (:activity_properties_modified_externally_event_attributes) -> ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes?
                | (:workflow_properties_modified_event_attributes) -> ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes?
                | (::Symbol) -> untyped

          def []=: (:event_id, ::Integer) -> ::Integer
                 | (:event_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:event_time, M?) -> M?
                 | (:event_type, ::Temporalio::Api::Enums::V1::EventType) -> ::Temporalio::Api::Enums::V1::EventType
                 | (:event_type, ::Temporalio::Api::Enums::V1::EventType::values) -> ::Temporalio::Api::Enums::V1::EventType::values
                 | (:version, ::Integer) -> ::Integer
                 | (:task_id, ::Integer) -> ::Integer
                 | (:worker_may_ignore, bool) -> bool
                 | (:workflow_execution_started_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionStartedEventAttributes::_ToProto] (:workflow_execution_started_event_attributes, M?) -> M?
                 | (:workflow_execution_completed_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionCompletedEventAttributes::_ToProto] (:workflow_execution_completed_event_attributes, M?) -> M?
                 | (:workflow_execution_failed_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionFailedEventAttributes::_ToProto] (:workflow_execution_failed_event_attributes, M?) -> M?
                 | (:workflow_execution_timed_out_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionTimedOutEventAttributes::_ToProto] (:workflow_execution_timed_out_event_attributes, M?) -> M?
                 | (:workflow_task_scheduled_event_attributes, ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowTaskScheduledEventAttributes::_ToProto] (:workflow_task_scheduled_event_attributes, M?) -> M?
                 | (:workflow_task_started_event_attributes, ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowTaskStartedEventAttributes::_ToProto] (:workflow_task_started_event_attributes, M?) -> M?
                 | (:workflow_task_completed_event_attributes, ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowTaskCompletedEventAttributes::_ToProto] (:workflow_task_completed_event_attributes, M?) -> M?
                 | (:workflow_task_timed_out_event_attributes, ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowTaskTimedOutEventAttributes::_ToProto] (:workflow_task_timed_out_event_attributes, M?) -> M?
                 | (:workflow_task_failed_event_attributes, ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowTaskFailedEventAttributes::_ToProto] (:workflow_task_failed_event_attributes, M?) -> M?
                 | (:activity_task_scheduled_event_attributes, ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityTaskScheduledEventAttributes::_ToProto] (:activity_task_scheduled_event_attributes, M?) -> M?
                 | (:activity_task_started_event_attributes, ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityTaskStartedEventAttributes::_ToProto] (:activity_task_started_event_attributes, M?) -> M?
                 | (:activity_task_completed_event_attributes, ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityTaskCompletedEventAttributes::_ToProto] (:activity_task_completed_event_attributes, M?) -> M?
                 | (:activity_task_failed_event_attributes, ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityTaskFailedEventAttributes::_ToProto] (:activity_task_failed_event_attributes, M?) -> M?
                 | (:activity_task_timed_out_event_attributes, ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityTaskTimedOutEventAttributes::_ToProto] (:activity_task_timed_out_event_attributes, M?) -> M?
                 | (:timer_started_event_attributes, ::Temporalio::Api::History::V1::TimerStartedEventAttributes?) -> ::Temporalio::Api::History::V1::TimerStartedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::TimerStartedEventAttributes::_ToProto] (:timer_started_event_attributes, M?) -> M?
                 | (:timer_fired_event_attributes, ::Temporalio::Api::History::V1::TimerFiredEventAttributes?) -> ::Temporalio::Api::History::V1::TimerFiredEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::TimerFiredEventAttributes::_ToProto] (:timer_fired_event_attributes, M?) -> M?
                 | (:activity_task_cancel_requested_event_attributes, ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityTaskCancelRequestedEventAttributes::_ToProto] (:activity_task_cancel_requested_event_attributes, M?) -> M?
                 | (:activity_task_canceled_event_attributes, ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityTaskCanceledEventAttributes::_ToProto] (:activity_task_canceled_event_attributes, M?) -> M?
                 | (:timer_canceled_event_attributes, ::Temporalio::Api::History::V1::TimerCanceledEventAttributes?) -> ::Temporalio::Api::History::V1::TimerCanceledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::TimerCanceledEventAttributes::_ToProto] (:timer_canceled_event_attributes, M?) -> M?
                 | (:marker_recorded_event_attributes, ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes?) -> ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::MarkerRecordedEventAttributes::_ToProto] (:marker_recorded_event_attributes, M?) -> M?
                 | (:workflow_execution_signaled_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionSignaledEventAttributes::_ToProto] (:workflow_execution_signaled_event_attributes, M?) -> M?
                 | (:workflow_execution_terminated_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionTerminatedEventAttributes::_ToProto] (:workflow_execution_terminated_event_attributes, M?) -> M?
                 | (:workflow_execution_cancel_requested_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionCancelRequestedEventAttributes::_ToProto] (:workflow_execution_cancel_requested_event_attributes, M?) -> M?
                 | (:workflow_execution_canceled_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionCanceledEventAttributes::_ToProto] (:workflow_execution_canceled_event_attributes, M?) -> M?
                 | (:request_cancel_external_workflow_execution_initiated_event_attributes, ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes?) -> ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes::_ToProto] (:request_cancel_external_workflow_execution_initiated_event_attributes, M?) -> M?
                 | (:request_cancel_external_workflow_execution_failed_event_attributes, ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes?) -> ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::RequestCancelExternalWorkflowExecutionFailedEventAttributes::_ToProto] (:request_cancel_external_workflow_execution_failed_event_attributes, M?) -> M?
                 | (:external_workflow_execution_cancel_requested_event_attributes, ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes?) -> ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ExternalWorkflowExecutionCancelRequestedEventAttributes::_ToProto] (:external_workflow_execution_cancel_requested_event_attributes, M?) -> M?
                 | (:workflow_execution_continued_as_new_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionContinuedAsNewEventAttributes::_ToProto] (:workflow_execution_continued_as_new_event_attributes, M?) -> M?
                 | (:start_child_workflow_execution_initiated_event_attributes, ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes?) -> ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::StartChildWorkflowExecutionInitiatedEventAttributes::_ToProto] (:start_child_workflow_execution_initiated_event_attributes, M?) -> M?
                 | (:start_child_workflow_execution_failed_event_attributes, ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes?) -> ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::StartChildWorkflowExecutionFailedEventAttributes::_ToProto] (:start_child_workflow_execution_failed_event_attributes, M?) -> M?
                 | (:child_workflow_execution_started_event_attributes, ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes?) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionStartedEventAttributes::_ToProto] (:child_workflow_execution_started_event_attributes, M?) -> M?
                 | (:child_workflow_execution_completed_event_attributes, ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes?) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionCompletedEventAttributes::_ToProto] (:child_workflow_execution_completed_event_attributes, M?) -> M?
                 | (:child_workflow_execution_failed_event_attributes, ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes?) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionFailedEventAttributes::_ToProto] (:child_workflow_execution_failed_event_attributes, M?) -> M?
                 | (:child_workflow_execution_canceled_event_attributes, ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes?) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionCanceledEventAttributes::_ToProto] (:child_workflow_execution_canceled_event_attributes, M?) -> M?
                 | (:child_workflow_execution_timed_out_event_attributes, ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes?) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionTimedOutEventAttributes::_ToProto] (:child_workflow_execution_timed_out_event_attributes, M?) -> M?
                 | (:child_workflow_execution_terminated_event_attributes, ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes?) -> ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ChildWorkflowExecutionTerminatedEventAttributes::_ToProto] (:child_workflow_execution_terminated_event_attributes, M?) -> M?
                 | (:signal_external_workflow_execution_initiated_event_attributes, ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes?) -> ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionInitiatedEventAttributes::_ToProto] (:signal_external_workflow_execution_initiated_event_attributes, M?) -> M?
                 | (:signal_external_workflow_execution_failed_event_attributes, ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes?) -> ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::SignalExternalWorkflowExecutionFailedEventAttributes::_ToProto] (:signal_external_workflow_execution_failed_event_attributes, M?) -> M?
                 | (:external_workflow_execution_signaled_event_attributes, ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes?) -> ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ExternalWorkflowExecutionSignaledEventAttributes::_ToProto] (:external_workflow_execution_signaled_event_attributes, M?) -> M?
                 | (:upsert_workflow_search_attributes_event_attributes, ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes?) -> ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::UpsertWorkflowSearchAttributesEventAttributes::_ToProto] (:upsert_workflow_search_attributes_event_attributes, M?) -> M?
                 | (:workflow_execution_update_accepted_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionUpdateAcceptedEventAttributes::_ToProto] (:workflow_execution_update_accepted_event_attributes, M?) -> M?
                 | (:workflow_execution_update_rejected_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionUpdateRejectedEventAttributes::_ToProto] (:workflow_execution_update_rejected_event_attributes, M?) -> M?
                 | (:workflow_execution_update_completed_event_attributes, ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowExecutionUpdateCompletedEventAttributes::_ToProto] (:workflow_execution_update_completed_event_attributes, M?) -> M?
                 | (:workflow_properties_modified_externally_event_attributes, ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedExternallyEventAttributes::_ToProto] (:workflow_properties_modified_externally_event_attributes, M?) -> M?
                 | (:activity_properties_modified_externally_event_attributes, ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes?) -> ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::ActivityPropertiesModifiedExternallyEventAttributes::_ToProto] (:activity_properties_modified_externally_event_attributes, M?) -> M?
                 | (:workflow_properties_modified_event_attributes, ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes?) -> ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes?
                 | [M < ::Temporalio::Api::History::V1::WorkflowPropertiesModifiedEventAttributes::_ToProto] (:workflow_properties_modified_event_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          def worker_may_ignore?: () -> bool

          interface _ToProto
            def to_proto: () -> HistoryEvent
          end

          # The type of `#initialize` parameter.
          type init = HistoryEvent | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[HistoryEvent, HistoryEvent | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, HistoryEvent, HistoryEvent | _ToProto]

          type array = ::Array[HistoryEvent | _ToProto]

          type hash[KEY] = ::Hash[KEY, HistoryEvent | _ToProto]
        end

        class History < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (History) -> String

          attr_accessor events(): ::Temporalio::Api::History::V1::HistoryEvent::field_array

          def events=: (::Temporalio::Api::History::V1::HistoryEvent::array) -> ::Temporalio::Api::History::V1::HistoryEvent::array
                     | ...

          def events!: () -> ::Temporalio::Api::History::V1::HistoryEvent::field_array?

          def initialize: (?events: ::Temporalio::Api::History::V1::HistoryEvent::array) -> void

          def []: (:events) -> ::Temporalio::Api::History::V1::HistoryEvent::field_array
                | (::Symbol) -> untyped

          def []=: (:events, ::Temporalio::Api::History::V1::HistoryEvent::field_array) -> ::Temporalio::Api::History::V1::HistoryEvent::field_array
                 | (:events, ::Temporalio::Api::History::V1::HistoryEvent::array) -> ::Temporalio::Api::History::V1::HistoryEvent::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> History
          end

          # The type of `#initialize` parameter.
          type init = History | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[History, History | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, History, History | _ToProto]

          type array = ::Array[History | _ToProto]

          type hash[KEY] = ::Hash[KEY, History | _ToProto]
        end
      end
    end
  end
end
