module Temporal
  module Api
    module Command
      module V1
        class ScheduleActivityTaskCommandAttributes < ::Protobuf::Message
          attr_accessor activity_id(): ::String

          def activity_id!: () -> ::String?

          attr_accessor activity_type(): ::Temporal::Api::Common::V1::ActivityType?

          def activity_type=: [M < ::Temporal::Api::Common::V1::ActivityType::_ToProto] (M?) -> M?
                            | ...

          def activity_type!: () -> ::Temporal::Api::Common::V1::ActivityType?

          attr_accessor task_queue(): ::Temporal::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporal::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporal::Api::TaskQueue::V1::TaskQueue?

          attr_accessor header(): ::Temporal::Api::Common::V1::Header?

          def header=: [M < ::Temporal::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporal::Api::Common::V1::Header?

          attr_accessor input(): ::Temporal::Api::Common::V1::Payloads?

          def input=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporal::Api::Common::V1::Payloads?

          # Indicates how long the caller is willing to wait for activity completion. The "schedule" time
          #  is when the activity is initially scheduled, not when the most recent retry is scheduled.
          #  Limits how long retries will be attempted. Either this or `start_to_close_timeout` must be
          #  specified. When not specified, defaults to the workflow execution timeout.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor schedule_to_close_timeout(): ::Google::Protobuf::Duration?

          # Indicates how long the caller is willing to wait for activity completion. The "schedule" time
          #  is when the activity is initially scheduled, not when the most recent retry is scheduled.
          #  Limits how long retries will be attempted. Either this or `start_to_close_timeout` must be
          #  specified. When not specified, defaults to the workflow execution timeout.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def schedule_to_close_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                        | ...

          def schedule_to_close_timeout!: () -> ::Google::Protobuf::Duration?

          # Limits the time an activity task can stay in a task queue before a worker picks it up. The
          #  "schedule" time is when the most recent retry is scheduled. This timeout should usually not
          #  be set: it's useful in specific scenarios like worker-specific task queues. This timeout is
          #  always non retryable, as all a retry would achieve is to put it back into the same queue.
          #  Defaults to `schedule_to_close_timeout` or workflow execution timeout if that is not
          #  specified. More info:
          #  https://docs.temporal.io/docs/content/what-is-a-schedule-to-start-timeout/
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor schedule_to_start_timeout(): ::Google::Protobuf::Duration?

          # Limits the time an activity task can stay in a task queue before a worker picks it up. The
          #  "schedule" time is when the most recent retry is scheduled. This timeout should usually not
          #  be set: it's useful in specific scenarios like worker-specific task queues. This timeout is
          #  always non retryable, as all a retry would achieve is to put it back into the same queue.
          #  Defaults to `schedule_to_close_timeout` or workflow execution timeout if that is not
          #  specified. More info:
          #  https://docs.temporal.io/docs/content/what-is-a-schedule-to-start-timeout/
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def schedule_to_start_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                        | ...

          def schedule_to_start_timeout!: () -> ::Google::Protobuf::Duration?

          # Maximum time an activity is allowed to execute after being picked up by a worker. This
          #  timeout is always retryable. Either this or `schedule_to_close_timeout` must be specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor start_to_close_timeout(): ::Google::Protobuf::Duration?

          # Maximum time an activity is allowed to execute after being picked up by a worker. This
          #  timeout is always retryable. Either this or `schedule_to_close_timeout` must be specified.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def start_to_close_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                     | ...

          def start_to_close_timeout!: () -> ::Google::Protobuf::Duration?

          # Maximum permitted time between successful worker heartbeats.
          #
          attr_accessor heartbeat_timeout(): ::Google::Protobuf::Duration?

          # Maximum permitted time between successful worker heartbeats.
          #
          def heartbeat_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                | ...

          def heartbeat_timeout!: () -> ::Google::Protobuf::Duration?

          # Activities are provided by a default retry policy which is controlled through the service's
          #  dynamic configuration. Retries will be attempted until `schedule_to_close_timeout` has
          #  elapsed. To disable retries set retry_policy.maximum_attempts to 1.
          #
          attr_accessor retry_policy(): ::Temporal::Api::Common::V1::RetryPolicy?

          # Activities are provided by a default retry policy which is controlled through the service's
          #  dynamic configuration. Retries will be attempted until `schedule_to_close_timeout` has
          #  elapsed. To disable retries set retry_policy.maximum_attempts to 1.
          #
          def retry_policy=: [M < ::Temporal::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporal::Api::Common::V1::RetryPolicy?

          # Request to start the activity directly bypassing matching service and worker polling
          #  The slot for executing the activity should be reserved when setting this field to true.
          #
          attr_accessor request_eager_execution(): bool

          def request_eager_execution!: () -> bool?

          def initialize: (?activity_id: ::String, ?activity_type: ::Temporal::Api::Common::V1::ActivityType::init?, ?task_queue: ::Temporal::Api::TaskQueue::V1::TaskQueue::init?, ?header: ::Temporal::Api::Common::V1::Header::init?, ?input: ::Temporal::Api::Common::V1::Payloads::init?, ?schedule_to_close_timeout: ::Google::Protobuf::Duration::init?, ?schedule_to_start_timeout: ::Google::Protobuf::Duration::init?, ?start_to_close_timeout: ::Google::Protobuf::Duration::init?, ?heartbeat_timeout: ::Google::Protobuf::Duration::init?, ?retry_policy: ::Temporal::Api::Common::V1::RetryPolicy::init?, ?request_eager_execution: bool) -> void

          def []: (:activity_id) -> ::String
                | (:activity_type) -> ::Temporal::Api::Common::V1::ActivityType?
                | (:task_queue) -> ::Temporal::Api::TaskQueue::V1::TaskQueue?
                | (:header) -> ::Temporal::Api::Common::V1::Header?
                | (:input) -> ::Temporal::Api::Common::V1::Payloads?
                | (:schedule_to_close_timeout) -> ::Google::Protobuf::Duration?
                | (:schedule_to_start_timeout) -> ::Google::Protobuf::Duration?
                | (:start_to_close_timeout) -> ::Google::Protobuf::Duration?
                | (:heartbeat_timeout) -> ::Google::Protobuf::Duration?
                | (:retry_policy) -> ::Temporal::Api::Common::V1::RetryPolicy?
                | (:request_eager_execution) -> bool
                | (::Symbol) -> untyped

          def []=: (:activity_id, ::String) -> ::String
                 | (:activity_type, ::Temporal::Api::Common::V1::ActivityType?) -> ::Temporal::Api::Common::V1::ActivityType?
                 | [M < ::Temporal::Api::Common::V1::ActivityType::_ToProto] (:activity_type, M?) -> M?
                 | (:task_queue, ::Temporal::Api::TaskQueue::V1::TaskQueue?) -> ::Temporal::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporal::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:header, ::Temporal::Api::Common::V1::Header?) -> ::Temporal::Api::Common::V1::Header?
                 | [M < ::Temporal::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:input, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:schedule_to_close_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:schedule_to_close_timeout, M?) -> M?
                 | (:schedule_to_start_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:schedule_to_start_timeout, M?) -> M?
                 | (:start_to_close_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:start_to_close_timeout, M?) -> M?
                 | (:heartbeat_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:heartbeat_timeout, M?) -> M?
                 | (:retry_policy, ::Temporal::Api::Common::V1::RetryPolicy?) -> ::Temporal::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporal::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (:request_eager_execution, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def request_eager_execution?: () -> bool

          interface _ToProto
            def to_proto: () -> ScheduleActivityTaskCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = ScheduleActivityTaskCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ScheduleActivityTaskCommandAttributes, ScheduleActivityTaskCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ScheduleActivityTaskCommandAttributes, ScheduleActivityTaskCommandAttributes | _ToProto]

          type array = ::Array[ScheduleActivityTaskCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ScheduleActivityTaskCommandAttributes | _ToProto]
        end

        class RequestCancelActivityTaskCommandAttributes < ::Protobuf::Message
          # The `ACTIVITY_TASK_SCHEDULED` event id for the activity being cancelled.
          #
          attr_accessor scheduled_event_id(): ::Integer

          def scheduled_event_id!: () -> ::Integer?

          def initialize: (?scheduled_event_id: ::Integer) -> void

          def []: (:scheduled_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:scheduled_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RequestCancelActivityTaskCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = RequestCancelActivityTaskCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RequestCancelActivityTaskCommandAttributes, RequestCancelActivityTaskCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RequestCancelActivityTaskCommandAttributes, RequestCancelActivityTaskCommandAttributes | _ToProto]

          type array = ::Array[RequestCancelActivityTaskCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, RequestCancelActivityTaskCommandAttributes | _ToProto]
        end

        class StartTimerCommandAttributes < ::Protobuf::Message
          # An id for the timer, currently live timers must have different ids. Typically autogenerated
          #  by the SDK.
          #
          attr_accessor timer_id(): ::String

          def timer_id!: () -> ::String?

          # How long until the timer fires, producing a `TIMER_FIRED` event.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor start_to_fire_timeout(): ::Google::Protobuf::Duration?

          # How long until the timer fires, producing a `TIMER_FIRED` event.
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def start_to_fire_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def start_to_fire_timeout!: () -> ::Google::Protobuf::Duration?

          def initialize: (?timer_id: ::String, ?start_to_fire_timeout: ::Google::Protobuf::Duration::init?) -> void

          def []: (:timer_id) -> ::String
                | (:start_to_fire_timeout) -> ::Google::Protobuf::Duration?
                | (::Symbol) -> untyped

          def []=: (:timer_id, ::String) -> ::String
                 | (:start_to_fire_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:start_to_fire_timeout, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StartTimerCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = StartTimerCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartTimerCommandAttributes, StartTimerCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartTimerCommandAttributes, StartTimerCommandAttributes | _ToProto]

          type array = ::Array[StartTimerCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartTimerCommandAttributes | _ToProto]
        end

        class CompleteWorkflowExecutionCommandAttributes < ::Protobuf::Message
          attr_accessor result(): ::Temporal::Api::Common::V1::Payloads?

          def result=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                     | ...

          def result!: () -> ::Temporal::Api::Common::V1::Payloads?

          def initialize: (?result: ::Temporal::Api::Common::V1::Payloads::init?) -> void

          def []: (:result) -> ::Temporal::Api::Common::V1::Payloads?
                | (::Symbol) -> untyped

          def []=: (:result, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:result, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CompleteWorkflowExecutionCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = CompleteWorkflowExecutionCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CompleteWorkflowExecutionCommandAttributes, CompleteWorkflowExecutionCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CompleteWorkflowExecutionCommandAttributes, CompleteWorkflowExecutionCommandAttributes | _ToProto]

          type array = ::Array[CompleteWorkflowExecutionCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, CompleteWorkflowExecutionCommandAttributes | _ToProto]
        end

        class FailWorkflowExecutionCommandAttributes < ::Protobuf::Message
          attr_accessor failure(): ::Temporal::Api::Failure::V1::Failure?

          def failure=: [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporal::Api::Failure::V1::Failure?

          def initialize: (?failure: ::Temporal::Api::Failure::V1::Failure::init?) -> void

          def []: (:failure) -> ::Temporal::Api::Failure::V1::Failure?
                | (::Symbol) -> untyped

          def []=: (:failure, ::Temporal::Api::Failure::V1::Failure?) -> ::Temporal::Api::Failure::V1::Failure?
                 | [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> FailWorkflowExecutionCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = FailWorkflowExecutionCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[FailWorkflowExecutionCommandAttributes, FailWorkflowExecutionCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, FailWorkflowExecutionCommandAttributes, FailWorkflowExecutionCommandAttributes | _ToProto]

          type array = ::Array[FailWorkflowExecutionCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, FailWorkflowExecutionCommandAttributes | _ToProto]
        end

        class CancelTimerCommandAttributes < ::Protobuf::Message
          # The same timer id from the start timer command
          #
          attr_accessor timer_id(): ::String

          def timer_id!: () -> ::String?

          def initialize: (?timer_id: ::String) -> void

          def []: (:timer_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:timer_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CancelTimerCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = CancelTimerCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CancelTimerCommandAttributes, CancelTimerCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CancelTimerCommandAttributes, CancelTimerCommandAttributes | _ToProto]

          type array = ::Array[CancelTimerCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, CancelTimerCommandAttributes | _ToProto]
        end

        class CancelWorkflowExecutionCommandAttributes < ::Protobuf::Message
          attr_accessor details(): ::Temporal::Api::Common::V1::Payloads?

          def details=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporal::Api::Common::V1::Payloads?

          def initialize: (?details: ::Temporal::Api::Common::V1::Payloads::init?) -> void

          def []: (:details) -> ::Temporal::Api::Common::V1::Payloads?
                | (::Symbol) -> untyped

          def []=: (:details, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CancelWorkflowExecutionCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = CancelWorkflowExecutionCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CancelWorkflowExecutionCommandAttributes, CancelWorkflowExecutionCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CancelWorkflowExecutionCommandAttributes, CancelWorkflowExecutionCommandAttributes | _ToProto]

          type array = ::Array[CancelWorkflowExecutionCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, CancelWorkflowExecutionCommandAttributes | _ToProto]
        end

        class RequestCancelExternalWorkflowExecutionCommandAttributes < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          # Deprecated.
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Set this to true if the workflow being cancelled is a child of the workflow originating this
          #  command. The request will be rejected if it is set to true and the target workflow is *not*
          #  a child of the requesting workflow.
          #
          attr_accessor child_workflow_only(): bool

          def child_workflow_only!: () -> bool?

          # Reason for requesting the cancellation
          #
          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?run_id: ::String, ?control: ::String, ?child_workflow_only: bool, ?reason: ::String) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:run_id) -> ::String
                | (:control) -> ::String
                | (:child_workflow_only) -> bool
                | (:reason) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:run_id, ::String) -> ::String
                 | (:control, ::String) -> ::String
                 | (:child_workflow_only, bool) -> bool
                 | (:reason, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          def child_workflow_only?: () -> bool

          interface _ToProto
            def to_proto: () -> RequestCancelExternalWorkflowExecutionCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = RequestCancelExternalWorkflowExecutionCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RequestCancelExternalWorkflowExecutionCommandAttributes, RequestCancelExternalWorkflowExecutionCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RequestCancelExternalWorkflowExecutionCommandAttributes, RequestCancelExternalWorkflowExecutionCommandAttributes | _ToProto]

          type array = ::Array[RequestCancelExternalWorkflowExecutionCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, RequestCancelExternalWorkflowExecutionCommandAttributes | _ToProto]
        end

        class SignalExternalWorkflowExecutionCommandAttributes < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor execution(): ::Temporal::Api::Common::V1::WorkflowExecution?

          def execution=: [M < ::Temporal::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                        | ...

          def execution!: () -> ::Temporal::Api::Common::V1::WorkflowExecution?

          # The workflow author-defined name of the signal to send to the workflow.
          #
          attr_accessor signal_name(): ::String

          def signal_name!: () -> ::String?

          # Serialized value(s) to provide with the signal.
          #
          attr_accessor input(): ::Temporal::Api::Common::V1::Payloads?

          # Serialized value(s) to provide with the signal.
          #
          def input=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporal::Api::Common::V1::Payloads?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Set this to true if the workflow being cancelled is a child of the workflow originating this
          #  command. The request will be rejected if it is set to true and the target workflow is *not*
          #  a child of the requesting workflow.
          #
          attr_accessor child_workflow_only(): bool

          def child_workflow_only!: () -> bool?

          # Headers that are passed by the workflow that is sending a signal to the external 
          #  workflow that is receiving this signal.
          #
          attr_accessor header(): ::Temporal::Api::Common::V1::Header?

          # Headers that are passed by the workflow that is sending a signal to the external 
          #  workflow that is receiving this signal.
          #
          def header=: [M < ::Temporal::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporal::Api::Common::V1::Header?

          def initialize: (?namespace: ::String, ?execution: ::Temporal::Api::Common::V1::WorkflowExecution::init?, ?signal_name: ::String, ?input: ::Temporal::Api::Common::V1::Payloads::init?, ?control: ::String, ?child_workflow_only: bool, ?header: ::Temporal::Api::Common::V1::Header::init?) -> void

          def []: (:namespace) -> ::String
                | (:execution) -> ::Temporal::Api::Common::V1::WorkflowExecution?
                | (:signal_name) -> ::String
                | (:input) -> ::Temporal::Api::Common::V1::Payloads?
                | (:control) -> ::String
                | (:child_workflow_only) -> bool
                | (:header) -> ::Temporal::Api::Common::V1::Header?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:execution, ::Temporal::Api::Common::V1::WorkflowExecution?) -> ::Temporal::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporal::Api::Common::V1::WorkflowExecution::_ToProto] (:execution, M?) -> M?
                 | (:signal_name, ::String) -> ::String
                 | (:input, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:control, ::String) -> ::String
                 | (:child_workflow_only, bool) -> bool
                 | (:header, ::Temporal::Api::Common::V1::Header?) -> ::Temporal::Api::Common::V1::Header?
                 | [M < ::Temporal::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          def child_workflow_only?: () -> bool

          interface _ToProto
            def to_proto: () -> SignalExternalWorkflowExecutionCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = SignalExternalWorkflowExecutionCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalExternalWorkflowExecutionCommandAttributes, SignalExternalWorkflowExecutionCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalExternalWorkflowExecutionCommandAttributes, SignalExternalWorkflowExecutionCommandAttributes | _ToProto]

          type array = ::Array[SignalExternalWorkflowExecutionCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, SignalExternalWorkflowExecutionCommandAttributes | _ToProto]
        end

        class UpsertWorkflowSearchAttributesCommandAttributes < ::Protobuf::Message
          attr_accessor search_attributes(): ::Temporal::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporal::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporal::Api::Common::V1::SearchAttributes?

          def initialize: (?search_attributes: ::Temporal::Api::Common::V1::SearchAttributes::init?) -> void

          def []: (:search_attributes) -> ::Temporal::Api::Common::V1::SearchAttributes?
                | (::Symbol) -> untyped

          def []=: (:search_attributes, ::Temporal::Api::Common::V1::SearchAttributes?) -> ::Temporal::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporal::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> UpsertWorkflowSearchAttributesCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = UpsertWorkflowSearchAttributesCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpsertWorkflowSearchAttributesCommandAttributes, UpsertWorkflowSearchAttributesCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpsertWorkflowSearchAttributesCommandAttributes, UpsertWorkflowSearchAttributesCommandAttributes | _ToProto]

          type array = ::Array[UpsertWorkflowSearchAttributesCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpsertWorkflowSearchAttributesCommandAttributes | _ToProto]
        end

        class RecordMarkerCommandAttributes < ::Protobuf::Message
          attr_accessor marker_name(): ::String

          def marker_name!: () -> ::String?

          attr_accessor details(): ::Temporal::Api::Common::V1::Payloads::field_hash[::String]

          def details=: (::Temporal::Api::Common::V1::Payloads::hash[::String]) -> ::Temporal::Api::Common::V1::Payloads::hash[::String]
                      | ...

          def details!: () -> ::Temporal::Api::Common::V1::Payloads::field_hash[::String]?

          attr_accessor header(): ::Temporal::Api::Common::V1::Header?

          def header=: [M < ::Temporal::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporal::Api::Common::V1::Header?

          attr_accessor failure(): ::Temporal::Api::Failure::V1::Failure?

          def failure=: [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporal::Api::Failure::V1::Failure?

          def initialize: (?marker_name: ::String, ?details: ::Temporal::Api::Common::V1::Payloads::hash[::String], ?header: ::Temporal::Api::Common::V1::Header::init?, ?failure: ::Temporal::Api::Failure::V1::Failure::init?) -> void

          def []: (:marker_name) -> ::String
                | (:details) -> ::Temporal::Api::Common::V1::Payloads::field_hash[::String]
                | (:header) -> ::Temporal::Api::Common::V1::Header?
                | (:failure) -> ::Temporal::Api::Failure::V1::Failure?
                | (::Symbol) -> untyped

          def []=: (:marker_name, ::String) -> ::String
                 | (:details, ::Temporal::Api::Common::V1::Payloads::field_hash[::String]) -> ::Temporal::Api::Common::V1::Payloads::field_hash[::String]
                 | (:details, ::Temporal::Api::Common::V1::Payloads::hash[::String]) -> ::Temporal::Api::Common::V1::Payloads::hash[::String]
                 | (:header, ::Temporal::Api::Common::V1::Header?) -> ::Temporal::Api::Common::V1::Header?
                 | [M < ::Temporal::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:failure, ::Temporal::Api::Failure::V1::Failure?) -> ::Temporal::Api::Failure::V1::Failure?
                 | [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RecordMarkerCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = RecordMarkerCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RecordMarkerCommandAttributes, RecordMarkerCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RecordMarkerCommandAttributes, RecordMarkerCommandAttributes | _ToProto]

          type array = ::Array[RecordMarkerCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, RecordMarkerCommandAttributes | _ToProto]
        end

        class ContinueAsNewWorkflowExecutionCommandAttributes < ::Protobuf::Message
          attr_accessor workflow_type(): ::Temporal::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporal::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporal::Api::Common::V1::WorkflowType?

          attr_accessor task_queue(): ::Temporal::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporal::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporal::Api::TaskQueue::V1::TaskQueue?

          attr_accessor input(): ::Temporal::Api::Common::V1::Payloads?

          def input=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporal::Api::Common::V1::Payloads?

          # Timeout of a single workflow run.
          #
          attr_accessor workflow_run_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          def workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                   | ...

          def workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          attr_accessor workflow_task_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          def workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # How long the workflow start will be delayed - not really a "backoff" in the traditional sense.
          #
          attr_accessor backoff_start_interval(): ::Google::Protobuf::Duration?

          # How long the workflow start will be delayed - not really a "backoff" in the traditional sense.
          #
          def backoff_start_interval=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                     | ...

          def backoff_start_interval!: () -> ::Google::Protobuf::Duration?

          attr_accessor retry_policy(): ::Temporal::Api::Common::V1::RetryPolicy?

          def retry_policy=: [M < ::Temporal::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporal::Api::Common::V1::RetryPolicy?

          # Should be removed
          #
          attr_accessor initiator(): ::Temporal::Api::Enums::V1::ContinueAsNewInitiator

          # Should be removed
          #
          def initiator=: (::Temporal::Api::Enums::V1::ContinueAsNewInitiator::values) -> ::Temporal::Api::Enums::V1::ContinueAsNewInitiator::values
                        | ...

          def initiator!: () -> ::Temporal::Api::Enums::V1::ContinueAsNewInitiator?

          # Should be removed
          #
          attr_accessor failure(): ::Temporal::Api::Failure::V1::Failure?

          # Should be removed
          #
          def failure=: [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporal::Api::Failure::V1::Failure?

          # Should be removed
          #
          attr_accessor last_completion_result(): ::Temporal::Api::Common::V1::Payloads?

          # Should be removed
          #
          def last_completion_result=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                                     | ...

          def last_completion_result!: () -> ::Temporal::Api::Common::V1::Payloads?

          # Should be removed. Not necessarily unused but unclear and not exposed by SDKs.
          #
          attr_accessor cron_schedule(): ::String

          def cron_schedule!: () -> ::String?

          attr_accessor header(): ::Temporal::Api::Common::V1::Header?

          def header=: [M < ::Temporal::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporal::Api::Common::V1::Header?

          attr_accessor memo(): ::Temporal::Api::Common::V1::Memo?

          def memo=: [M < ::Temporal::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporal::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporal::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporal::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporal::Api::Common::V1::SearchAttributes?

          def initialize: (?workflow_type: ::Temporal::Api::Common::V1::WorkflowType::init?, ?task_queue: ::Temporal::Api::TaskQueue::V1::TaskQueue::init?, ?input: ::Temporal::Api::Common::V1::Payloads::init?, ?workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?backoff_start_interval: ::Google::Protobuf::Duration::init?, ?retry_policy: ::Temporal::Api::Common::V1::RetryPolicy::init?, ?initiator: ::Temporal::Api::Enums::V1::ContinueAsNewInitiator::init, ?failure: ::Temporal::Api::Failure::V1::Failure::init?, ?last_completion_result: ::Temporal::Api::Common::V1::Payloads::init?, ?cron_schedule: ::String, ?header: ::Temporal::Api::Common::V1::Header::init?, ?memo: ::Temporal::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporal::Api::Common::V1::SearchAttributes::init?) -> void

          def []: (:workflow_type) -> ::Temporal::Api::Common::V1::WorkflowType?
                | (:task_queue) -> ::Temporal::Api::TaskQueue::V1::TaskQueue?
                | (:input) -> ::Temporal::Api::Common::V1::Payloads?
                | (:workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:backoff_start_interval) -> ::Google::Protobuf::Duration?
                | (:retry_policy) -> ::Temporal::Api::Common::V1::RetryPolicy?
                | (:initiator) -> ::Temporal::Api::Enums::V1::ContinueAsNewInitiator
                | (:failure) -> ::Temporal::Api::Failure::V1::Failure?
                | (:last_completion_result) -> ::Temporal::Api::Common::V1::Payloads?
                | (:cron_schedule) -> ::String
                | (:header) -> ::Temporal::Api::Common::V1::Header?
                | (:memo) -> ::Temporal::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporal::Api::Common::V1::SearchAttributes?
                | (::Symbol) -> untyped

          def []=: (:workflow_type, ::Temporal::Api::Common::V1::WorkflowType?) -> ::Temporal::Api::Common::V1::WorkflowType?
                 | [M < ::Temporal::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:task_queue, ::Temporal::Api::TaskQueue::V1::TaskQueue?) -> ::Temporal::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporal::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:input, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_run_timeout, M?) -> M?
                 | (:workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_task_timeout, M?) -> M?
                 | (:backoff_start_interval, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:backoff_start_interval, M?) -> M?
                 | (:retry_policy, ::Temporal::Api::Common::V1::RetryPolicy?) -> ::Temporal::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporal::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (:initiator, ::Temporal::Api::Enums::V1::ContinueAsNewInitiator) -> ::Temporal::Api::Enums::V1::ContinueAsNewInitiator
                 | (:initiator, ::Temporal::Api::Enums::V1::ContinueAsNewInitiator::values) -> ::Temporal::Api::Enums::V1::ContinueAsNewInitiator::values
                 | (:failure, ::Temporal::Api::Failure::V1::Failure?) -> ::Temporal::Api::Failure::V1::Failure?
                 | [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:last_completion_result, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:last_completion_result, M?) -> M?
                 | (:cron_schedule, ::String) -> ::String
                 | (:header, ::Temporal::Api::Common::V1::Header?) -> ::Temporal::Api::Common::V1::Header?
                 | [M < ::Temporal::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:memo, ::Temporal::Api::Common::V1::Memo?) -> ::Temporal::Api::Common::V1::Memo?
                 | [M < ::Temporal::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporal::Api::Common::V1::SearchAttributes?) -> ::Temporal::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporal::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ContinueAsNewWorkflowExecutionCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = ContinueAsNewWorkflowExecutionCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ContinueAsNewWorkflowExecutionCommandAttributes, ContinueAsNewWorkflowExecutionCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ContinueAsNewWorkflowExecutionCommandAttributes, ContinueAsNewWorkflowExecutionCommandAttributes | _ToProto]

          type array = ::Array[ContinueAsNewWorkflowExecutionCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, ContinueAsNewWorkflowExecutionCommandAttributes | _ToProto]
        end

        class StartChildWorkflowExecutionCommandAttributes < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          attr_accessor workflow_type(): ::Temporal::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporal::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporal::Api::Common::V1::WorkflowType?

          attr_accessor task_queue(): ::Temporal::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporal::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporal::Api::TaskQueue::V1::TaskQueue?

          attr_accessor input(): ::Temporal::Api::Common::V1::Payloads?

          def input=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporal::Api::Common::V1::Payloads?

          # Total workflow execution timeout including retries and continue as new.
          #
          attr_accessor workflow_execution_timeout(): ::Google::Protobuf::Duration?

          # Total workflow execution timeout including retries and continue as new.
          #
          def workflow_execution_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                         | ...

          def workflow_execution_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          attr_accessor workflow_run_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          def workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                   | ...

          def workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          attr_accessor workflow_task_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          def workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # Default: PARENT_CLOSE_POLICY_TERMINATE.
          #
          attr_accessor parent_close_policy(): ::Temporal::Api::Enums::V1::ParentClosePolicy

          # Default: PARENT_CLOSE_POLICY_TERMINATE.
          #
          def parent_close_policy=: (::Temporal::Api::Enums::V1::ParentClosePolicy::values) -> ::Temporal::Api::Enums::V1::ParentClosePolicy::values
                                  | ...

          def parent_close_policy!: () -> ::Temporal::Api::Enums::V1::ParentClosePolicy?

          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          attr_accessor workflow_id_reuse_policy(): ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy

          # Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          def workflow_id_reuse_policy=: (::Temporal::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy::values
                                       | ...

          def workflow_id_reuse_policy!: () -> ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy?

          attr_accessor retry_policy(): ::Temporal::Api::Common::V1::RetryPolicy?

          def retry_policy=: [M < ::Temporal::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporal::Api::Common::V1::RetryPolicy?

          # Establish a cron schedule for the child workflow.
          #
          attr_accessor cron_schedule(): ::String

          def cron_schedule!: () -> ::String?

          attr_accessor header(): ::Temporal::Api::Common::V1::Header?

          def header=: [M < ::Temporal::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporal::Api::Common::V1::Header?

          attr_accessor memo(): ::Temporal::Api::Common::V1::Memo?

          def memo=: [M < ::Temporal::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporal::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporal::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporal::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporal::Api::Common::V1::SearchAttributes?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?workflow_type: ::Temporal::Api::Common::V1::WorkflowType::init?, ?task_queue: ::Temporal::Api::TaskQueue::V1::TaskQueue::init?, ?input: ::Temporal::Api::Common::V1::Payloads::init?, ?workflow_execution_timeout: ::Google::Protobuf::Duration::init?, ?workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?parent_close_policy: ::Temporal::Api::Enums::V1::ParentClosePolicy::init, ?control: ::String, ?workflow_id_reuse_policy: ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy::init, ?retry_policy: ::Temporal::Api::Common::V1::RetryPolicy::init?, ?cron_schedule: ::String, ?header: ::Temporal::Api::Common::V1::Header::init?, ?memo: ::Temporal::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporal::Api::Common::V1::SearchAttributes::init?) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:workflow_type) -> ::Temporal::Api::Common::V1::WorkflowType?
                | (:task_queue) -> ::Temporal::Api::TaskQueue::V1::TaskQueue?
                | (:input) -> ::Temporal::Api::Common::V1::Payloads?
                | (:workflow_execution_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:parent_close_policy) -> ::Temporal::Api::Enums::V1::ParentClosePolicy
                | (:control) -> ::String
                | (:workflow_id_reuse_policy) -> ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy
                | (:retry_policy) -> ::Temporal::Api::Common::V1::RetryPolicy?
                | (:cron_schedule) -> ::String
                | (:header) -> ::Temporal::Api::Common::V1::Header?
                | (:memo) -> ::Temporal::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporal::Api::Common::V1::SearchAttributes?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:workflow_type, ::Temporal::Api::Common::V1::WorkflowType?) -> ::Temporal::Api::Common::V1::WorkflowType?
                 | [M < ::Temporal::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:task_queue, ::Temporal::Api::TaskQueue::V1::TaskQueue?) -> ::Temporal::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporal::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:input, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:workflow_execution_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_execution_timeout, M?) -> M?
                 | (:workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_run_timeout, M?) -> M?
                 | (:workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_task_timeout, M?) -> M?
                 | (:parent_close_policy, ::Temporal::Api::Enums::V1::ParentClosePolicy) -> ::Temporal::Api::Enums::V1::ParentClosePolicy
                 | (:parent_close_policy, ::Temporal::Api::Enums::V1::ParentClosePolicy::values) -> ::Temporal::Api::Enums::V1::ParentClosePolicy::values
                 | (:control, ::String) -> ::String
                 | (:workflow_id_reuse_policy, ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy) -> ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy
                 | (:workflow_id_reuse_policy, ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporal::Api::Enums::V1::WorkflowIdReusePolicy::values
                 | (:retry_policy, ::Temporal::Api::Common::V1::RetryPolicy?) -> ::Temporal::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporal::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (:cron_schedule, ::String) -> ::String
                 | (:header, ::Temporal::Api::Common::V1::Header?) -> ::Temporal::Api::Common::V1::Header?
                 | [M < ::Temporal::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:memo, ::Temporal::Api::Common::V1::Memo?) -> ::Temporal::Api::Common::V1::Memo?
                 | [M < ::Temporal::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporal::Api::Common::V1::SearchAttributes?) -> ::Temporal::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporal::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StartChildWorkflowExecutionCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = StartChildWorkflowExecutionCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartChildWorkflowExecutionCommandAttributes, StartChildWorkflowExecutionCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartChildWorkflowExecutionCommandAttributes, StartChildWorkflowExecutionCommandAttributes | _ToProto]

          type array = ::Array[StartChildWorkflowExecutionCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartChildWorkflowExecutionCommandAttributes | _ToProto]
        end

        class AcceptWorkflowUpdateCommandAttributes < ::Protobuf::Message
          # A unique identifier for an update within a given workflow context
          #
          attr_accessor update_id(): ::String

          def update_id!: () -> ::String?

          def initialize: (?update_id: ::String) -> void

          def []: (:update_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:update_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> AcceptWorkflowUpdateCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = AcceptWorkflowUpdateCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AcceptWorkflowUpdateCommandAttributes, AcceptWorkflowUpdateCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AcceptWorkflowUpdateCommandAttributes, AcceptWorkflowUpdateCommandAttributes | _ToProto]

          type array = ::Array[AcceptWorkflowUpdateCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, AcceptWorkflowUpdateCommandAttributes | _ToProto]
        end

        class CompleteWorkflowUpdateCommandAttributes < ::Protobuf::Message
          # A unique identifier for an update within a given workflow context
          #
          attr_accessor update_id(): ::String

          def update_id!: () -> ::String?

          # Whether the server should attempt to bypass making this update rejection
          #  durable in history. This field is only consulted when the result field
          #  indicates failure. Leaving this field in its default state (i.e.
          #  UPDATE_WORKFLOW_REJECTION_DURABILITY_PREFERENCE_UNSPECIFIED) will result
          #  in making the rejection durable.
          #
          attr_accessor durability_preference(): ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference

          # Whether the server should attempt to bypass making this update rejection
          #  durable in history. This field is only consulted when the result field
          #  indicates failure. Leaving this field in its default state (i.e.
          #  UPDATE_WORKFLOW_REJECTION_DURABILITY_PREFERENCE_UNSPECIFIED) will result
          #  in making the rejection durable.
          #
          def durability_preference=: (::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference::values) -> ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference::values
                                    | ...

          def durability_preference!: () -> ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference?

          attr_accessor success(): ::Temporal::Api::Common::V1::Payloads?

          def success=: [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def success!: () -> ::Temporal::Api::Common::V1::Payloads?

          attr_accessor failure(): ::Temporal::Api::Failure::V1::Failure?

          def failure=: [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporal::Api::Failure::V1::Failure?

          def initialize: (?update_id: ::String, ?durability_preference: ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference::init, ?success: ::Temporal::Api::Common::V1::Payloads::init?, ?failure: ::Temporal::Api::Failure::V1::Failure::init?) -> void

          def []: (:update_id) -> ::String
                | (:durability_preference) -> ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference
                | (:success) -> ::Temporal::Api::Common::V1::Payloads?
                | (:failure) -> ::Temporal::Api::Failure::V1::Failure?
                | (::Symbol) -> untyped

          def []=: (:update_id, ::String) -> ::String
                 | (:durability_preference, ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference) -> ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference
                 | (:durability_preference, ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference::values) -> ::Temporal::Api::Enums::V1::WorkflowUpdateDurabilityPreference::values
                 | (:success, ::Temporal::Api::Common::V1::Payloads?) -> ::Temporal::Api::Common::V1::Payloads?
                 | [M < ::Temporal::Api::Common::V1::Payloads::_ToProto] (:success, M?) -> M?
                 | (:failure, ::Temporal::Api::Failure::V1::Failure?) -> ::Temporal::Api::Failure::V1::Failure?
                 | [M < ::Temporal::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CompleteWorkflowUpdateCommandAttributes
          end

          # The type of `#initialize` parameter.
          type init = CompleteWorkflowUpdateCommandAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CompleteWorkflowUpdateCommandAttributes, CompleteWorkflowUpdateCommandAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CompleteWorkflowUpdateCommandAttributes, CompleteWorkflowUpdateCommandAttributes | _ToProto]

          type array = ::Array[CompleteWorkflowUpdateCommandAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, CompleteWorkflowUpdateCommandAttributes | _ToProto]
        end

        class Command < ::Protobuf::Message
          attr_accessor command_type(): ::Temporal::Api::Enums::V1::CommandType

          def command_type=: (::Temporal::Api::Enums::V1::CommandType::values) -> ::Temporal::Api::Enums::V1::CommandType::values
                           | ...

          def command_type!: () -> ::Temporal::Api::Enums::V1::CommandType?

          attr_accessor schedule_activity_task_command_attributes(): ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes?

          def schedule_activity_task_command_attributes=: [M < ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes::_ToProto] (M?) -> M?
                                                        | ...

          def schedule_activity_task_command_attributes!: () -> ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes?

          attr_accessor start_timer_command_attributes(): ::Temporal::Api::Command::V1::StartTimerCommandAttributes?

          def start_timer_command_attributes=: [M < ::Temporal::Api::Command::V1::StartTimerCommandAttributes::_ToProto] (M?) -> M?
                                             | ...

          def start_timer_command_attributes!: () -> ::Temporal::Api::Command::V1::StartTimerCommandAttributes?

          attr_accessor complete_workflow_execution_command_attributes(): ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes?

          def complete_workflow_execution_command_attributes=: [M < ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes::_ToProto] (M?) -> M?
                                                             | ...

          def complete_workflow_execution_command_attributes!: () -> ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes?

          attr_accessor fail_workflow_execution_command_attributes(): ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes?

          def fail_workflow_execution_command_attributes=: [M < ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes::_ToProto] (M?) -> M?
                                                         | ...

          def fail_workflow_execution_command_attributes!: () -> ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes?

          attr_accessor request_cancel_activity_task_command_attributes(): ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes?

          def request_cancel_activity_task_command_attributes=: [M < ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes::_ToProto] (M?) -> M?
                                                              | ...

          def request_cancel_activity_task_command_attributes!: () -> ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes?

          attr_accessor cancel_timer_command_attributes(): ::Temporal::Api::Command::V1::CancelTimerCommandAttributes?

          def cancel_timer_command_attributes=: [M < ::Temporal::Api::Command::V1::CancelTimerCommandAttributes::_ToProto] (M?) -> M?
                                              | ...

          def cancel_timer_command_attributes!: () -> ::Temporal::Api::Command::V1::CancelTimerCommandAttributes?

          attr_accessor cancel_workflow_execution_command_attributes(): ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes?

          def cancel_workflow_execution_command_attributes=: [M < ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes::_ToProto] (M?) -> M?
                                                           | ...

          def cancel_workflow_execution_command_attributes!: () -> ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes?

          attr_accessor request_cancel_external_workflow_execution_command_attributes(): ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes?

          def request_cancel_external_workflow_execution_command_attributes=: [M < ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes::_ToProto] (M?) -> M?
                                                                            | ...

          def request_cancel_external_workflow_execution_command_attributes!: () -> ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes?

          attr_accessor record_marker_command_attributes(): ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes?

          def record_marker_command_attributes=: [M < ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes::_ToProto] (M?) -> M?
                                               | ...

          def record_marker_command_attributes!: () -> ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes?

          attr_accessor continue_as_new_workflow_execution_command_attributes(): ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes?

          def continue_as_new_workflow_execution_command_attributes=: [M < ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes::_ToProto] (M?) -> M?
                                                                    | ...

          def continue_as_new_workflow_execution_command_attributes!: () -> ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes?

          attr_accessor start_child_workflow_execution_command_attributes(): ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes?

          def start_child_workflow_execution_command_attributes=: [M < ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes::_ToProto] (M?) -> M?
                                                                | ...

          def start_child_workflow_execution_command_attributes!: () -> ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes?

          attr_accessor signal_external_workflow_execution_command_attributes(): ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes?

          def signal_external_workflow_execution_command_attributes=: [M < ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes::_ToProto] (M?) -> M?
                                                                    | ...

          def signal_external_workflow_execution_command_attributes!: () -> ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes?

          attr_accessor upsert_workflow_search_attributes_command_attributes(): ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes?

          def upsert_workflow_search_attributes_command_attributes=: [M < ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes::_ToProto] (M?) -> M?
                                                                   | ...

          def upsert_workflow_search_attributes_command_attributes!: () -> ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes?

          attr_accessor accept_workflow_update_command_attributes(): ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes?

          def accept_workflow_update_command_attributes=: [M < ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes::_ToProto] (M?) -> M?
                                                        | ...

          def accept_workflow_update_command_attributes!: () -> ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes?

          attr_accessor complete_workflow_update_command_attributes(): ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes?

          def complete_workflow_update_command_attributes=: [M < ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes::_ToProto] (M?) -> M?
                                                          | ...

          def complete_workflow_update_command_attributes!: () -> ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes?

          def initialize: (?command_type: ::Temporal::Api::Enums::V1::CommandType::init, ?schedule_activity_task_command_attributes: ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes::init?, ?start_timer_command_attributes: ::Temporal::Api::Command::V1::StartTimerCommandAttributes::init?, ?complete_workflow_execution_command_attributes: ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes::init?, ?fail_workflow_execution_command_attributes: ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes::init?, ?request_cancel_activity_task_command_attributes: ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes::init?, ?cancel_timer_command_attributes: ::Temporal::Api::Command::V1::CancelTimerCommandAttributes::init?, ?cancel_workflow_execution_command_attributes: ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes::init?, ?request_cancel_external_workflow_execution_command_attributes: ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes::init?, ?record_marker_command_attributes: ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes::init?, ?continue_as_new_workflow_execution_command_attributes: ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes::init?, ?start_child_workflow_execution_command_attributes: ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes::init?, ?signal_external_workflow_execution_command_attributes: ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes::init?, ?upsert_workflow_search_attributes_command_attributes: ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes::init?, ?accept_workflow_update_command_attributes: ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes::init?, ?complete_workflow_update_command_attributes: ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes::init?) -> void

          def []: (:command_type) -> ::Temporal::Api::Enums::V1::CommandType
                | (:schedule_activity_task_command_attributes) -> ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes?
                | (:start_timer_command_attributes) -> ::Temporal::Api::Command::V1::StartTimerCommandAttributes?
                | (:complete_workflow_execution_command_attributes) -> ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes?
                | (:fail_workflow_execution_command_attributes) -> ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes?
                | (:request_cancel_activity_task_command_attributes) -> ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes?
                | (:cancel_timer_command_attributes) -> ::Temporal::Api::Command::V1::CancelTimerCommandAttributes?
                | (:cancel_workflow_execution_command_attributes) -> ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes?
                | (:request_cancel_external_workflow_execution_command_attributes) -> ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes?
                | (:record_marker_command_attributes) -> ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes?
                | (:continue_as_new_workflow_execution_command_attributes) -> ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes?
                | (:start_child_workflow_execution_command_attributes) -> ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes?
                | (:signal_external_workflow_execution_command_attributes) -> ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes?
                | (:upsert_workflow_search_attributes_command_attributes) -> ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes?
                | (:accept_workflow_update_command_attributes) -> ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes?
                | (:complete_workflow_update_command_attributes) -> ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes?
                | (::Symbol) -> untyped

          def []=: (:command_type, ::Temporal::Api::Enums::V1::CommandType) -> ::Temporal::Api::Enums::V1::CommandType
                 | (:command_type, ::Temporal::Api::Enums::V1::CommandType::values) -> ::Temporal::Api::Enums::V1::CommandType::values
                 | (:schedule_activity_task_command_attributes, ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes?) -> ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::ScheduleActivityTaskCommandAttributes::_ToProto] (:schedule_activity_task_command_attributes, M?) -> M?
                 | (:start_timer_command_attributes, ::Temporal::Api::Command::V1::StartTimerCommandAttributes?) -> ::Temporal::Api::Command::V1::StartTimerCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::StartTimerCommandAttributes::_ToProto] (:start_timer_command_attributes, M?) -> M?
                 | (:complete_workflow_execution_command_attributes, ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes?) -> ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::CompleteWorkflowExecutionCommandAttributes::_ToProto] (:complete_workflow_execution_command_attributes, M?) -> M?
                 | (:fail_workflow_execution_command_attributes, ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes?) -> ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::FailWorkflowExecutionCommandAttributes::_ToProto] (:fail_workflow_execution_command_attributes, M?) -> M?
                 | (:request_cancel_activity_task_command_attributes, ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes?) -> ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::RequestCancelActivityTaskCommandAttributes::_ToProto] (:request_cancel_activity_task_command_attributes, M?) -> M?
                 | (:cancel_timer_command_attributes, ::Temporal::Api::Command::V1::CancelTimerCommandAttributes?) -> ::Temporal::Api::Command::V1::CancelTimerCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::CancelTimerCommandAttributes::_ToProto] (:cancel_timer_command_attributes, M?) -> M?
                 | (:cancel_workflow_execution_command_attributes, ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes?) -> ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::CancelWorkflowExecutionCommandAttributes::_ToProto] (:cancel_workflow_execution_command_attributes, M?) -> M?
                 | (:request_cancel_external_workflow_execution_command_attributes, ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes?) -> ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::RequestCancelExternalWorkflowExecutionCommandAttributes::_ToProto] (:request_cancel_external_workflow_execution_command_attributes, M?) -> M?
                 | (:record_marker_command_attributes, ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes?) -> ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::RecordMarkerCommandAttributes::_ToProto] (:record_marker_command_attributes, M?) -> M?
                 | (:continue_as_new_workflow_execution_command_attributes, ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes?) -> ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::ContinueAsNewWorkflowExecutionCommandAttributes::_ToProto] (:continue_as_new_workflow_execution_command_attributes, M?) -> M?
                 | (:start_child_workflow_execution_command_attributes, ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes?) -> ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::StartChildWorkflowExecutionCommandAttributes::_ToProto] (:start_child_workflow_execution_command_attributes, M?) -> M?
                 | (:signal_external_workflow_execution_command_attributes, ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes?) -> ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::SignalExternalWorkflowExecutionCommandAttributes::_ToProto] (:signal_external_workflow_execution_command_attributes, M?) -> M?
                 | (:upsert_workflow_search_attributes_command_attributes, ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes?) -> ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::UpsertWorkflowSearchAttributesCommandAttributes::_ToProto] (:upsert_workflow_search_attributes_command_attributes, M?) -> M?
                 | (:accept_workflow_update_command_attributes, ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes?) -> ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::AcceptWorkflowUpdateCommandAttributes::_ToProto] (:accept_workflow_update_command_attributes, M?) -> M?
                 | (:complete_workflow_update_command_attributes, ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes?) -> ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes?
                 | [M < ::Temporal::Api::Command::V1::CompleteWorkflowUpdateCommandAttributes::_ToProto] (:complete_workflow_update_command_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> Command
          end

          # The type of `#initialize` parameter.
          type init = Command | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[Command, Command | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, Command, Command | _ToProto]

          type array = ::Array[Command | _ToProto]

          type hash[KEY] = ::Hash[KEY, Command | _ToProto]
        end
      end
    end
  end
end
