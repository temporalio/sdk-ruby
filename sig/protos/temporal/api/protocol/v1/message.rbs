module Temporalio
  module Api
    module Protocol
      module V1
        # (-- api-linter: core::0146::any=disabled
        #      aip.dev/not-precedent: We want runtime extensibility for the body field --)
        #
        class Message < ::Protobuf::Message
          # Encode the message to a binary string
          #
          def self.encode: (Message) -> String

          # An ID for this specific message.
          #
          attr_accessor id(): ::String

          def id!: () -> ::String?

          # Identifies the specific instance of a protocol to which this message
          #  belongs.
          #
          attr_accessor protocol_instance_id(): ::String

          def protocol_instance_id!: () -> ::String?

          attr_accessor event_id(): ::Integer

          def event_id!: () -> ::Integer?

          attr_accessor command_index(): ::Integer

          def command_index!: () -> ::Integer?

          # The opaque data carried by this message. The protocol type can be
          #  extracted from the package name of the message carried inside the Any.
          #
          attr_accessor body(): ::Google::Protobuf::Any?

          # The opaque data carried by this message. The protocol type can be
          #  extracted from the package name of the message carried inside the Any.
          #
          def body=: [M < ::Google::Protobuf::Any::_ToProto] (M?) -> M?
                   | ...

          def body!: () -> ::Google::Protobuf::Any?

          def initialize: (?id: ::String, ?protocol_instance_id: ::String, ?event_id: ::Integer, ?command_index: ::Integer, ?body: ::Google::Protobuf::Any::init?) -> void

          def []: (:id) -> ::String
                | (:protocol_instance_id) -> ::String
                | (:event_id) -> ::Integer
                | (:command_index) -> ::Integer
                | (:body) -> ::Google::Protobuf::Any?
                | (::Symbol) -> untyped

          def []=: (:id, ::String) -> ::String
                 | (:protocol_instance_id, ::String) -> ::String
                 | (:event_id, ::Integer) -> ::Integer
                 | (:command_index, ::Integer) -> ::Integer
                 | (:body, ::Google::Protobuf::Any?) -> ::Google::Protobuf::Any?
                 | [M < ::Google::Protobuf::Any::_ToProto] (:body, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> Message
          end

          # The type of `#initialize` parameter.
          type init = Message | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[Message, Message | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, Message, Message | _ToProto]

          type array = ::Array[Message | _ToProto]

          type hash[KEY] = ::Hash[KEY, Message | _ToProto]
        end
      end
    end
  end
end
