module Temporal
  module Api
    module Enums
      module V1
        # Workflow tasks can fail for various reasons. Note that some of these reasons can only originate
        #  from the server, and some of them can only originate from the SDK/worker.
        #
        class WorkflowTaskFailedCause < ::Protobuf::Enum
          type names = :WORKFLOW_TASK_FAILED_CAUSE_UNSPECIFIED | :WORKFLOW_TASK_FAILED_CAUSE_UNHANDLED_COMMAND | :WORKFLOW_TASK_FAILED_CAUSE_BAD_SCHEDULE_ACTIVITY_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_ACTIVITY_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_START_TIMER_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_TIMER_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_RECORD_MARKER_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_COMPLETE_WORKFLOW_EXECUTION_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_FAIL_WORKFLOW_EXECUTION_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_WORKFLOW_EXECUTION_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_CONTINUE_AS_NEW_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_START_TIMER_DUPLICATE_ID | :WORKFLOW_TASK_FAILED_CAUSE_RESET_STICKY_TASK_QUEUE | :WORKFLOW_TASK_FAILED_CAUSE_WORKFLOW_WORKER_UNHANDLED_FAILURE | :WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_WORKFLOW_EXECUTION_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_BAD_START_CHILD_EXECUTION_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_FORCE_CLOSE_COMMAND | :WORKFLOW_TASK_FAILED_CAUSE_FAILOVER_CLOSE_COMMAND | :WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_INPUT_SIZE | :WORKFLOW_TASK_FAILED_CAUSE_RESET_WORKFLOW | :WORKFLOW_TASK_FAILED_CAUSE_BAD_BINARY | :WORKFLOW_TASK_FAILED_CAUSE_SCHEDULE_ACTIVITY_DUPLICATE_ID | :WORKFLOW_TASK_FAILED_CAUSE_BAD_SEARCH_ATTRIBUTES | :WORKFLOW_TASK_FAILED_CAUSE_NON_DETERMINISTIC_ERROR

          type strings = "WORKFLOW_TASK_FAILED_CAUSE_UNSPECIFIED" | "WORKFLOW_TASK_FAILED_CAUSE_UNHANDLED_COMMAND" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_SCHEDULE_ACTIVITY_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_ACTIVITY_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_START_TIMER_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_TIMER_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_RECORD_MARKER_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_COMPLETE_WORKFLOW_EXECUTION_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_FAIL_WORKFLOW_EXECUTION_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_WORKFLOW_EXECUTION_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_CONTINUE_AS_NEW_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_START_TIMER_DUPLICATE_ID" | "WORKFLOW_TASK_FAILED_CAUSE_RESET_STICKY_TASK_QUEUE" | "WORKFLOW_TASK_FAILED_CAUSE_WORKFLOW_WORKER_UNHANDLED_FAILURE" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_WORKFLOW_EXECUTION_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_START_CHILD_EXECUTION_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_FORCE_CLOSE_COMMAND" | "WORKFLOW_TASK_FAILED_CAUSE_FAILOVER_CLOSE_COMMAND" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_INPUT_SIZE" | "WORKFLOW_TASK_FAILED_CAUSE_RESET_WORKFLOW" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_BINARY" | "WORKFLOW_TASK_FAILED_CAUSE_SCHEDULE_ACTIVITY_DUPLICATE_ID" | "WORKFLOW_TASK_FAILED_CAUSE_BAD_SEARCH_ATTRIBUTES" | "WORKFLOW_TASK_FAILED_CAUSE_NON_DETERMINISTIC_ERROR"

          type tags = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24

          type values = names | strings | tags

          attr_reader name(): names

          attr_reader tag(): tags

          WORKFLOW_TASK_FAILED_CAUSE_UNSPECIFIED: WorkflowTaskFailedCause

          # Between starting and completing the workflow task (with a workflow completion command), some
          #  new command (like a signal) was processed into workflow history. The outstanding task will be
          #  failed with this reason, and a worker must pick up a new task.
          #
          WORKFLOW_TASK_FAILED_CAUSE_UNHANDLED_COMMAND: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_SCHEDULE_ACTIVITY_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_ACTIVITY_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_START_TIMER_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_TIMER_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_RECORD_MARKER_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_COMPLETE_WORKFLOW_EXECUTION_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_FAIL_WORKFLOW_EXECUTION_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_CANCEL_WORKFLOW_EXECUTION_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_CONTINUE_AS_NEW_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_START_TIMER_DUPLICATE_ID: WorkflowTaskFailedCause

          # The worker wishes to fail the task and have the next one be generated on a normal, not sticky
          #  queue. Generally workers should prefer to use the explicit `ResetStickyTaskQueue` RPC call.
          #
          WORKFLOW_TASK_FAILED_CAUSE_RESET_STICKY_TASK_QUEUE: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_WORKFLOW_WORKER_UNHANDLED_FAILURE: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_WORKFLOW_EXECUTION_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_START_CHILD_EXECUTION_ATTRIBUTES: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_FORCE_CLOSE_COMMAND: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_FAILOVER_CLOSE_COMMAND: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_SIGNAL_INPUT_SIZE: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_RESET_WORKFLOW: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_BINARY: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_SCHEDULE_ACTIVITY_DUPLICATE_ID: WorkflowTaskFailedCause

          WORKFLOW_TASK_FAILED_CAUSE_BAD_SEARCH_ATTRIBUTES: WorkflowTaskFailedCause

          # The worker encountered a mismatch while replaying history between what was expected, and
          #  what the workflow code actually did.
          #
          WORKFLOW_TASK_FAILED_CAUSE_NON_DETERMINISTIC_ERROR: WorkflowTaskFailedCause

          # The type of `#initialize` parameter.
          type init = WorkflowTaskFailedCause | values

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[WorkflowTaskFailedCause, WorkflowTaskFailedCause | values]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, WorkflowTaskFailedCause, WorkflowTaskFailedCause | values]

          type array = ::Array[WorkflowTaskFailedCause | values]

          type hash[KEY] = ::Hash[KEY, WorkflowTaskFailedCause | values]
        end

        class StartChildWorkflowExecutionFailedCause < ::Protobuf::Enum
          type names = :START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED | :START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_WORKFLOW_ALREADY_EXISTS | :START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND

          type strings = "START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED" | "START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_WORKFLOW_ALREADY_EXISTS" | "START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND"

          type tags = 0 | 1 | 2

          type values = names | strings | tags

          attr_reader name(): names

          attr_reader tag(): tags

          START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED: StartChildWorkflowExecutionFailedCause

          START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_WORKFLOW_ALREADY_EXISTS: StartChildWorkflowExecutionFailedCause

          START_CHILD_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND: StartChildWorkflowExecutionFailedCause

          # The type of `#initialize` parameter.
          type init = StartChildWorkflowExecutionFailedCause | values

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartChildWorkflowExecutionFailedCause, StartChildWorkflowExecutionFailedCause | values]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartChildWorkflowExecutionFailedCause, StartChildWorkflowExecutionFailedCause | values]

          type array = ::Array[StartChildWorkflowExecutionFailedCause | values]

          type hash[KEY] = ::Hash[KEY, StartChildWorkflowExecutionFailedCause | values]
        end

        class CancelExternalWorkflowExecutionFailedCause < ::Protobuf::Enum
          type names = :CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED | :CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND | :CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND

          type strings = "CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED" | "CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND" | "CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND"

          type tags = 0 | 1 | 2

          type values = names | strings | tags

          attr_reader name(): names

          attr_reader tag(): tags

          CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED: CancelExternalWorkflowExecutionFailedCause

          CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND: CancelExternalWorkflowExecutionFailedCause

          CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND: CancelExternalWorkflowExecutionFailedCause

          # The type of `#initialize` parameter.
          type init = CancelExternalWorkflowExecutionFailedCause | values

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CancelExternalWorkflowExecutionFailedCause, CancelExternalWorkflowExecutionFailedCause | values]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CancelExternalWorkflowExecutionFailedCause, CancelExternalWorkflowExecutionFailedCause | values]

          type array = ::Array[CancelExternalWorkflowExecutionFailedCause | values]

          type hash[KEY] = ::Hash[KEY, CancelExternalWorkflowExecutionFailedCause | values]
        end

        class SignalExternalWorkflowExecutionFailedCause < ::Protobuf::Enum
          type names = :SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED | :SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND | :SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND

          type strings = "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED" | "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND" | "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND"

          type tags = 0 | 1 | 2

          type values = names | strings | tags

          attr_reader name(): names

          attr_reader tag(): tags

          SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_UNSPECIFIED: SignalExternalWorkflowExecutionFailedCause

          SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_EXTERNAL_WORKFLOW_EXECUTION_NOT_FOUND: SignalExternalWorkflowExecutionFailedCause

          SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_CAUSE_NAMESPACE_NOT_FOUND: SignalExternalWorkflowExecutionFailedCause

          # The type of `#initialize` parameter.
          type init = SignalExternalWorkflowExecutionFailedCause | values

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalExternalWorkflowExecutionFailedCause, SignalExternalWorkflowExecutionFailedCause | values]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalExternalWorkflowExecutionFailedCause, SignalExternalWorkflowExecutionFailedCause | values]

          type array = ::Array[SignalExternalWorkflowExecutionFailedCause | values]

          type hash[KEY] = ::Hash[KEY, SignalExternalWorkflowExecutionFailedCause | values]
        end

        class ResourceExhaustedCause < ::Protobuf::Enum
          type names = :RESOURCE_EXHAUSTED_CAUSE_UNSPECIFIED | :RESOURCE_EXHAUSTED_CAUSE_RPS_LIMIT | :RESOURCE_EXHAUSTED_CAUSE_CONCURRENT_LIMIT | :RESOURCE_EXHAUSTED_CAUSE_SYSTEM_OVERLOADED

          type strings = "RESOURCE_EXHAUSTED_CAUSE_UNSPECIFIED" | "RESOURCE_EXHAUSTED_CAUSE_RPS_LIMIT" | "RESOURCE_EXHAUSTED_CAUSE_CONCURRENT_LIMIT" | "RESOURCE_EXHAUSTED_CAUSE_SYSTEM_OVERLOADED"

          type tags = 0 | 1 | 2 | 3

          type values = names | strings | tags

          attr_reader name(): names

          attr_reader tag(): tags

          RESOURCE_EXHAUSTED_CAUSE_UNSPECIFIED: ResourceExhaustedCause

          # Caller exceeds request per second limit.
          #
          RESOURCE_EXHAUSTED_CAUSE_RPS_LIMIT: ResourceExhaustedCause

          # Caller exceeds max concurrent request limit.
          #
          RESOURCE_EXHAUSTED_CAUSE_CONCURRENT_LIMIT: ResourceExhaustedCause

          # System overloaded.
          #
          RESOURCE_EXHAUSTED_CAUSE_SYSTEM_OVERLOADED: ResourceExhaustedCause

          # The type of `#initialize` parameter.
          type init = ResourceExhaustedCause | values

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ResourceExhaustedCause, ResourceExhaustedCause | values]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ResourceExhaustedCause, ResourceExhaustedCause | values]

          type array = ::Array[ResourceExhaustedCause | values]

          type hash[KEY] = ::Hash[KEY, ResourceExhaustedCause | values]
        end
      end
    end
  end
end
