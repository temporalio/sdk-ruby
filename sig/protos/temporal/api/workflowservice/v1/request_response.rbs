module Temporalio
  module Api
    module WorkflowService
      module V1
        class RegisterNamespaceRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor description(): ::String

          def description!: () -> ::String?

          attr_accessor owner_email(): ::String

          def owner_email!: () -> ::String?

          attr_accessor workflow_execution_retention_period(): ::Google::Protobuf::Duration?

          def workflow_execution_retention_period=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                                  | ...

          def workflow_execution_retention_period!: () -> ::Google::Protobuf::Duration?

          attr_accessor clusters(): ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::field_array

          def clusters=: (::Temporalio::Api::Replication::V1::ClusterReplicationConfig::array) -> ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::array
                       | ...

          def clusters!: () -> ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::field_array?

          attr_accessor active_cluster_name(): ::String

          def active_cluster_name!: () -> ::String?

          # A key-value map for any customized purpose.
          #
          attr_accessor data(): ::Protobuf::field_hash[::String, ::String]

          # A key-value map for any customized purpose.
          #
          def data=: (::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                   | ...

          def data!: () -> ::Protobuf::field_hash[::String, ::String]?

          attr_accessor security_token(): ::String

          def security_token!: () -> ::String?

          attr_accessor is_global_namespace(): bool

          def is_global_namespace!: () -> bool?

          # If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
          #
          attr_accessor history_archival_state(): ::Temporalio::Api::Enums::V1::ArchivalState

          # If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
          #
          def history_archival_state=: (::Temporalio::Api::Enums::V1::ArchivalState::values) -> ::Temporalio::Api::Enums::V1::ArchivalState::values
                                     | ...

          def history_archival_state!: () -> ::Temporalio::Api::Enums::V1::ArchivalState?

          attr_accessor history_archival_uri(): ::String

          def history_archival_uri!: () -> ::String?

          # If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
          #
          attr_accessor visibility_archival_state(): ::Temporalio::Api::Enums::V1::ArchivalState

          # If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
          #
          def visibility_archival_state=: (::Temporalio::Api::Enums::V1::ArchivalState::values) -> ::Temporalio::Api::Enums::V1::ArchivalState::values
                                        | ...

          def visibility_archival_state!: () -> ::Temporalio::Api::Enums::V1::ArchivalState?

          attr_accessor visibility_archival_uri(): ::String

          def visibility_archival_uri!: () -> ::String?

          def initialize: (?namespace: ::String, ?description: ::String, ?owner_email: ::String, ?workflow_execution_retention_period: ::Google::Protobuf::Duration::init?, ?clusters: ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::array, ?active_cluster_name: ::String, ?data: ::Hash[::String, ::String], ?security_token: ::String, ?is_global_namespace: bool, ?history_archival_state: ::Temporalio::Api::Enums::V1::ArchivalState::init, ?history_archival_uri: ::String, ?visibility_archival_state: ::Temporalio::Api::Enums::V1::ArchivalState::init, ?visibility_archival_uri: ::String) -> void

          def []: (:namespace) -> ::String
                | (:description) -> ::String
                | (:owner_email) -> ::String
                | (:workflow_execution_retention_period) -> ::Google::Protobuf::Duration?
                | (:clusters) -> ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::field_array
                | (:active_cluster_name) -> ::String
                | (:data) -> ::Protobuf::field_hash[::String, ::String]
                | (:security_token) -> ::String
                | (:is_global_namespace) -> bool
                | (:history_archival_state) -> ::Temporalio::Api::Enums::V1::ArchivalState
                | (:history_archival_uri) -> ::String
                | (:visibility_archival_state) -> ::Temporalio::Api::Enums::V1::ArchivalState
                | (:visibility_archival_uri) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:description, ::String) -> ::String
                 | (:owner_email, ::String) -> ::String
                 | (:workflow_execution_retention_period, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_execution_retention_period, M?) -> M?
                 | (:clusters, ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::field_array) -> ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::field_array
                 | (:clusters, ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::array) -> ::Temporalio::Api::Replication::V1::ClusterReplicationConfig::array
                 | (:active_cluster_name, ::String) -> ::String
                 | (:data, ::Protobuf::field_hash[::String, ::String]) -> ::Protobuf::field_hash[::String, ::String]
                 | (:data, ::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                 | (:security_token, ::String) -> ::String
                 | (:is_global_namespace, bool) -> bool
                 | (:history_archival_state, ::Temporalio::Api::Enums::V1::ArchivalState) -> ::Temporalio::Api::Enums::V1::ArchivalState
                 | (:history_archival_state, ::Temporalio::Api::Enums::V1::ArchivalState::values) -> ::Temporalio::Api::Enums::V1::ArchivalState::values
                 | (:history_archival_uri, ::String) -> ::String
                 | (:visibility_archival_state, ::Temporalio::Api::Enums::V1::ArchivalState) -> ::Temporalio::Api::Enums::V1::ArchivalState
                 | (:visibility_archival_state, ::Temporalio::Api::Enums::V1::ArchivalState::values) -> ::Temporalio::Api::Enums::V1::ArchivalState::values
                 | (:visibility_archival_uri, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          def is_global_namespace?: () -> bool

          interface _ToProto
            def to_proto: () -> RegisterNamespaceRequest
          end

          # The type of `#initialize` parameter.
          type init = RegisterNamespaceRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RegisterNamespaceRequest, RegisterNamespaceRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RegisterNamespaceRequest, RegisterNamespaceRequest | _ToProto]

          type array = ::Array[RegisterNamespaceRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RegisterNamespaceRequest | _ToProto]
        end

        class RegisterNamespaceResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RegisterNamespaceResponse
          end

          # The type of `#initialize` parameter.
          type init = RegisterNamespaceResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RegisterNamespaceResponse, RegisterNamespaceResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RegisterNamespaceResponse, RegisterNamespaceResponse | _ToProto]

          type array = ::Array[RegisterNamespaceResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RegisterNamespaceResponse | _ToProto]
        end

        class ListNamespacesRequest < ::Protobuf::Message
          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          attr_accessor namespace_filter(): ::Temporalio::Api::Namespace::V1::NamespaceFilter?

          def namespace_filter=: [M < ::Temporalio::Api::Namespace::V1::NamespaceFilter::_ToProto] (M?) -> M?
                               | ...

          def namespace_filter!: () -> ::Temporalio::Api::Namespace::V1::NamespaceFilter?

          def initialize: (?page_size: ::Integer, ?next_page_token: ::String, ?namespace_filter: ::Temporalio::Api::Namespace::V1::NamespaceFilter::init?) -> void

          def []: (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (:namespace_filter) -> ::Temporalio::Api::Namespace::V1::NamespaceFilter?
                | (::Symbol) -> untyped

          def []=: (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (:namespace_filter, ::Temporalio::Api::Namespace::V1::NamespaceFilter?) -> ::Temporalio::Api::Namespace::V1::NamespaceFilter?
                 | [M < ::Temporalio::Api::Namespace::V1::NamespaceFilter::_ToProto] (:namespace_filter, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListNamespacesRequest
          end

          # The type of `#initialize` parameter.
          type init = ListNamespacesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListNamespacesRequest, ListNamespacesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListNamespacesRequest, ListNamespacesRequest | _ToProto]

          type array = ::Array[ListNamespacesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListNamespacesRequest | _ToProto]
        end

        class ListNamespacesResponse < ::Protobuf::Message
          attr_accessor namespaces(): ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::field_array

          def namespaces=: (::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::array) -> ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::array
                         | ...

          def namespaces!: () -> ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?namespaces: ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::array, ?next_page_token: ::String) -> void

          def []: (:namespaces) -> ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespaces, ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::field_array) -> ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::field_array
                 | (:namespaces, ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::array) -> ::Temporalio::Api::WorkflowService::V1::DescribeNamespaceResponse::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListNamespacesResponse
          end

          # The type of `#initialize` parameter.
          type init = ListNamespacesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListNamespacesResponse, ListNamespacesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListNamespacesResponse, ListNamespacesResponse | _ToProto]

          type array = ::Array[ListNamespacesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListNamespacesResponse | _ToProto]
        end

        class DescribeNamespaceRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor id(): ::String

          def id!: () -> ::String?

          def initialize: (?namespace: ::String, ?id: ::String) -> void

          def []: (:namespace) -> ::String
                | (:id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeNamespaceRequest
          end

          # The type of `#initialize` parameter.
          type init = DescribeNamespaceRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeNamespaceRequest, DescribeNamespaceRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeNamespaceRequest, DescribeNamespaceRequest | _ToProto]

          type array = ::Array[DescribeNamespaceRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeNamespaceRequest | _ToProto]
        end

        class DescribeNamespaceResponse < ::Protobuf::Message
          attr_accessor namespace_info(): ::Temporalio::Api::Namespace::V1::NamespaceInfo?

          def namespace_info=: [M < ::Temporalio::Api::Namespace::V1::NamespaceInfo::_ToProto] (M?) -> M?
                             | ...

          def namespace_info!: () -> ::Temporalio::Api::Namespace::V1::NamespaceInfo?

          attr_accessor config(): ::Temporalio::Api::Namespace::V1::NamespaceConfig?

          def config=: [M < ::Temporalio::Api::Namespace::V1::NamespaceConfig::_ToProto] (M?) -> M?
                     | ...

          def config!: () -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?

          attr_accessor replication_config(): ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?

          def replication_config=: [M < ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::_ToProto] (M?) -> M?
                                 | ...

          def replication_config!: () -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?

          attr_accessor failover_version(): ::Integer

          def failover_version!: () -> ::Integer?

          attr_accessor is_global_namespace(): bool

          def is_global_namespace!: () -> bool?

          # Contains the historical state of failover_versions for the cluster, truncated to contain only the last N
          #  states to ensure that the list does not grow unbounded.
          #
          attr_accessor failover_history(): ::Temporalio::Api::Replication::V1::FailoverStatus::field_array

          # Contains the historical state of failover_versions for the cluster, truncated to contain only the last N
          #  states to ensure that the list does not grow unbounded.
          #
          def failover_history=: (::Temporalio::Api::Replication::V1::FailoverStatus::array) -> ::Temporalio::Api::Replication::V1::FailoverStatus::array
                               | ...

          def failover_history!: () -> ::Temporalio::Api::Replication::V1::FailoverStatus::field_array?

          def initialize: (?namespace_info: ::Temporalio::Api::Namespace::V1::NamespaceInfo::init?, ?config: ::Temporalio::Api::Namespace::V1::NamespaceConfig::init?, ?replication_config: ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::init?, ?failover_version: ::Integer, ?is_global_namespace: bool, ?failover_history: ::Temporalio::Api::Replication::V1::FailoverStatus::array) -> void

          def []: (:namespace_info) -> ::Temporalio::Api::Namespace::V1::NamespaceInfo?
                | (:config) -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?
                | (:replication_config) -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?
                | (:failover_version) -> ::Integer
                | (:is_global_namespace) -> bool
                | (:failover_history) -> ::Temporalio::Api::Replication::V1::FailoverStatus::field_array
                | (::Symbol) -> untyped

          def []=: (:namespace_info, ::Temporalio::Api::Namespace::V1::NamespaceInfo?) -> ::Temporalio::Api::Namespace::V1::NamespaceInfo?
                 | [M < ::Temporalio::Api::Namespace::V1::NamespaceInfo::_ToProto] (:namespace_info, M?) -> M?
                 | (:config, ::Temporalio::Api::Namespace::V1::NamespaceConfig?) -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?
                 | [M < ::Temporalio::Api::Namespace::V1::NamespaceConfig::_ToProto] (:config, M?) -> M?
                 | (:replication_config, ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?) -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?
                 | [M < ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::_ToProto] (:replication_config, M?) -> M?
                 | (:failover_version, ::Integer) -> ::Integer
                 | (:is_global_namespace, bool) -> bool
                 | (:failover_history, ::Temporalio::Api::Replication::V1::FailoverStatus::field_array) -> ::Temporalio::Api::Replication::V1::FailoverStatus::field_array
                 | (:failover_history, ::Temporalio::Api::Replication::V1::FailoverStatus::array) -> ::Temporalio::Api::Replication::V1::FailoverStatus::array
                 | (::Symbol, untyped) -> untyped

          def is_global_namespace?: () -> bool

          interface _ToProto
            def to_proto: () -> DescribeNamespaceResponse
          end

          # The type of `#initialize` parameter.
          type init = DescribeNamespaceResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeNamespaceResponse, DescribeNamespaceResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeNamespaceResponse, DescribeNamespaceResponse | _ToProto]

          type array = ::Array[DescribeNamespaceResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeNamespaceResponse | _ToProto]
        end

        # (-- api-linter: core::0134::request-mask-required=disabled
        #      aip.dev/not-precedent: UpdateNamespace RPC doesn't follow Google API format. --)
        #  (-- api-linter: core::0134::request-resource-required=disabled
        #      aip.dev/not-precedent: UpdateNamespace RPC doesn't follow Google API format. --)
        #
        class UpdateNamespaceRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor update_info(): ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo?

          def update_info=: [M < ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo::_ToProto] (M?) -> M?
                          | ...

          def update_info!: () -> ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo?

          attr_accessor config(): ::Temporalio::Api::Namespace::V1::NamespaceConfig?

          def config=: [M < ::Temporalio::Api::Namespace::V1::NamespaceConfig::_ToProto] (M?) -> M?
                     | ...

          def config!: () -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?

          attr_accessor replication_config(): ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?

          def replication_config=: [M < ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::_ToProto] (M?) -> M?
                                 | ...

          def replication_config!: () -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?

          attr_accessor security_token(): ::String

          def security_token!: () -> ::String?

          attr_accessor delete_bad_binary(): ::String

          def delete_bad_binary!: () -> ::String?

          # promote local namespace to global namespace. Ignored if namespace is already global namespace.
          #
          attr_accessor promote_namespace(): bool

          def promote_namespace!: () -> bool?

          def initialize: (?namespace: ::String, ?update_info: ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo::init?, ?config: ::Temporalio::Api::Namespace::V1::NamespaceConfig::init?, ?replication_config: ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::init?, ?security_token: ::String, ?delete_bad_binary: ::String, ?promote_namespace: bool) -> void

          def []: (:namespace) -> ::String
                | (:update_info) -> ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo?
                | (:config) -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?
                | (:replication_config) -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?
                | (:security_token) -> ::String
                | (:delete_bad_binary) -> ::String
                | (:promote_namespace) -> bool
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:update_info, ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo?) -> ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo?
                 | [M < ::Temporalio::Api::Namespace::V1::UpdateNamespaceInfo::_ToProto] (:update_info, M?) -> M?
                 | (:config, ::Temporalio::Api::Namespace::V1::NamespaceConfig?) -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?
                 | [M < ::Temporalio::Api::Namespace::V1::NamespaceConfig::_ToProto] (:config, M?) -> M?
                 | (:replication_config, ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?) -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?
                 | [M < ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::_ToProto] (:replication_config, M?) -> M?
                 | (:security_token, ::String) -> ::String
                 | (:delete_bad_binary, ::String) -> ::String
                 | (:promote_namespace, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def promote_namespace?: () -> bool

          interface _ToProto
            def to_proto: () -> UpdateNamespaceRequest
          end

          # The type of `#initialize` parameter.
          type init = UpdateNamespaceRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateNamespaceRequest, UpdateNamespaceRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateNamespaceRequest, UpdateNamespaceRequest | _ToProto]

          type array = ::Array[UpdateNamespaceRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateNamespaceRequest | _ToProto]
        end

        class UpdateNamespaceResponse < ::Protobuf::Message
          attr_accessor namespace_info(): ::Temporalio::Api::Namespace::V1::NamespaceInfo?

          def namespace_info=: [M < ::Temporalio::Api::Namespace::V1::NamespaceInfo::_ToProto] (M?) -> M?
                             | ...

          def namespace_info!: () -> ::Temporalio::Api::Namespace::V1::NamespaceInfo?

          attr_accessor config(): ::Temporalio::Api::Namespace::V1::NamespaceConfig?

          def config=: [M < ::Temporalio::Api::Namespace::V1::NamespaceConfig::_ToProto] (M?) -> M?
                     | ...

          def config!: () -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?

          attr_accessor replication_config(): ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?

          def replication_config=: [M < ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::_ToProto] (M?) -> M?
                                 | ...

          def replication_config!: () -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?

          attr_accessor failover_version(): ::Integer

          def failover_version!: () -> ::Integer?

          attr_accessor is_global_namespace(): bool

          def is_global_namespace!: () -> bool?

          def initialize: (?namespace_info: ::Temporalio::Api::Namespace::V1::NamespaceInfo::init?, ?config: ::Temporalio::Api::Namespace::V1::NamespaceConfig::init?, ?replication_config: ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::init?, ?failover_version: ::Integer, ?is_global_namespace: bool) -> void

          def []: (:namespace_info) -> ::Temporalio::Api::Namespace::V1::NamespaceInfo?
                | (:config) -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?
                | (:replication_config) -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?
                | (:failover_version) -> ::Integer
                | (:is_global_namespace) -> bool
                | (::Symbol) -> untyped

          def []=: (:namespace_info, ::Temporalio::Api::Namespace::V1::NamespaceInfo?) -> ::Temporalio::Api::Namespace::V1::NamespaceInfo?
                 | [M < ::Temporalio::Api::Namespace::V1::NamespaceInfo::_ToProto] (:namespace_info, M?) -> M?
                 | (:config, ::Temporalio::Api::Namespace::V1::NamespaceConfig?) -> ::Temporalio::Api::Namespace::V1::NamespaceConfig?
                 | [M < ::Temporalio::Api::Namespace::V1::NamespaceConfig::_ToProto] (:config, M?) -> M?
                 | (:replication_config, ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?) -> ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig?
                 | [M < ::Temporalio::Api::Replication::V1::NamespaceReplicationConfig::_ToProto] (:replication_config, M?) -> M?
                 | (:failover_version, ::Integer) -> ::Integer
                 | (:is_global_namespace, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def is_global_namespace?: () -> bool

          interface _ToProto
            def to_proto: () -> UpdateNamespaceResponse
          end

          # The type of `#initialize` parameter.
          type init = UpdateNamespaceResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateNamespaceResponse, UpdateNamespaceResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateNamespaceResponse, UpdateNamespaceResponse | _ToProto]

          type array = ::Array[UpdateNamespaceResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateNamespaceResponse | _ToProto]
        end

        # Deprecated.
        #
        class DeprecateNamespaceRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor security_token(): ::String

          def security_token!: () -> ::String?

          def initialize: (?namespace: ::String, ?security_token: ::String) -> void

          def []: (:namespace) -> ::String
                | (:security_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:security_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeprecateNamespaceRequest
          end

          # The type of `#initialize` parameter.
          type init = DeprecateNamespaceRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeprecateNamespaceRequest, DeprecateNamespaceRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeprecateNamespaceRequest, DeprecateNamespaceRequest | _ToProto]

          type array = ::Array[DeprecateNamespaceRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeprecateNamespaceRequest | _ToProto]
        end

        # Deprecated.
        #
        class DeprecateNamespaceResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> DeprecateNamespaceResponse
          end

          # The type of `#initialize` parameter.
          type init = DeprecateNamespaceResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeprecateNamespaceResponse, DeprecateNamespaceResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeprecateNamespaceResponse, DeprecateNamespaceResponse | _ToProto]

          type array = ::Array[DeprecateNamespaceResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeprecateNamespaceResponse | _ToProto]
        end

        class StartWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # Serialized arguments to the workflow. These are passed as arguments to the workflow function.
          #
          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized arguments to the workflow. These are passed as arguments to the workflow function.
          #
          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Total workflow execution timeout including retries and continue as new.
          #
          attr_accessor workflow_execution_timeout(): ::Google::Protobuf::Duration?

          # Total workflow execution timeout including retries and continue as new.
          #
          def workflow_execution_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                         | ...

          def workflow_execution_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          attr_accessor workflow_run_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow run.
          #
          def workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                   | ...

          def workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          attr_accessor workflow_task_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow task.
          #
          def workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # The identity of the client who initiated this request
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # A unique identifier for this start request. Typically UUIDv4.
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          attr_accessor workflow_id_reuse_policy(): ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy

          # Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          def workflow_id_reuse_policy=: (::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values
                                       | ...

          def workflow_id_reuse_policy!: () -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy?

          # The retry policy for the workflow. Will never exceed `workflow_execution_timeout`.
          #
          attr_accessor retry_policy(): ::Temporalio::Api::Common::V1::RetryPolicy?

          # The retry policy for the workflow. Will never exceed `workflow_execution_timeout`.
          #
          def retry_policy=: [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporalio::Api::Common::V1::RetryPolicy?

          # See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/
          #
          attr_accessor cron_schedule(): ::String

          def cron_schedule!: () -> ::String?

          attr_accessor memo(): ::Temporalio::Api::Common::V1::Memo?

          def memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?workflow_execution_timeout: ::Google::Protobuf::Duration::init?, ?workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?identity: ::String, ?request_id: ::String, ?workflow_id_reuse_policy: ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::init, ?retry_policy: ::Temporalio::Api::Common::V1::RetryPolicy::init?, ?cron_schedule: ::String, ?memo: ::Temporalio::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?, ?header: ::Temporalio::Api::Common::V1::Header::init?) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:workflow_execution_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (:workflow_id_reuse_policy) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy
                | (:retry_policy) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                | (:cron_schedule) -> ::String
                | (:memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:workflow_execution_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_execution_timeout, M?) -> M?
                 | (:workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_run_timeout, M?) -> M?
                 | (:workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_task_timeout, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (:workflow_id_reuse_policy, ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy
                 | (:workflow_id_reuse_policy, ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values
                 | (:retry_policy, ::Temporalio::Api::Common::V1::RetryPolicy?) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (:cron_schedule, ::String) -> ::String
                 | (:memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StartWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = StartWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartWorkflowExecutionRequest, StartWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartWorkflowExecutionRequest, StartWorkflowExecutionRequest | _ToProto]

          type array = ::Array[StartWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartWorkflowExecutionRequest | _ToProto]
        end

        class StartWorkflowExecutionResponse < ::Protobuf::Message
          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          def initialize: (?run_id: ::String) -> void

          def []: (:run_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:run_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StartWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = StartWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartWorkflowExecutionResponse, StartWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartWorkflowExecutionResponse, StartWorkflowExecutionResponse | _ToProto]

          type array = ::Array[StartWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartWorkflowExecutionResponse | _ToProto]
        end

        class GetWorkflowExecutionHistoryRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                        | ...

          def execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor maximum_page_size(): ::Integer

          def maximum_page_size!: () -> ::Integer?

          # If a `GetWorkflowExecutionHistoryResponse` or a `PollWorkflowTaskQueueResponse` had one of
          #  these, it should be passed here to fetch the next page.
          #
          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          # If set to true, the RPC call will not resolve until there is a new event which matches
          #  the `history_event_filter_type`, or a timeout is hit.
          #
          attr_accessor wait_new_event(): bool

          def wait_new_event!: () -> bool?

          # Filter returned events such that they match the specified filter type.
          #  Default: HISTORY_EVENT_FILTER_TYPE_ALL_EVENT.
          #
          attr_accessor history_event_filter_type(): ::Temporalio::Api::Enums::V1::HistoryEventFilterType

          # Filter returned events such that they match the specified filter type.
          #  Default: HISTORY_EVENT_FILTER_TYPE_ALL_EVENT.
          #
          def history_event_filter_type=: (::Temporalio::Api::Enums::V1::HistoryEventFilterType::values) -> ::Temporalio::Api::Enums::V1::HistoryEventFilterType::values
                                        | ...

          def history_event_filter_type!: () -> ::Temporalio::Api::Enums::V1::HistoryEventFilterType?

          attr_accessor skip_archival(): bool

          def skip_archival!: () -> bool?

          def initialize: (?namespace: ::String, ?execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?maximum_page_size: ::Integer, ?next_page_token: ::String, ?wait_new_event: bool, ?history_event_filter_type: ::Temporalio::Api::Enums::V1::HistoryEventFilterType::init, ?skip_archival: bool) -> void

          def []: (:namespace) -> ::String
                | (:execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:maximum_page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (:wait_new_event) -> bool
                | (:history_event_filter_type) -> ::Temporalio::Api::Enums::V1::HistoryEventFilterType
                | (:skip_archival) -> bool
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:execution, M?) -> M?
                 | (:maximum_page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (:wait_new_event, bool) -> bool
                 | (:history_event_filter_type, ::Temporalio::Api::Enums::V1::HistoryEventFilterType) -> ::Temporalio::Api::Enums::V1::HistoryEventFilterType
                 | (:history_event_filter_type, ::Temporalio::Api::Enums::V1::HistoryEventFilterType::values) -> ::Temporalio::Api::Enums::V1::HistoryEventFilterType::values
                 | (:skip_archival, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def wait_new_event?: () -> bool

          def skip_archival?: () -> bool

          interface _ToProto
            def to_proto: () -> GetWorkflowExecutionHistoryRequest
          end

          # The type of `#initialize` parameter.
          type init = GetWorkflowExecutionHistoryRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetWorkflowExecutionHistoryRequest, GetWorkflowExecutionHistoryRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetWorkflowExecutionHistoryRequest, GetWorkflowExecutionHistoryRequest | _ToProto]

          type array = ::Array[GetWorkflowExecutionHistoryRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetWorkflowExecutionHistoryRequest | _ToProto]
        end

        class GetWorkflowExecutionHistoryResponse < ::Protobuf::Message
          attr_accessor history(): ::Temporalio::Api::History::V1::History?

          def history=: [M < ::Temporalio::Api::History::V1::History::_ToProto] (M?) -> M?
                      | ...

          def history!: () -> ::Temporalio::Api::History::V1::History?

          # Raw history is an alternate representation of history that may be returned if configured on
          #  the frontend. This is not supported by all SDKs. Either this or `history` will be set.
          #
          attr_accessor raw_history(): ::Temporalio::Api::Common::V1::DataBlob::field_array

          # Raw history is an alternate representation of history that may be returned if configured on
          #  the frontend. This is not supported by all SDKs. Either this or `history` will be set.
          #
          def raw_history=: (::Temporalio::Api::Common::V1::DataBlob::array) -> ::Temporalio::Api::Common::V1::DataBlob::array
                          | ...

          def raw_history!: () -> ::Temporalio::Api::Common::V1::DataBlob::field_array?

          # Will be set if there are more history events than were included in this response
          #
          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          attr_accessor archived(): bool

          def archived!: () -> bool?

          def initialize: (?history: ::Temporalio::Api::History::V1::History::init?, ?raw_history: ::Temporalio::Api::Common::V1::DataBlob::array, ?next_page_token: ::String, ?archived: bool) -> void

          def []: (:history) -> ::Temporalio::Api::History::V1::History?
                | (:raw_history) -> ::Temporalio::Api::Common::V1::DataBlob::field_array
                | (:next_page_token) -> ::String
                | (:archived) -> bool
                | (::Symbol) -> untyped

          def []=: (:history, ::Temporalio::Api::History::V1::History?) -> ::Temporalio::Api::History::V1::History?
                 | [M < ::Temporalio::Api::History::V1::History::_ToProto] (:history, M?) -> M?
                 | (:raw_history, ::Temporalio::Api::Common::V1::DataBlob::field_array) -> ::Temporalio::Api::Common::V1::DataBlob::field_array
                 | (:raw_history, ::Temporalio::Api::Common::V1::DataBlob::array) -> ::Temporalio::Api::Common::V1::DataBlob::array
                 | (:next_page_token, ::String) -> ::String
                 | (:archived, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def archived?: () -> bool

          interface _ToProto
            def to_proto: () -> GetWorkflowExecutionHistoryResponse
          end

          # The type of `#initialize` parameter.
          type init = GetWorkflowExecutionHistoryResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetWorkflowExecutionHistoryResponse, GetWorkflowExecutionHistoryResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetWorkflowExecutionHistoryResponse, GetWorkflowExecutionHistoryResponse | _ToProto]

          type array = ::Array[GetWorkflowExecutionHistoryResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetWorkflowExecutionHistoryResponse | _ToProto]
        end

        class GetWorkflowExecutionHistoryReverseRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                        | ...

          def execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor maximum_page_size(): ::Integer

          def maximum_page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?namespace: ::String, ?execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?maximum_page_size: ::Integer, ?next_page_token: ::String) -> void

          def []: (:namespace) -> ::String
                | (:execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:maximum_page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:execution, M?) -> M?
                 | (:maximum_page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> GetWorkflowExecutionHistoryReverseRequest
          end

          # The type of `#initialize` parameter.
          type init = GetWorkflowExecutionHistoryReverseRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetWorkflowExecutionHistoryReverseRequest, GetWorkflowExecutionHistoryReverseRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetWorkflowExecutionHistoryReverseRequest, GetWorkflowExecutionHistoryReverseRequest | _ToProto]

          type array = ::Array[GetWorkflowExecutionHistoryReverseRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetWorkflowExecutionHistoryReverseRequest | _ToProto]
        end

        class GetWorkflowExecutionHistoryReverseResponse < ::Protobuf::Message
          attr_accessor history(): ::Temporalio::Api::History::V1::History?

          def history=: [M < ::Temporalio::Api::History::V1::History::_ToProto] (M?) -> M?
                      | ...

          def history!: () -> ::Temporalio::Api::History::V1::History?

          # Will be set if there are more history events than were included in this response
          #
          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?history: ::Temporalio::Api::History::V1::History::init?, ?next_page_token: ::String) -> void

          def []: (:history) -> ::Temporalio::Api::History::V1::History?
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:history, ::Temporalio::Api::History::V1::History?) -> ::Temporalio::Api::History::V1::History?
                 | [M < ::Temporalio::Api::History::V1::History::_ToProto] (:history, M?) -> M?
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> GetWorkflowExecutionHistoryReverseResponse
          end

          # The type of `#initialize` parameter.
          type init = GetWorkflowExecutionHistoryReverseResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetWorkflowExecutionHistoryReverseResponse, GetWorkflowExecutionHistoryReverseResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetWorkflowExecutionHistoryReverseResponse, GetWorkflowExecutionHistoryReverseResponse | _ToProto]

          type array = ::Array[GetWorkflowExecutionHistoryReverseResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetWorkflowExecutionHistoryReverseResponse | _ToProto]
        end

        class PollWorkflowTaskQueueRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # The identity of the worker/client who is polling this task queue
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Each worker process should provide an ID unique to the specific set of code it is running
          #  "checksum" in this field name isn't very accurate, it should be though of as an id.
          #
          attr_accessor binary_checksum(): ::String

          def binary_checksum!: () -> ::String?

          # If set, the worker is opting in to build-id based versioning and wishes to only
          #  receive tasks that are considered compatible with the version provided.
          #  Doing so only makes sense in conjunction with the `UpdateWorkerBuildIdOrdering` API.
          #  When `worker_versioning_id` has a `worker_build_id`, and `binary_checksum` is not
          #  set, that value should also be considered as the `binary_checksum`.
          #
          attr_accessor worker_versioning_id(): ::Temporalio::Api::TaskQueue::V1::VersionId?

          # If set, the worker is opting in to build-id based versioning and wishes to only
          #  receive tasks that are considered compatible with the version provided.
          #  Doing so only makes sense in conjunction with the `UpdateWorkerBuildIdOrdering` API.
          #  When `worker_versioning_id` has a `worker_build_id`, and `binary_checksum` is not
          #  set, that value should also be considered as the `binary_checksum`.
          #
          def worker_versioning_id=: [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (M?) -> M?
                                   | ...

          def worker_versioning_id!: () -> ::Temporalio::Api::TaskQueue::V1::VersionId?

          def initialize: (?namespace: ::String, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?identity: ::String, ?binary_checksum: ::String, ?worker_versioning_id: ::Temporalio::Api::TaskQueue::V1::VersionId::init?) -> void

          def []: (:namespace) -> ::String
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:identity) -> ::String
                | (:binary_checksum) -> ::String
                | (:worker_versioning_id) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:binary_checksum, ::String) -> ::String
                 | (:worker_versioning_id, ::Temporalio::Api::TaskQueue::V1::VersionId?) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                 | [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (:worker_versioning_id, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> PollWorkflowTaskQueueRequest
          end

          # The type of `#initialize` parameter.
          type init = PollWorkflowTaskQueueRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[PollWorkflowTaskQueueRequest, PollWorkflowTaskQueueRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, PollWorkflowTaskQueueRequest, PollWorkflowTaskQueueRequest | _ToProto]

          type array = ::Array[PollWorkflowTaskQueueRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, PollWorkflowTaskQueueRequest | _ToProto]
        end

        class PollWorkflowTaskQueueResponse < ::Protobuf::Message
          # A unique identifier for this task
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # The last workflow task started event which was processed by some worker for this execution.
          #  Will be zero if no task has ever started.
          #
          attr_accessor previous_started_event_id(): ::Integer

          def previous_started_event_id!: () -> ::Integer?

          # The id of the most recent workflow task started event, which will have been generated as a
          #  result of this poll request being served.
          #
          attr_accessor started_event_id(): ::Integer

          def started_event_id!: () -> ::Integer?

          # Starting at 1, the number of attempts to complete this task by any worker.
          #
          attr_accessor attempt(): ::Integer

          def attempt!: () -> ::Integer?

          # A hint that there are more tasks already present in this task queue. Can be used to
          #  prioritize draining a sticky queue before polling from a normal queue.
          #
          attr_accessor backlog_count_hint(): ::Integer

          def backlog_count_hint!: () -> ::Integer?

          # The history for this workflow, which will either be complete or partial. Partial histories
          #  are sent to workers who have signaled that they are using a sticky queue when completing
          #  a workflow task.
          #
          attr_accessor history(): ::Temporalio::Api::History::V1::History?

          # The history for this workflow, which will either be complete or partial. Partial histories
          #  are sent to workers who have signaled that they are using a sticky queue when completing
          #  a workflow task.
          #
          def history=: [M < ::Temporalio::Api::History::V1::History::_ToProto] (M?) -> M?
                      | ...

          def history!: () -> ::Temporalio::Api::History::V1::History?

          # Will be set if there are more history events than were included in this response. Such events
          #  should be fetched via `GetWorkflowExecutionHistory`.
          #
          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          # Legacy queries appear in this field. The query must be responded to via
          #  `RespondQueryTaskCompleted`. If the workflow is already closed (queries are permitted on
          #  closed workflows) then the `history` field will be populated with the entire history. It
          #  may also be populated if this task originates on a non-sticky queue.
          #
          attr_accessor query(): ::Temporalio::Api::Query::V1::WorkflowQuery?

          # Legacy queries appear in this field. The query must be responded to via
          #  `RespondQueryTaskCompleted`. If the workflow is already closed (queries are permitted on
          #  closed workflows) then the `history` field will be populated with the entire history. It
          #  may also be populated if this task originates on a non-sticky queue.
          #
          def query=: [M < ::Temporalio::Api::Query::V1::WorkflowQuery::_ToProto] (M?) -> M?
                    | ...

          def query!: () -> ::Temporalio::Api::Query::V1::WorkflowQuery?

          # The task queue this task originated from, which will always be the original non-sticky name
          #  for the queue, even if this response came from polling a sticky queue.
          #
          attr_accessor workflow_execution_task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # The task queue this task originated from, which will always be the original non-sticky name
          #  for the queue, even if this response came from polling a sticky queue.
          #
          def workflow_execution_task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                                            | ...

          def workflow_execution_task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # When this task was scheduled by the server
          #
          attr_accessor scheduled_time(): ::Google::Protobuf::Timestamp?

          # When this task was scheduled by the server
          #
          def scheduled_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                             | ...

          def scheduled_time!: () -> ::Google::Protobuf::Timestamp?

          # When the current workflow task started event was generated, meaning the current attempt.
          #
          attr_accessor started_time(): ::Google::Protobuf::Timestamp?

          # When the current workflow task started event was generated, meaning the current attempt.
          #
          def started_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                           | ...

          def started_time!: () -> ::Google::Protobuf::Timestamp?

          # Queries that should be executed after applying the history in this task. Responses should be
          #  attached to `RespondWorkflowTaskCompletedRequest::query_results`
          #
          attr_accessor queries(): ::Temporalio::Api::Query::V1::WorkflowQuery::field_hash[::String]

          # Queries that should be executed after applying the history in this task. Responses should be
          #  attached to `RespondWorkflowTaskCompletedRequest::query_results`
          #
          def queries=: (::Temporalio::Api::Query::V1::WorkflowQuery::hash[::String]) -> ::Temporalio::Api::Query::V1::WorkflowQuery::hash[::String]
                      | ...

          def queries!: () -> ::Temporalio::Api::Query::V1::WorkflowQuery::field_hash[::String]?

          attr_accessor interactions(): ::Temporalio::Api::Interaction::V1::Invocation::field_array

          def interactions=: (::Temporalio::Api::Interaction::V1::Invocation::array) -> ::Temporalio::Api::Interaction::V1::Invocation::array
                           | ...

          def interactions!: () -> ::Temporalio::Api::Interaction::V1::Invocation::field_array?

          def initialize: (?task_token: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?previous_started_event_id: ::Integer, ?started_event_id: ::Integer, ?attempt: ::Integer, ?backlog_count_hint: ::Integer, ?history: ::Temporalio::Api::History::V1::History::init?, ?next_page_token: ::String, ?query: ::Temporalio::Api::Query::V1::WorkflowQuery::init?, ?workflow_execution_task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?scheduled_time: ::Google::Protobuf::Timestamp::init?, ?started_time: ::Google::Protobuf::Timestamp::init?, ?queries: ::Temporalio::Api::Query::V1::WorkflowQuery::hash[::String], ?interactions: ::Temporalio::Api::Interaction::V1::Invocation::array) -> void

          def []: (:task_token) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:previous_started_event_id) -> ::Integer
                | (:started_event_id) -> ::Integer
                | (:attempt) -> ::Integer
                | (:backlog_count_hint) -> ::Integer
                | (:history) -> ::Temporalio::Api::History::V1::History?
                | (:next_page_token) -> ::String
                | (:query) -> ::Temporalio::Api::Query::V1::WorkflowQuery?
                | (:workflow_execution_task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:scheduled_time) -> ::Google::Protobuf::Timestamp?
                | (:started_time) -> ::Google::Protobuf::Timestamp?
                | (:queries) -> ::Temporalio::Api::Query::V1::WorkflowQuery::field_hash[::String]
                | (:interactions) -> ::Temporalio::Api::Interaction::V1::Invocation::field_array
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:previous_started_event_id, ::Integer) -> ::Integer
                 | (:started_event_id, ::Integer) -> ::Integer
                 | (:attempt, ::Integer) -> ::Integer
                 | (:backlog_count_hint, ::Integer) -> ::Integer
                 | (:history, ::Temporalio::Api::History::V1::History?) -> ::Temporalio::Api::History::V1::History?
                 | [M < ::Temporalio::Api::History::V1::History::_ToProto] (:history, M?) -> M?
                 | (:next_page_token, ::String) -> ::String
                 | (:query, ::Temporalio::Api::Query::V1::WorkflowQuery?) -> ::Temporalio::Api::Query::V1::WorkflowQuery?
                 | [M < ::Temporalio::Api::Query::V1::WorkflowQuery::_ToProto] (:query, M?) -> M?
                 | (:workflow_execution_task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:workflow_execution_task_queue, M?) -> M?
                 | (:scheduled_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:scheduled_time, M?) -> M?
                 | (:started_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:started_time, M?) -> M?
                 | (:queries, ::Temporalio::Api::Query::V1::WorkflowQuery::field_hash[::String]) -> ::Temporalio::Api::Query::V1::WorkflowQuery::field_hash[::String]
                 | (:queries, ::Temporalio::Api::Query::V1::WorkflowQuery::hash[::String]) -> ::Temporalio::Api::Query::V1::WorkflowQuery::hash[::String]
                 | (:interactions, ::Temporalio::Api::Interaction::V1::Invocation::field_array) -> ::Temporalio::Api::Interaction::V1::Invocation::field_array
                 | (:interactions, ::Temporalio::Api::Interaction::V1::Invocation::array) -> ::Temporalio::Api::Interaction::V1::Invocation::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> PollWorkflowTaskQueueResponse
          end

          # The type of `#initialize` parameter.
          type init = PollWorkflowTaskQueueResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[PollWorkflowTaskQueueResponse, PollWorkflowTaskQueueResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, PollWorkflowTaskQueueResponse, PollWorkflowTaskQueueResponse | _ToProto]

          type array = ::Array[PollWorkflowTaskQueueResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, PollWorkflowTaskQueueResponse | _ToProto]
        end

        class RespondWorkflowTaskCompletedRequest < ::Protobuf::Message
          # The task token as received in `PollWorkflowTaskQueueResponse`
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          # A list of commands generated when driving the workflow code in response to the new task
          #
          attr_accessor commands(): ::Temporalio::Api::Command::V1::Command::field_array

          # A list of commands generated when driving the workflow code in response to the new task
          #
          def commands=: (::Temporalio::Api::Command::V1::Command::array) -> ::Temporalio::Api::Command::V1::Command::array
                       | ...

          def commands!: () -> ::Temporalio::Api::Command::V1::Command::field_array?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # May be set by workers to indicate that the worker desires future tasks to be provided with
          #  incremental history on a sticky queue.
          #
          attr_accessor sticky_attributes(): ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes?

          # May be set by workers to indicate that the worker desires future tasks to be provided with
          #  incremental history on a sticky queue.
          #
          def sticky_attributes=: [M < ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes::_ToProto] (M?) -> M?
                                | ...

          def sticky_attributes!: () -> ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes?

          # If set, the worker wishes to immediately receive the next workflow task as a response to
          #  this completion. This can save on polling round-trips.
          #
          attr_accessor return_new_workflow_task(): bool

          def return_new_workflow_task!: () -> bool?

          # Can be used to *force* creation of a new workflow task, even if no commands have resolved or
          #  one would not otherwise have been generated. This is used when the worker knows it is doing
          #  something useful, but cannot complete it within the workflow task timeout. Local activities
          #  which run for longer than the task timeout being the prime example.
          #
          attr_accessor force_create_new_workflow_task(): bool

          def force_create_new_workflow_task!: () -> bool?

          # Worker process' unique binary id
          #
          attr_accessor binary_checksum(): ::String

          def binary_checksum!: () -> ::String?

          # Responses to the `queries` field in the task being responded to
          #
          attr_accessor query_results(): ::Temporalio::Api::Query::V1::WorkflowQueryResult::field_hash[::String]

          # Responses to the `queries` field in the task being responded to
          #
          def query_results=: (::Temporalio::Api::Query::V1::WorkflowQueryResult::hash[::String]) -> ::Temporalio::Api::Query::V1::WorkflowQueryResult::hash[::String]
                            | ...

          def query_results!: () -> ::Temporalio::Api::Query::V1::WorkflowQueryResult::field_hash[::String]?

          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # If using versioning, worker should send the same id here that it used to
          #  poll for the workflow task.
          #  When `worker_versioning_id` has a `worker_build_id`, and `binary_checksum` is not
          #  set, that value should also be considered as the `binary_checksum`.
          #
          attr_accessor worker_versioning_id(): ::Temporalio::Api::TaskQueue::V1::VersionId?

          # If using versioning, worker should send the same id here that it used to
          #  poll for the workflow task.
          #  When `worker_versioning_id` has a `worker_build_id`, and `binary_checksum` is not
          #  set, that value should also be considered as the `binary_checksum`.
          #
          def worker_versioning_id=: [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (M?) -> M?
                                   | ...

          def worker_versioning_id!: () -> ::Temporalio::Api::TaskQueue::V1::VersionId?

          def initialize: (?task_token: ::String, ?commands: ::Temporalio::Api::Command::V1::Command::array, ?identity: ::String, ?sticky_attributes: ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes::init?, ?return_new_workflow_task: bool, ?force_create_new_workflow_task: bool, ?binary_checksum: ::String, ?query_results: ::Temporalio::Api::Query::V1::WorkflowQueryResult::hash[::String], ?namespace: ::String, ?worker_versioning_id: ::Temporalio::Api::TaskQueue::V1::VersionId::init?) -> void

          def []: (:task_token) -> ::String
                | (:commands) -> ::Temporalio::Api::Command::V1::Command::field_array
                | (:identity) -> ::String
                | (:sticky_attributes) -> ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes?
                | (:return_new_workflow_task) -> bool
                | (:force_create_new_workflow_task) -> bool
                | (:binary_checksum) -> ::String
                | (:query_results) -> ::Temporalio::Api::Query::V1::WorkflowQueryResult::field_hash[::String]
                | (:namespace) -> ::String
                | (:worker_versioning_id) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:commands, ::Temporalio::Api::Command::V1::Command::field_array) -> ::Temporalio::Api::Command::V1::Command::field_array
                 | (:commands, ::Temporalio::Api::Command::V1::Command::array) -> ::Temporalio::Api::Command::V1::Command::array
                 | (:identity, ::String) -> ::String
                 | (:sticky_attributes, ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes?) -> ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes?
                 | [M < ::Temporalio::Api::TaskQueue::V1::StickyExecutionAttributes::_ToProto] (:sticky_attributes, M?) -> M?
                 | (:return_new_workflow_task, bool) -> bool
                 | (:force_create_new_workflow_task, bool) -> bool
                 | (:binary_checksum, ::String) -> ::String
                 | (:query_results, ::Temporalio::Api::Query::V1::WorkflowQueryResult::field_hash[::String]) -> ::Temporalio::Api::Query::V1::WorkflowQueryResult::field_hash[::String]
                 | (:query_results, ::Temporalio::Api::Query::V1::WorkflowQueryResult::hash[::String]) -> ::Temporalio::Api::Query::V1::WorkflowQueryResult::hash[::String]
                 | (:namespace, ::String) -> ::String
                 | (:worker_versioning_id, ::Temporalio::Api::TaskQueue::V1::VersionId?) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                 | [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (:worker_versioning_id, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          def return_new_workflow_task?: () -> bool

          def force_create_new_workflow_task?: () -> bool

          interface _ToProto
            def to_proto: () -> RespondWorkflowTaskCompletedRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondWorkflowTaskCompletedRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondWorkflowTaskCompletedRequest, RespondWorkflowTaskCompletedRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondWorkflowTaskCompletedRequest, RespondWorkflowTaskCompletedRequest | _ToProto]

          type array = ::Array[RespondWorkflowTaskCompletedRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondWorkflowTaskCompletedRequest | _ToProto]
        end

        class RespondWorkflowTaskCompletedResponse < ::Protobuf::Message
          # See `RespondWorkflowTaskCompletedResponse::return_new_workflow_task`
          #
          attr_accessor workflow_task(): ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse?

          # See `RespondWorkflowTaskCompletedResponse::return_new_workflow_task`
          #
          def workflow_task=: [M < ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse::_ToProto] (M?) -> M?
                            | ...

          def workflow_task!: () -> ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse?

          # See `ScheduleActivityTaskCommandAttributes::request_start`
          #
          attr_accessor activity_tasks(): ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::field_array

          # See `ScheduleActivityTaskCommandAttributes::request_start`
          #
          def activity_tasks=: (::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::array) -> ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::array
                             | ...

          def activity_tasks!: () -> ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::field_array?

          attr_accessor reset_history_event_id(): ::Integer

          def reset_history_event_id!: () -> ::Integer?

          def initialize: (?workflow_task: ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse::init?, ?activity_tasks: ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::array, ?reset_history_event_id: ::Integer) -> void

          def []: (:workflow_task) -> ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse?
                | (:activity_tasks) -> ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::field_array
                | (:reset_history_event_id) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:workflow_task, ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse?) -> ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse?
                 | [M < ::Temporalio::Api::WorkflowService::V1::PollWorkflowTaskQueueResponse::_ToProto] (:workflow_task, M?) -> M?
                 | (:activity_tasks, ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::field_array) -> ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::field_array
                 | (:activity_tasks, ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::array) -> ::Temporalio::Api::WorkflowService::V1::PollActivityTaskQueueResponse::array
                 | (:reset_history_event_id, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondWorkflowTaskCompletedResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondWorkflowTaskCompletedResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondWorkflowTaskCompletedResponse, RespondWorkflowTaskCompletedResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondWorkflowTaskCompletedResponse, RespondWorkflowTaskCompletedResponse | _ToProto]

          type array = ::Array[RespondWorkflowTaskCompletedResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondWorkflowTaskCompletedResponse | _ToProto]
        end

        class RespondWorkflowTaskFailedRequest < ::Protobuf::Message
          # The task token as received in `PollWorkflowTaskQueueResponse`
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          # Why did the task fail? It's important to note that many of the variants in this enum cannot
          #  apply to worker responses. See the type's doc for more.
          #
          attr_accessor cause(): ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause

          # Why did the task fail? It's important to note that many of the variants in this enum cannot
          #  apply to worker responses. See the type's doc for more.
          #
          def cause=: (::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values
                    | ...

          def cause!: () -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause?

          # Failure details
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # Failure details
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Worker process' unique binary id
          #
          attr_accessor binary_checksum(): ::String

          def binary_checksum!: () -> ::String?

          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          def initialize: (?task_token: ::String, ?cause: ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::init, ?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?identity: ::String, ?binary_checksum: ::String, ?namespace: ::String) -> void

          def []: (:task_token) -> ::String
                | (:cause) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause
                | (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:identity) -> ::String
                | (:binary_checksum) -> ::String
                | (:namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:cause, ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause
                 | (:cause, ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values) -> ::Temporalio::Api::Enums::V1::WorkflowTaskFailedCause::values
                 | (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:binary_checksum, ::String) -> ::String
                 | (:namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondWorkflowTaskFailedRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondWorkflowTaskFailedRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondWorkflowTaskFailedRequest, RespondWorkflowTaskFailedRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondWorkflowTaskFailedRequest, RespondWorkflowTaskFailedRequest | _ToProto]

          type array = ::Array[RespondWorkflowTaskFailedRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondWorkflowTaskFailedRequest | _ToProto]
        end

        class RespondWorkflowTaskFailedResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RespondWorkflowTaskFailedResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondWorkflowTaskFailedResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondWorkflowTaskFailedResponse, RespondWorkflowTaskFailedResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondWorkflowTaskFailedResponse, RespondWorkflowTaskFailedResponse | _ToProto]

          type array = ::Array[RespondWorkflowTaskFailedResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondWorkflowTaskFailedResponse | _ToProto]
        end

        class PollActivityTaskQueueRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          attr_accessor task_queue_metadata(): ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata?

          def task_queue_metadata=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata::_ToProto] (M?) -> M?
                                  | ...

          def task_queue_metadata!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata?

          # If set, the worker is opting in to build-id based versioning and wishes to only
          #  receive tasks that are considered compatible with the version provided.
          #  Doing so only makes sense in conjunction with the `UpdateWorkerBuildIdOrdering` API.
          #
          attr_accessor worker_versioning_id(): ::Temporalio::Api::TaskQueue::V1::VersionId?

          # If set, the worker is opting in to build-id based versioning and wishes to only
          #  receive tasks that are considered compatible with the version provided.
          #  Doing so only makes sense in conjunction with the `UpdateWorkerBuildIdOrdering` API.
          #
          def worker_versioning_id=: [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (M?) -> M?
                                   | ...

          def worker_versioning_id!: () -> ::Temporalio::Api::TaskQueue::V1::VersionId?

          def initialize: (?namespace: ::String, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?identity: ::String, ?task_queue_metadata: ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata::init?, ?worker_versioning_id: ::Temporalio::Api::TaskQueue::V1::VersionId::init?) -> void

          def []: (:namespace) -> ::String
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:identity) -> ::String
                | (:task_queue_metadata) -> ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata?
                | (:worker_versioning_id) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:task_queue_metadata, ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueueMetadata::_ToProto] (:task_queue_metadata, M?) -> M?
                 | (:worker_versioning_id, ::Temporalio::Api::TaskQueue::V1::VersionId?) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                 | [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (:worker_versioning_id, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> PollActivityTaskQueueRequest
          end

          # The type of `#initialize` parameter.
          type init = PollActivityTaskQueueRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[PollActivityTaskQueueRequest, PollActivityTaskQueueRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, PollActivityTaskQueueRequest, PollActivityTaskQueueRequest | _ToProto]

          type array = ::Array[PollActivityTaskQueueRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, PollActivityTaskQueueRequest | _ToProto]
        end

        class PollActivityTaskQueueResponse < ::Protobuf::Message
          # A unique identifier for this task
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          # The namespace the workflow which requested this activity lives in
          #
          attr_accessor workflow_namespace(): ::String

          def workflow_namespace!: () -> ::String?

          # Type of the requesting workflow
          #
          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          # Type of the requesting workflow
          #
          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # Execution info of the requesting workflow
          #
          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          # Execution info of the requesting workflow
          #
          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor activity_type(): ::Temporalio::Api::Common::V1::ActivityType?

          def activity_type=: [M < ::Temporalio::Api::Common::V1::ActivityType::_ToProto] (M?) -> M?
                            | ...

          def activity_type!: () -> ::Temporalio::Api::Common::V1::ActivityType?

          # The autogenerated or user specified identifier of this activity. Can be used to complete the
          #  activity via `RespondActivityTaskCompletedById`. May be re-used as long as the last usage
          #  has resolved, but unique IDs for every activity invocation is a good idea.
          #
          attr_accessor activity_id(): ::String

          def activity_id!: () -> ::String?

          # Headers specified by the scheduling workflow. Commonly used to propagate contextual info
          #  from the workflow to its activities. For example, tracing contexts.
          #
          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          # Headers specified by the scheduling workflow. Commonly used to propagate contextual info
          #  from the workflow to its activities. For example, tracing contexts.
          #
          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          # Arguments to the activity invocation
          #
          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          # Arguments to the activity invocation
          #
          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Details of the last heartbeat that was recorded for this activity as of the time this task
          #  was delivered.
          #
          attr_accessor heartbeat_details(): ::Temporalio::Api::Common::V1::Payloads?

          # Details of the last heartbeat that was recorded for this activity as of the time this task
          #  was delivered.
          #
          def heartbeat_details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                                | ...

          def heartbeat_details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # When was this task first scheduled
          #
          attr_accessor scheduled_time(): ::Google::Protobuf::Timestamp?

          # When was this task first scheduled
          #
          def scheduled_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                             | ...

          def scheduled_time!: () -> ::Google::Protobuf::Timestamp?

          # When was this task attempt scheduled
          #
          attr_accessor current_attempt_scheduled_time(): ::Google::Protobuf::Timestamp?

          # When was this task attempt scheduled
          #
          def current_attempt_scheduled_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                                             | ...

          def current_attempt_scheduled_time!: () -> ::Google::Protobuf::Timestamp?

          # When was this task started (this attempt)
          #
          attr_accessor started_time(): ::Google::Protobuf::Timestamp?

          # When was this task started (this attempt)
          #
          def started_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                           | ...

          def started_time!: () -> ::Google::Protobuf::Timestamp?

          # Starting at 1, the number of attempts to perform this activity
          #
          attr_accessor attempt(): ::Integer

          def attempt!: () -> ::Integer?

          # First scheduled -> final result reported timeout
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor schedule_to_close_timeout(): ::Google::Protobuf::Duration?

          # First scheduled -> final result reported timeout
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def schedule_to_close_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                        | ...

          def schedule_to_close_timeout!: () -> ::Google::Protobuf::Duration?

          # Current attempt start -> final result reported timeout
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          attr_accessor start_to_close_timeout(): ::Google::Protobuf::Duration?

          # Current attempt start -> final result reported timeout
          #
          #  (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "to" is used to indicate interval. --)
          #
          def start_to_close_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                     | ...

          def start_to_close_timeout!: () -> ::Google::Protobuf::Duration?

          # Window within which the activity must report a heartbeat, or be timed out.
          #
          attr_accessor heartbeat_timeout(): ::Google::Protobuf::Duration?

          # Window within which the activity must report a heartbeat, or be timed out.
          #
          def heartbeat_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                | ...

          def heartbeat_timeout!: () -> ::Google::Protobuf::Duration?

          # This is the retry policy the service uses which may be different from the one provided
          #  (or not) during activity scheduling. The service can override the provided one if some
          #  values are not specified or exceed configured system limits.
          #
          attr_accessor retry_policy(): ::Temporalio::Api::Common::V1::RetryPolicy?

          # This is the retry policy the service uses which may be different from the one provided
          #  (or not) during activity scheduling. The service can override the provided one if some
          #  values are not specified or exceed configured system limits.
          #
          def retry_policy=: [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporalio::Api::Common::V1::RetryPolicy?

          def initialize: (?task_token: ::String, ?workflow_namespace: ::String, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?activity_type: ::Temporalio::Api::Common::V1::ActivityType::init?, ?activity_id: ::String, ?header: ::Temporalio::Api::Common::V1::Header::init?, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?heartbeat_details: ::Temporalio::Api::Common::V1::Payloads::init?, ?scheduled_time: ::Google::Protobuf::Timestamp::init?, ?current_attempt_scheduled_time: ::Google::Protobuf::Timestamp::init?, ?started_time: ::Google::Protobuf::Timestamp::init?, ?attempt: ::Integer, ?schedule_to_close_timeout: ::Google::Protobuf::Duration::init?, ?start_to_close_timeout: ::Google::Protobuf::Duration::init?, ?heartbeat_timeout: ::Google::Protobuf::Duration::init?, ?retry_policy: ::Temporalio::Api::Common::V1::RetryPolicy::init?) -> void

          def []: (:task_token) -> ::String
                | (:workflow_namespace) -> ::String
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:activity_type) -> ::Temporalio::Api::Common::V1::ActivityType?
                | (:activity_id) -> ::String
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:heartbeat_details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:scheduled_time) -> ::Google::Protobuf::Timestamp?
                | (:current_attempt_scheduled_time) -> ::Google::Protobuf::Timestamp?
                | (:started_time) -> ::Google::Protobuf::Timestamp?
                | (:attempt) -> ::Integer
                | (:schedule_to_close_timeout) -> ::Google::Protobuf::Duration?
                | (:start_to_close_timeout) -> ::Google::Protobuf::Duration?
                | (:heartbeat_timeout) -> ::Google::Protobuf::Duration?
                | (:retry_policy) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:workflow_namespace, ::String) -> ::String
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:activity_type, ::Temporalio::Api::Common::V1::ActivityType?) -> ::Temporalio::Api::Common::V1::ActivityType?
                 | [M < ::Temporalio::Api::Common::V1::ActivityType::_ToProto] (:activity_type, M?) -> M?
                 | (:activity_id, ::String) -> ::String
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:heartbeat_details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:heartbeat_details, M?) -> M?
                 | (:scheduled_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:scheduled_time, M?) -> M?
                 | (:current_attempt_scheduled_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:current_attempt_scheduled_time, M?) -> M?
                 | (:started_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:started_time, M?) -> M?
                 | (:attempt, ::Integer) -> ::Integer
                 | (:schedule_to_close_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:schedule_to_close_timeout, M?) -> M?
                 | (:start_to_close_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:start_to_close_timeout, M?) -> M?
                 | (:heartbeat_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:heartbeat_timeout, M?) -> M?
                 | (:retry_policy, ::Temporalio::Api::Common::V1::RetryPolicy?) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> PollActivityTaskQueueResponse
          end

          # The type of `#initialize` parameter.
          type init = PollActivityTaskQueueResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[PollActivityTaskQueueResponse, PollActivityTaskQueueResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, PollActivityTaskQueueResponse, PollActivityTaskQueueResponse | _ToProto]

          type array = ::Array[PollActivityTaskQueueResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, PollActivityTaskQueueResponse | _ToProto]
        end

        class RecordActivityTaskHeartbeatRequest < ::Protobuf::Message
          # The task token as received in `PollActivityTaskQueueResponse`
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          # Arbitrary data, of which the most recent call is kept, to store for this activity
          #
          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          # Arbitrary data, of which the most recent call is kept, to store for this activity
          #
          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          def initialize: (?task_token: ::String, ?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String, ?namespace: ::String) -> void

          def []: (:task_token) -> ::String
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (:namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RecordActivityTaskHeartbeatRequest
          end

          # The type of `#initialize` parameter.
          type init = RecordActivityTaskHeartbeatRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RecordActivityTaskHeartbeatRequest, RecordActivityTaskHeartbeatRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RecordActivityTaskHeartbeatRequest, RecordActivityTaskHeartbeatRequest | _ToProto]

          type array = ::Array[RecordActivityTaskHeartbeatRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RecordActivityTaskHeartbeatRequest | _ToProto]
        end

        class RecordActivityTaskHeartbeatResponse < ::Protobuf::Message
          # Will be set to true if the activity has been asked to cancel itself. The SDK should then
          #  notify the activity of cancellation if it is still running.
          #
          attr_accessor cancel_requested(): bool

          def cancel_requested!: () -> bool?

          def initialize: (?cancel_requested: bool) -> void

          def []: (:cancel_requested) -> bool
                | (::Symbol) -> untyped

          def []=: (:cancel_requested, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def cancel_requested?: () -> bool

          interface _ToProto
            def to_proto: () -> RecordActivityTaskHeartbeatResponse
          end

          # The type of `#initialize` parameter.
          type init = RecordActivityTaskHeartbeatResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RecordActivityTaskHeartbeatResponse, RecordActivityTaskHeartbeatResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RecordActivityTaskHeartbeatResponse, RecordActivityTaskHeartbeatResponse | _ToProto]

          type array = ::Array[RecordActivityTaskHeartbeatResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RecordActivityTaskHeartbeatResponse | _ToProto]
        end

        class RecordActivityTaskHeartbeatByIdRequest < ::Protobuf::Message
          # Namespace of the workflow which scheduled this activity
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Id of the workflow which scheduled this activity
          #
          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          # Run Id of the workflow which scheduled this activity
          #
          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          # Id of the activity we're heartbeating
          #
          attr_accessor activity_id(): ::String

          def activity_id!: () -> ::String?

          # Arbitrary data, of which the most recent call is kept, to store for this activity
          #
          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          # Arbitrary data, of which the most recent call is kept, to store for this activity
          #
          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?run_id: ::String, ?activity_id: ::String, ?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:run_id) -> ::String
                | (:activity_id) -> ::String
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:run_id, ::String) -> ::String
                 | (:activity_id, ::String) -> ::String
                 | (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RecordActivityTaskHeartbeatByIdRequest
          end

          # The type of `#initialize` parameter.
          type init = RecordActivityTaskHeartbeatByIdRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RecordActivityTaskHeartbeatByIdRequest, RecordActivityTaskHeartbeatByIdRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RecordActivityTaskHeartbeatByIdRequest, RecordActivityTaskHeartbeatByIdRequest | _ToProto]

          type array = ::Array[RecordActivityTaskHeartbeatByIdRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RecordActivityTaskHeartbeatByIdRequest | _ToProto]
        end

        class RecordActivityTaskHeartbeatByIdResponse < ::Protobuf::Message
          # Will be set to true if the activity has been asked to cancel itself. The SDK should then
          #  notify the activity of cancellation if it is still running.
          #
          attr_accessor cancel_requested(): bool

          def cancel_requested!: () -> bool?

          def initialize: (?cancel_requested: bool) -> void

          def []: (:cancel_requested) -> bool
                | (::Symbol) -> untyped

          def []=: (:cancel_requested, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def cancel_requested?: () -> bool

          interface _ToProto
            def to_proto: () -> RecordActivityTaskHeartbeatByIdResponse
          end

          # The type of `#initialize` parameter.
          type init = RecordActivityTaskHeartbeatByIdResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RecordActivityTaskHeartbeatByIdResponse, RecordActivityTaskHeartbeatByIdResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RecordActivityTaskHeartbeatByIdResponse, RecordActivityTaskHeartbeatByIdResponse | _ToProto]

          type array = ::Array[RecordActivityTaskHeartbeatByIdResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RecordActivityTaskHeartbeatByIdResponse | _ToProto]
        end

        class RespondActivityTaskCompletedRequest < ::Protobuf::Message
          # The task token as received in `PollActivityTaskQueueResponse`
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          # The result of successfully executing the activity
          #
          attr_accessor result(): ::Temporalio::Api::Common::V1::Payloads?

          # The result of successfully executing the activity
          #
          def result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                     | ...

          def result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          def initialize: (?task_token: ::String, ?result: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String, ?namespace: ::String) -> void

          def []: (:task_token) -> ::String
                | (:result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (:namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:result, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCompletedRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCompletedRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCompletedRequest, RespondActivityTaskCompletedRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCompletedRequest, RespondActivityTaskCompletedRequest | _ToProto]

          type array = ::Array[RespondActivityTaskCompletedRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCompletedRequest | _ToProto]
        end

        class RespondActivityTaskCompletedResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCompletedResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCompletedResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCompletedResponse, RespondActivityTaskCompletedResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCompletedResponse, RespondActivityTaskCompletedResponse | _ToProto]

          type array = ::Array[RespondActivityTaskCompletedResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCompletedResponse | _ToProto]
        end

        class RespondActivityTaskCompletedByIdRequest < ::Protobuf::Message
          # Namespace of the workflow which scheduled this activity
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Id of the workflow which scheduled this activity
          #
          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          # Run Id of the workflow which scheduled this activity
          #
          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          # Id of the activity to complete
          #
          attr_accessor activity_id(): ::String

          def activity_id!: () -> ::String?

          # The serialized result of activity execution
          #
          attr_accessor result(): ::Temporalio::Api::Common::V1::Payloads?

          # The serialized result of activity execution
          #
          def result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                     | ...

          def result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?run_id: ::String, ?activity_id: ::String, ?result: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:run_id) -> ::String
                | (:activity_id) -> ::String
                | (:result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:run_id, ::String) -> ::String
                 | (:activity_id, ::String) -> ::String
                 | (:result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:result, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCompletedByIdRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCompletedByIdRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCompletedByIdRequest, RespondActivityTaskCompletedByIdRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCompletedByIdRequest, RespondActivityTaskCompletedByIdRequest | _ToProto]

          type array = ::Array[RespondActivityTaskCompletedByIdRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCompletedByIdRequest | _ToProto]
        end

        class RespondActivityTaskCompletedByIdResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCompletedByIdResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCompletedByIdResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCompletedByIdResponse, RespondActivityTaskCompletedByIdResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCompletedByIdResponse, RespondActivityTaskCompletedByIdResponse | _ToProto]

          type array = ::Array[RespondActivityTaskCompletedByIdResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCompletedByIdResponse | _ToProto]
        end

        class RespondActivityTaskFailedRequest < ::Protobuf::Message
          # The task token as received in `PollActivityTaskQueueResponse`
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          # Detailed failure information
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # Detailed failure information
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Additional details to be stored as last activity heartbeat
          #
          attr_accessor last_heartbeat_details(): ::Temporalio::Api::Common::V1::Payloads?

          # Additional details to be stored as last activity heartbeat
          #
          def last_heartbeat_details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                                     | ...

          def last_heartbeat_details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          def initialize: (?task_token: ::String, ?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?identity: ::String, ?namespace: ::String, ?last_heartbeat_details: ::Temporalio::Api::Common::V1::Payloads::init?) -> void

          def []: (:task_token) -> ::String
                | (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:identity) -> ::String
                | (:namespace) -> ::String
                | (:last_heartbeat_details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:namespace, ::String) -> ::String
                 | (:last_heartbeat_details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:last_heartbeat_details, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskFailedRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskFailedRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskFailedRequest, RespondActivityTaskFailedRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskFailedRequest, RespondActivityTaskFailedRequest | _ToProto]

          type array = ::Array[RespondActivityTaskFailedRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskFailedRequest | _ToProto]
        end

        class RespondActivityTaskFailedResponse < ::Protobuf::Message
          # Server validation failures could include
          #  last_heartbeat_details payload is too large, request failure is too large
          #
          attr_accessor failures(): ::Temporalio::Api::Failure::V1::Failure::field_array

          # Server validation failures could include
          #  last_heartbeat_details payload is too large, request failure is too large
          #
          def failures=: (::Temporalio::Api::Failure::V1::Failure::array) -> ::Temporalio::Api::Failure::V1::Failure::array
                       | ...

          def failures!: () -> ::Temporalio::Api::Failure::V1::Failure::field_array?

          def initialize: (?failures: ::Temporalio::Api::Failure::V1::Failure::array) -> void

          def []: (:failures) -> ::Temporalio::Api::Failure::V1::Failure::field_array
                | (::Symbol) -> untyped

          def []=: (:failures, ::Temporalio::Api::Failure::V1::Failure::field_array) -> ::Temporalio::Api::Failure::V1::Failure::field_array
                 | (:failures, ::Temporalio::Api::Failure::V1::Failure::array) -> ::Temporalio::Api::Failure::V1::Failure::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskFailedResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskFailedResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskFailedResponse, RespondActivityTaskFailedResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskFailedResponse, RespondActivityTaskFailedResponse | _ToProto]

          type array = ::Array[RespondActivityTaskFailedResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskFailedResponse | _ToProto]
        end

        class RespondActivityTaskFailedByIdRequest < ::Protobuf::Message
          # Namespace of the workflow which scheduled this activity
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Id of the workflow which scheduled this activity
          #
          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          # Run Id of the workflow which scheduled this activity
          #
          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          # Id of the activity to fail
          #
          attr_accessor activity_id(): ::String

          def activity_id!: () -> ::String?

          # Detailed failure information
          #
          attr_accessor failure(): ::Temporalio::Api::Failure::V1::Failure?

          # Detailed failure information
          #
          def failure=: [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (M?) -> M?
                      | ...

          def failure!: () -> ::Temporalio::Api::Failure::V1::Failure?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Additional details to be stored as last activity heartbeat
          #
          attr_accessor last_heartbeat_details(): ::Temporalio::Api::Common::V1::Payloads?

          # Additional details to be stored as last activity heartbeat
          #
          def last_heartbeat_details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                                     | ...

          def last_heartbeat_details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?run_id: ::String, ?activity_id: ::String, ?failure: ::Temporalio::Api::Failure::V1::Failure::init?, ?identity: ::String, ?last_heartbeat_details: ::Temporalio::Api::Common::V1::Payloads::init?) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:run_id) -> ::String
                | (:activity_id) -> ::String
                | (:failure) -> ::Temporalio::Api::Failure::V1::Failure?
                | (:identity) -> ::String
                | (:last_heartbeat_details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:run_id, ::String) -> ::String
                 | (:activity_id, ::String) -> ::String
                 | (:failure, ::Temporalio::Api::Failure::V1::Failure?) -> ::Temporalio::Api::Failure::V1::Failure?
                 | [M < ::Temporalio::Api::Failure::V1::Failure::_ToProto] (:failure, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:last_heartbeat_details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:last_heartbeat_details, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskFailedByIdRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskFailedByIdRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskFailedByIdRequest, RespondActivityTaskFailedByIdRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskFailedByIdRequest, RespondActivityTaskFailedByIdRequest | _ToProto]

          type array = ::Array[RespondActivityTaskFailedByIdRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskFailedByIdRequest | _ToProto]
        end

        class RespondActivityTaskFailedByIdResponse < ::Protobuf::Message
          # Server validation failures could include
          #  last_heartbeat_details payload is too large, request failure is too large
          #
          attr_accessor failures(): ::Temporalio::Api::Failure::V1::Failure::field_array

          # Server validation failures could include
          #  last_heartbeat_details payload is too large, request failure is too large
          #
          def failures=: (::Temporalio::Api::Failure::V1::Failure::array) -> ::Temporalio::Api::Failure::V1::Failure::array
                       | ...

          def failures!: () -> ::Temporalio::Api::Failure::V1::Failure::field_array?

          def initialize: (?failures: ::Temporalio::Api::Failure::V1::Failure::array) -> void

          def []: (:failures) -> ::Temporalio::Api::Failure::V1::Failure::field_array
                | (::Symbol) -> untyped

          def []=: (:failures, ::Temporalio::Api::Failure::V1::Failure::field_array) -> ::Temporalio::Api::Failure::V1::Failure::field_array
                 | (:failures, ::Temporalio::Api::Failure::V1::Failure::array) -> ::Temporalio::Api::Failure::V1::Failure::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskFailedByIdResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskFailedByIdResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskFailedByIdResponse, RespondActivityTaskFailedByIdResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskFailedByIdResponse, RespondActivityTaskFailedByIdResponse | _ToProto]

          type array = ::Array[RespondActivityTaskFailedByIdResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskFailedByIdResponse | _ToProto]
        end

        class RespondActivityTaskCanceledRequest < ::Protobuf::Message
          # The task token as received in `PollActivityTaskQueueResponse`
          #
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          # Serialized additional information to attach to the cancellation
          #
          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized additional information to attach to the cancellation
          #
          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          def initialize: (?task_token: ::String, ?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String, ?namespace: ::String) -> void

          def []: (:task_token) -> ::String
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (:namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCanceledRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCanceledRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCanceledRequest, RespondActivityTaskCanceledRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCanceledRequest, RespondActivityTaskCanceledRequest | _ToProto]

          type array = ::Array[RespondActivityTaskCanceledRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCanceledRequest | _ToProto]
        end

        class RespondActivityTaskCanceledResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCanceledResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCanceledResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCanceledResponse, RespondActivityTaskCanceledResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCanceledResponse, RespondActivityTaskCanceledResponse | _ToProto]

          type array = ::Array[RespondActivityTaskCanceledResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCanceledResponse | _ToProto]
        end

        class RespondActivityTaskCanceledByIdRequest < ::Protobuf::Message
          # Namespace of the workflow which scheduled this activity
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Id of the workflow which scheduled this activity
          #
          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          # Run Id of the workflow which scheduled this activity
          #
          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          # Id of the activity to confirm is cancelled
          #
          attr_accessor activity_id(): ::String

          def activity_id!: () -> ::String?

          # Serialized additional information to attach to the cancellation
          #
          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized additional information to attach to the cancellation
          #
          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?run_id: ::String, ?activity_id: ::String, ?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:run_id) -> ::String
                | (:activity_id) -> ::String
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:run_id, ::String) -> ::String
                 | (:activity_id, ::String) -> ::String
                 | (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCanceledByIdRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCanceledByIdRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCanceledByIdRequest, RespondActivityTaskCanceledByIdRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCanceledByIdRequest, RespondActivityTaskCanceledByIdRequest | _ToProto]

          type array = ::Array[RespondActivityTaskCanceledByIdRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCanceledByIdRequest | _ToProto]
        end

        class RespondActivityTaskCanceledByIdResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RespondActivityTaskCanceledByIdResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondActivityTaskCanceledByIdResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondActivityTaskCanceledByIdResponse, RespondActivityTaskCanceledByIdResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondActivityTaskCanceledByIdResponse, RespondActivityTaskCanceledByIdResponse | _ToProto]

          type array = ::Array[RespondActivityTaskCanceledByIdResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondActivityTaskCanceledByIdResponse | _ToProto]
        end

        class RequestCancelWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Used to de-dupe cancellation requests
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # If set, this call will error if the most recent (if no run id is set on
          #  `workflow_execution`), or specified (if it is) workflow execution is not part of the same
          #  execution chain as this id.
          #
          attr_accessor first_execution_run_id(): ::String

          def first_execution_run_id!: () -> ::String?

          # Reason for requesting the cancellation
          #
          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          def initialize: (?namespace: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?identity: ::String, ?request_id: ::String, ?first_execution_run_id: ::String, ?reason: ::String) -> void

          def []: (:namespace) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (:first_execution_run_id) -> ::String
                | (:reason) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (:first_execution_run_id, ::String) -> ::String
                 | (:reason, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RequestCancelWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = RequestCancelWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RequestCancelWorkflowExecutionRequest, RequestCancelWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RequestCancelWorkflowExecutionRequest, RequestCancelWorkflowExecutionRequest | _ToProto]

          type array = ::Array[RequestCancelWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RequestCancelWorkflowExecutionRequest | _ToProto]
        end

        class RequestCancelWorkflowExecutionResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RequestCancelWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = RequestCancelWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RequestCancelWorkflowExecutionResponse, RequestCancelWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RequestCancelWorkflowExecutionResponse, RequestCancelWorkflowExecutionResponse | _ToProto]

          type array = ::Array[RequestCancelWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RequestCancelWorkflowExecutionResponse | _ToProto]
        end

        class SignalWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # The workflow author-defined name of the signal to send to the workflow
          #
          attr_accessor signal_name(): ::String

          def signal_name!: () -> ::String?

          # Serialized value(s) to provide with the signal
          #
          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized value(s) to provide with the signal
          #
          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Used to de-dupe sent signals
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Headers that are passed with the signal to the processing workflow.
          #  These can include things like auth or tracing tokens.
          #
          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          # Headers that are passed with the signal to the processing workflow.
          #  These can include things like auth or tracing tokens.
          #
          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          def initialize: (?namespace: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?signal_name: ::String, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String, ?request_id: ::String, ?control: ::String, ?header: ::Temporalio::Api::Common::V1::Header::init?) -> void

          def []: (:namespace) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:signal_name) -> ::String
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (:control) -> ::String
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:signal_name, ::String) -> ::String
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (:control, ::String) -> ::String
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> SignalWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = SignalWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalWorkflowExecutionRequest, SignalWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalWorkflowExecutionRequest, SignalWorkflowExecutionRequest | _ToProto]

          type array = ::Array[SignalWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, SignalWorkflowExecutionRequest | _ToProto]
        end

        class SignalWorkflowExecutionResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> SignalWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = SignalWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalWorkflowExecutionResponse, SignalWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalWorkflowExecutionResponse, SignalWorkflowExecutionResponse | _ToProto]

          type array = ::Array[SignalWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, SignalWorkflowExecutionResponse | _ToProto]
        end

        class SignalWithStartWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_id(): ::String

          def workflow_id!: () -> ::String?

          attr_accessor workflow_type(): ::Temporalio::Api::Common::V1::WorkflowType?

          def workflow_type=: [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (M?) -> M?
                            | ...

          def workflow_type!: () -> ::Temporalio::Api::Common::V1::WorkflowType?

          # The task queue to start this workflow on, if it will be started
          #
          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # The task queue to start this workflow on, if it will be started
          #
          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          # Serialized arguments to the workflow. These are passed as arguments to the workflow function.
          #
          attr_accessor input(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized arguments to the workflow. These are passed as arguments to the workflow function.
          #
          def input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Total workflow execution timeout including retries and continue as new
          #
          attr_accessor workflow_execution_timeout(): ::Google::Protobuf::Duration?

          # Total workflow execution timeout including retries and continue as new
          #
          def workflow_execution_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                         | ...

          def workflow_execution_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow run
          #
          attr_accessor workflow_run_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow run
          #
          def workflow_run_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                   | ...

          def workflow_run_timeout!: () -> ::Google::Protobuf::Duration?

          # Timeout of a single workflow task
          #
          attr_accessor workflow_task_timeout(): ::Google::Protobuf::Duration?

          # Timeout of a single workflow task
          #
          def workflow_task_timeout=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def workflow_task_timeout!: () -> ::Google::Protobuf::Duration?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Used to de-dupe signal w/ start requests
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          attr_accessor workflow_id_reuse_policy(): ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy

          def workflow_id_reuse_policy=: (::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values
                                       | ...

          def workflow_id_reuse_policy!: () -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy?

          # The workflow author-defined name of the signal to send to the workflow
          #
          attr_accessor signal_name(): ::String

          def signal_name!: () -> ::String?

          # Serialized value(s) to provide with the signal
          #
          attr_accessor signal_input(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized value(s) to provide with the signal
          #
          def signal_input=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                           | ...

          def signal_input!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # Deprecated
          #
          attr_accessor control(): ::String

          def control!: () -> ::String?

          # Retry policy for the workflow Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          attr_accessor retry_policy(): ::Temporalio::Api::Common::V1::RetryPolicy?

          # Retry policy for the workflow Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
          #
          def retry_policy=: [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (M?) -> M?
                           | ...

          def retry_policy!: () -> ::Temporalio::Api::Common::V1::RetryPolicy?

          # See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/
          #
          attr_accessor cron_schedule(): ::String

          def cron_schedule!: () -> ::String?

          attr_accessor memo(): ::Temporalio::Api::Common::V1::Memo?

          def memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          attr_accessor header(): ::Temporalio::Api::Common::V1::Header?

          def header=: [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (M?) -> M?
                     | ...

          def header!: () -> ::Temporalio::Api::Common::V1::Header?

          def initialize: (?namespace: ::String, ?workflow_id: ::String, ?workflow_type: ::Temporalio::Api::Common::V1::WorkflowType::init?, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?input: ::Temporalio::Api::Common::V1::Payloads::init?, ?workflow_execution_timeout: ::Google::Protobuf::Duration::init?, ?workflow_run_timeout: ::Google::Protobuf::Duration::init?, ?workflow_task_timeout: ::Google::Protobuf::Duration::init?, ?identity: ::String, ?request_id: ::String, ?workflow_id_reuse_policy: ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::init, ?signal_name: ::String, ?signal_input: ::Temporalio::Api::Common::V1::Payloads::init?, ?control: ::String, ?retry_policy: ::Temporalio::Api::Common::V1::RetryPolicy::init?, ?cron_schedule: ::String, ?memo: ::Temporalio::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?, ?header: ::Temporalio::Api::Common::V1::Header::init?) -> void

          def []: (:namespace) -> ::String
                | (:workflow_id) -> ::String
                | (:workflow_type) -> ::Temporalio::Api::Common::V1::WorkflowType?
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:workflow_execution_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_run_timeout) -> ::Google::Protobuf::Duration?
                | (:workflow_task_timeout) -> ::Google::Protobuf::Duration?
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (:workflow_id_reuse_policy) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy
                | (:signal_name) -> ::String
                | (:signal_input) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:control) -> ::String
                | (:retry_policy) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                | (:cron_schedule) -> ::String
                | (:memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (:header) -> ::Temporalio::Api::Common::V1::Header?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_id, ::String) -> ::String
                 | (:workflow_type, ::Temporalio::Api::Common::V1::WorkflowType?) -> ::Temporalio::Api::Common::V1::WorkflowType?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowType::_ToProto] (:workflow_type, M?) -> M?
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:input, M?) -> M?
                 | (:workflow_execution_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_execution_timeout, M?) -> M?
                 | (:workflow_run_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_run_timeout, M?) -> M?
                 | (:workflow_task_timeout, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:workflow_task_timeout, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (:workflow_id_reuse_policy, ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy
                 | (:workflow_id_reuse_policy, ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values) -> ::Temporalio::Api::Enums::V1::WorkflowIdReusePolicy::values
                 | (:signal_name, ::String) -> ::String
                 | (:signal_input, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:signal_input, M?) -> M?
                 | (:control, ::String) -> ::String
                 | (:retry_policy, ::Temporalio::Api::Common::V1::RetryPolicy?) -> ::Temporalio::Api::Common::V1::RetryPolicy?
                 | [M < ::Temporalio::Api::Common::V1::RetryPolicy::_ToProto] (:retry_policy, M?) -> M?
                 | (:cron_schedule, ::String) -> ::String
                 | (:memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (:header, ::Temporalio::Api::Common::V1::Header?) -> ::Temporalio::Api::Common::V1::Header?
                 | [M < ::Temporalio::Api::Common::V1::Header::_ToProto] (:header, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> SignalWithStartWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = SignalWithStartWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalWithStartWorkflowExecutionRequest, SignalWithStartWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalWithStartWorkflowExecutionRequest, SignalWithStartWorkflowExecutionRequest | _ToProto]

          type array = ::Array[SignalWithStartWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, SignalWithStartWorkflowExecutionRequest | _ToProto]
        end

        class SignalWithStartWorkflowExecutionResponse < ::Protobuf::Message
          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          def initialize: (?run_id: ::String) -> void

          def []: (:run_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:run_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> SignalWithStartWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = SignalWithStartWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[SignalWithStartWorkflowExecutionResponse, SignalWithStartWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, SignalWithStartWorkflowExecutionResponse, SignalWithStartWorkflowExecutionResponse | _ToProto]

          type array = ::Array[SignalWithStartWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, SignalWithStartWorkflowExecutionResponse | _ToProto]
        end

        class ResetWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          # The id of a `WORKFLOW_TASK_COMPLETED`,`WORKFLOW_TASK_TIMED_OUT`, `WORKFLOW_TASK_FAILED`, or
          #  `WORKFLOW_TASK_STARTED` event to reset to.
          #
          attr_accessor workflow_task_finish_event_id(): ::Integer

          def workflow_task_finish_event_id!: () -> ::Integer?

          # Used to de-dupe reset requests
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # Reset reapplay(replay) options.
          #
          attr_accessor reset_reapply_type(): ::Temporalio::Api::Enums::V1::ResetReapplyType

          # Reset reapplay(replay) options.
          #
          def reset_reapply_type=: (::Temporalio::Api::Enums::V1::ResetReapplyType::values) -> ::Temporalio::Api::Enums::V1::ResetReapplyType::values
                                 | ...

          def reset_reapply_type!: () -> ::Temporalio::Api::Enums::V1::ResetReapplyType?

          def initialize: (?namespace: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?reason: ::String, ?workflow_task_finish_event_id: ::Integer, ?request_id: ::String, ?reset_reapply_type: ::Temporalio::Api::Enums::V1::ResetReapplyType::init) -> void

          def []: (:namespace) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:reason) -> ::String
                | (:workflow_task_finish_event_id) -> ::Integer
                | (:request_id) -> ::String
                | (:reset_reapply_type) -> ::Temporalio::Api::Enums::V1::ResetReapplyType
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:reason, ::String) -> ::String
                 | (:workflow_task_finish_event_id, ::Integer) -> ::Integer
                 | (:request_id, ::String) -> ::String
                 | (:reset_reapply_type, ::Temporalio::Api::Enums::V1::ResetReapplyType) -> ::Temporalio::Api::Enums::V1::ResetReapplyType
                 | (:reset_reapply_type, ::Temporalio::Api::Enums::V1::ResetReapplyType::values) -> ::Temporalio::Api::Enums::V1::ResetReapplyType::values
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ResetWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = ResetWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ResetWorkflowExecutionRequest, ResetWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ResetWorkflowExecutionRequest, ResetWorkflowExecutionRequest | _ToProto]

          type array = ::Array[ResetWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ResetWorkflowExecutionRequest | _ToProto]
        end

        class ResetWorkflowExecutionResponse < ::Protobuf::Message
          attr_accessor run_id(): ::String

          def run_id!: () -> ::String?

          def initialize: (?run_id: ::String) -> void

          def []: (:run_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:run_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ResetWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = ResetWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ResetWorkflowExecutionResponse, ResetWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ResetWorkflowExecutionResponse, ResetWorkflowExecutionResponse | _ToProto]

          type array = ::Array[ResetWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ResetWorkflowExecutionResponse | _ToProto]
        end

        class TerminateWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          # Serialized additional information to attach to the termination event
          #
          attr_accessor details(): ::Temporalio::Api::Common::V1::Payloads?

          # Serialized additional information to attach to the termination event
          #
          def details=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                      | ...

          def details!: () -> ::Temporalio::Api::Common::V1::Payloads?

          # The identity of the worker/client
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # If set, this call will error if the most recent (if no run id is set on
          #  `workflow_execution`), or specified (if it is) workflow execution is not part of the same
          #  execution chain as this id.
          #
          attr_accessor first_execution_run_id(): ::String

          def first_execution_run_id!: () -> ::String?

          def initialize: (?namespace: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?reason: ::String, ?details: ::Temporalio::Api::Common::V1::Payloads::init?, ?identity: ::String, ?first_execution_run_id: ::String) -> void

          def []: (:namespace) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:reason) -> ::String
                | (:details) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:identity) -> ::String
                | (:first_execution_run_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:reason, ::String) -> ::String
                 | (:details, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:details, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:first_execution_run_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> TerminateWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = TerminateWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[TerminateWorkflowExecutionRequest, TerminateWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, TerminateWorkflowExecutionRequest, TerminateWorkflowExecutionRequest | _ToProto]

          type array = ::Array[TerminateWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, TerminateWorkflowExecutionRequest | _ToProto]
        end

        class TerminateWorkflowExecutionResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> TerminateWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = TerminateWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[TerminateWorkflowExecutionResponse, TerminateWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, TerminateWorkflowExecutionResponse, TerminateWorkflowExecutionResponse | _ToProto]

          type array = ::Array[TerminateWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, TerminateWorkflowExecutionResponse | _ToProto]
        end

        # (-- api-linter: core::0135::request-unknown-fields=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #  (-- api-linter: core::0135::request-name-required=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #
        class DeleteWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Workflow Execution to delete. If run_id is not specified, the latest one is used.
          #
          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          # Workflow Execution to delete. If run_id is not specified, the latest one is used.
          #
          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          def initialize: (?namespace: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?) -> void

          def []: (:namespace) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeleteWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = DeleteWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteWorkflowExecutionRequest, DeleteWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteWorkflowExecutionRequest, DeleteWorkflowExecutionRequest | _ToProto]

          type array = ::Array[DeleteWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteWorkflowExecutionRequest | _ToProto]
        end

        class DeleteWorkflowExecutionResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> DeleteWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = DeleteWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteWorkflowExecutionResponse, DeleteWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteWorkflowExecutionResponse, DeleteWorkflowExecutionResponse | _ToProto]

          type array = ::Array[DeleteWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteWorkflowExecutionResponse | _ToProto]
        end

        class ListOpenWorkflowExecutionsRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor maximum_page_size(): ::Integer

          def maximum_page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          attr_accessor start_time_filter(): ::Temporalio::Api::Filter::V1::StartTimeFilter?

          def start_time_filter=: [M < ::Temporalio::Api::Filter::V1::StartTimeFilter::_ToProto] (M?) -> M?
                                | ...

          def start_time_filter!: () -> ::Temporalio::Api::Filter::V1::StartTimeFilter?

          attr_accessor execution_filter(): ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?

          def execution_filter=: [M < ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter::_ToProto] (M?) -> M?
                               | ...

          def execution_filter!: () -> ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?

          attr_accessor type_filter(): ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?

          def type_filter=: [M < ::Temporalio::Api::Filter::V1::WorkflowTypeFilter::_ToProto] (M?) -> M?
                          | ...

          def type_filter!: () -> ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?

          def initialize: (?namespace: ::String, ?maximum_page_size: ::Integer, ?next_page_token: ::String, ?start_time_filter: ::Temporalio::Api::Filter::V1::StartTimeFilter::init?, ?execution_filter: ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter::init?, ?type_filter: ::Temporalio::Api::Filter::V1::WorkflowTypeFilter::init?) -> void

          def []: (:namespace) -> ::String
                | (:maximum_page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (:start_time_filter) -> ::Temporalio::Api::Filter::V1::StartTimeFilter?
                | (:execution_filter) -> ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?
                | (:type_filter) -> ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:maximum_page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (:start_time_filter, ::Temporalio::Api::Filter::V1::StartTimeFilter?) -> ::Temporalio::Api::Filter::V1::StartTimeFilter?
                 | [M < ::Temporalio::Api::Filter::V1::StartTimeFilter::_ToProto] (:start_time_filter, M?) -> M?
                 | (:execution_filter, ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?) -> ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?
                 | [M < ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter::_ToProto] (:execution_filter, M?) -> M?
                 | (:type_filter, ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?) -> ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?
                 | [M < ::Temporalio::Api::Filter::V1::WorkflowTypeFilter::_ToProto] (:type_filter, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListOpenWorkflowExecutionsRequest
          end

          # The type of `#initialize` parameter.
          type init = ListOpenWorkflowExecutionsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListOpenWorkflowExecutionsRequest, ListOpenWorkflowExecutionsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListOpenWorkflowExecutionsRequest, ListOpenWorkflowExecutionsRequest | _ToProto]

          type array = ::Array[ListOpenWorkflowExecutionsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListOpenWorkflowExecutionsRequest | _ToProto]
        end

        class ListOpenWorkflowExecutionsResponse < ::Protobuf::Message
          attr_accessor executions(): ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array

          def executions=: (::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                         | ...

          def executions!: () -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?executions: ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array, ?next_page_token: ::String) -> void

          def []: (:executions) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                 | (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListOpenWorkflowExecutionsResponse
          end

          # The type of `#initialize` parameter.
          type init = ListOpenWorkflowExecutionsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListOpenWorkflowExecutionsResponse, ListOpenWorkflowExecutionsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListOpenWorkflowExecutionsResponse, ListOpenWorkflowExecutionsResponse | _ToProto]

          type array = ::Array[ListOpenWorkflowExecutionsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListOpenWorkflowExecutionsResponse | _ToProto]
        end

        class ListClosedWorkflowExecutionsRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor maximum_page_size(): ::Integer

          def maximum_page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          attr_accessor start_time_filter(): ::Temporalio::Api::Filter::V1::StartTimeFilter?

          def start_time_filter=: [M < ::Temporalio::Api::Filter::V1::StartTimeFilter::_ToProto] (M?) -> M?
                                | ...

          def start_time_filter!: () -> ::Temporalio::Api::Filter::V1::StartTimeFilter?

          attr_accessor execution_filter(): ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?

          def execution_filter=: [M < ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter::_ToProto] (M?) -> M?
                               | ...

          def execution_filter!: () -> ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?

          attr_accessor type_filter(): ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?

          def type_filter=: [M < ::Temporalio::Api::Filter::V1::WorkflowTypeFilter::_ToProto] (M?) -> M?
                          | ...

          def type_filter!: () -> ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?

          attr_accessor status_filter(): ::Temporalio::Api::Filter::V1::StatusFilter?

          def status_filter=: [M < ::Temporalio::Api::Filter::V1::StatusFilter::_ToProto] (M?) -> M?
                            | ...

          def status_filter!: () -> ::Temporalio::Api::Filter::V1::StatusFilter?

          def initialize: (?namespace: ::String, ?maximum_page_size: ::Integer, ?next_page_token: ::String, ?start_time_filter: ::Temporalio::Api::Filter::V1::StartTimeFilter::init?, ?execution_filter: ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter::init?, ?type_filter: ::Temporalio::Api::Filter::V1::WorkflowTypeFilter::init?, ?status_filter: ::Temporalio::Api::Filter::V1::StatusFilter::init?) -> void

          def []: (:namespace) -> ::String
                | (:maximum_page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (:start_time_filter) -> ::Temporalio::Api::Filter::V1::StartTimeFilter?
                | (:execution_filter) -> ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?
                | (:type_filter) -> ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?
                | (:status_filter) -> ::Temporalio::Api::Filter::V1::StatusFilter?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:maximum_page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (:start_time_filter, ::Temporalio::Api::Filter::V1::StartTimeFilter?) -> ::Temporalio::Api::Filter::V1::StartTimeFilter?
                 | [M < ::Temporalio::Api::Filter::V1::StartTimeFilter::_ToProto] (:start_time_filter, M?) -> M?
                 | (:execution_filter, ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?) -> ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter?
                 | [M < ::Temporalio::Api::Filter::V1::WorkflowExecutionFilter::_ToProto] (:execution_filter, M?) -> M?
                 | (:type_filter, ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?) -> ::Temporalio::Api::Filter::V1::WorkflowTypeFilter?
                 | [M < ::Temporalio::Api::Filter::V1::WorkflowTypeFilter::_ToProto] (:type_filter, M?) -> M?
                 | (:status_filter, ::Temporalio::Api::Filter::V1::StatusFilter?) -> ::Temporalio::Api::Filter::V1::StatusFilter?
                 | [M < ::Temporalio::Api::Filter::V1::StatusFilter::_ToProto] (:status_filter, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClosedWorkflowExecutionsRequest
          end

          # The type of `#initialize` parameter.
          type init = ListClosedWorkflowExecutionsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClosedWorkflowExecutionsRequest, ListClosedWorkflowExecutionsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClosedWorkflowExecutionsRequest, ListClosedWorkflowExecutionsRequest | _ToProto]

          type array = ::Array[ListClosedWorkflowExecutionsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClosedWorkflowExecutionsRequest | _ToProto]
        end

        class ListClosedWorkflowExecutionsResponse < ::Protobuf::Message
          attr_accessor executions(): ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array

          def executions=: (::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                         | ...

          def executions!: () -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?executions: ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array, ?next_page_token: ::String) -> void

          def []: (:executions) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                 | (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClosedWorkflowExecutionsResponse
          end

          # The type of `#initialize` parameter.
          type init = ListClosedWorkflowExecutionsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClosedWorkflowExecutionsResponse, ListClosedWorkflowExecutionsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClosedWorkflowExecutionsResponse, ListClosedWorkflowExecutionsResponse | _ToProto]

          type array = ::Array[ListClosedWorkflowExecutionsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClosedWorkflowExecutionsResponse | _ToProto]
        end

        class ListWorkflowExecutionsRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          attr_accessor query(): ::String

          def query!: () -> ::String?

          def initialize: (?namespace: ::String, ?page_size: ::Integer, ?next_page_token: ::String, ?query: ::String) -> void

          def []: (:namespace) -> ::String
                | (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (:query) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (:query, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListWorkflowExecutionsRequest
          end

          # The type of `#initialize` parameter.
          type init = ListWorkflowExecutionsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListWorkflowExecutionsRequest, ListWorkflowExecutionsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListWorkflowExecutionsRequest, ListWorkflowExecutionsRequest | _ToProto]

          type array = ::Array[ListWorkflowExecutionsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListWorkflowExecutionsRequest | _ToProto]
        end

        class ListWorkflowExecutionsResponse < ::Protobuf::Message
          attr_accessor executions(): ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array

          def executions=: (::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                         | ...

          def executions!: () -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?executions: ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array, ?next_page_token: ::String) -> void

          def []: (:executions) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                 | (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListWorkflowExecutionsResponse
          end

          # The type of `#initialize` parameter.
          type init = ListWorkflowExecutionsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListWorkflowExecutionsResponse, ListWorkflowExecutionsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListWorkflowExecutionsResponse, ListWorkflowExecutionsResponse | _ToProto]

          type array = ::Array[ListWorkflowExecutionsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListWorkflowExecutionsResponse | _ToProto]
        end

        class ListArchivedWorkflowExecutionsRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          attr_accessor query(): ::String

          def query!: () -> ::String?

          def initialize: (?namespace: ::String, ?page_size: ::Integer, ?next_page_token: ::String, ?query: ::String) -> void

          def []: (:namespace) -> ::String
                | (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (:query) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (:query, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListArchivedWorkflowExecutionsRequest
          end

          # The type of `#initialize` parameter.
          type init = ListArchivedWorkflowExecutionsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListArchivedWorkflowExecutionsRequest, ListArchivedWorkflowExecutionsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListArchivedWorkflowExecutionsRequest, ListArchivedWorkflowExecutionsRequest | _ToProto]

          type array = ::Array[ListArchivedWorkflowExecutionsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListArchivedWorkflowExecutionsRequest | _ToProto]
        end

        class ListArchivedWorkflowExecutionsResponse < ::Protobuf::Message
          attr_accessor executions(): ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array

          def executions=: (::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                         | ...

          def executions!: () -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?executions: ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array, ?next_page_token: ::String) -> void

          def []: (:executions) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                 | (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListArchivedWorkflowExecutionsResponse
          end

          # The type of `#initialize` parameter.
          type init = ListArchivedWorkflowExecutionsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListArchivedWorkflowExecutionsResponse, ListArchivedWorkflowExecutionsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListArchivedWorkflowExecutionsResponse, ListArchivedWorkflowExecutionsResponse | _ToProto]

          type array = ::Array[ListArchivedWorkflowExecutionsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListArchivedWorkflowExecutionsResponse | _ToProto]
        end

        class ScanWorkflowExecutionsRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          attr_accessor query(): ::String

          def query!: () -> ::String?

          def initialize: (?namespace: ::String, ?page_size: ::Integer, ?next_page_token: ::String, ?query: ::String) -> void

          def []: (:namespace) -> ::String
                | (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (:query) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (:query, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ScanWorkflowExecutionsRequest
          end

          # The type of `#initialize` parameter.
          type init = ScanWorkflowExecutionsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ScanWorkflowExecutionsRequest, ScanWorkflowExecutionsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ScanWorkflowExecutionsRequest, ScanWorkflowExecutionsRequest | _ToProto]

          type array = ::Array[ScanWorkflowExecutionsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ScanWorkflowExecutionsRequest | _ToProto]
        end

        class ScanWorkflowExecutionsResponse < ::Protobuf::Message
          attr_accessor executions(): ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array

          def executions=: (::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                         | ...

          def executions!: () -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?executions: ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array, ?next_page_token: ::String) -> void

          def []: (:executions) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::field_array
                 | (:executions, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ScanWorkflowExecutionsResponse
          end

          # The type of `#initialize` parameter.
          type init = ScanWorkflowExecutionsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ScanWorkflowExecutionsResponse, ScanWorkflowExecutionsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ScanWorkflowExecutionsResponse, ScanWorkflowExecutionsResponse | _ToProto]

          type array = ::Array[ScanWorkflowExecutionsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ScanWorkflowExecutionsResponse | _ToProto]
        end

        class CountWorkflowExecutionsRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor query(): ::String

          def query!: () -> ::String?

          def initialize: (?namespace: ::String, ?query: ::String) -> void

          def []: (:namespace) -> ::String
                | (:query) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:query, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CountWorkflowExecutionsRequest
          end

          # The type of `#initialize` parameter.
          type init = CountWorkflowExecutionsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CountWorkflowExecutionsRequest, CountWorkflowExecutionsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CountWorkflowExecutionsRequest, CountWorkflowExecutionsRequest | _ToProto]

          type array = ::Array[CountWorkflowExecutionsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, CountWorkflowExecutionsRequest | _ToProto]
        end

        class CountWorkflowExecutionsResponse < ::Protobuf::Message
          attr_accessor count(): ::Integer

          def count!: () -> ::Integer?

          def initialize: (?count: ::Integer) -> void

          def []: (:count) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:count, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CountWorkflowExecutionsResponse
          end

          # The type of `#initialize` parameter.
          type init = CountWorkflowExecutionsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CountWorkflowExecutionsResponse, CountWorkflowExecutionsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CountWorkflowExecutionsResponse, CountWorkflowExecutionsResponse | _ToProto]

          type array = ::Array[CountWorkflowExecutionsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, CountWorkflowExecutionsResponse | _ToProto]
        end

        class GetSearchAttributesRequest < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> GetSearchAttributesRequest
          end

          # The type of `#initialize` parameter.
          type init = GetSearchAttributesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetSearchAttributesRequest, GetSearchAttributesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetSearchAttributesRequest, GetSearchAttributesRequest | _ToProto]

          type array = ::Array[GetSearchAttributesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetSearchAttributesRequest | _ToProto]
        end

        class GetSearchAttributesResponse < ::Protobuf::Message
          attr_accessor keys(): ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]

          def keys=: (::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                   | ...

          def keys!: () -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          def initialize: (?keys: ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> void

          def []: (:keys) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (::Symbol) -> untyped

          def []=: (:keys, ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:keys, ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> GetSearchAttributesResponse
          end

          # The type of `#initialize` parameter.
          type init = GetSearchAttributesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetSearchAttributesResponse, GetSearchAttributesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetSearchAttributesResponse, GetSearchAttributesResponse | _ToProto]

          type array = ::Array[GetSearchAttributesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetSearchAttributesResponse | _ToProto]
        end

        class RespondQueryTaskCompletedRequest < ::Protobuf::Message
          attr_accessor task_token(): ::String

          def task_token!: () -> ::String?

          attr_accessor completed_type(): ::Temporalio::Api::Enums::V1::QueryResultType

          def completed_type=: (::Temporalio::Api::Enums::V1::QueryResultType::values) -> ::Temporalio::Api::Enums::V1::QueryResultType::values
                             | ...

          def completed_type!: () -> ::Temporalio::Api::Enums::V1::QueryResultType?

          attr_accessor query_result(): ::Temporalio::Api::Common::V1::Payloads?

          def query_result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                           | ...

          def query_result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          attr_accessor error_message(): ::String

          def error_message!: () -> ::String?

          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          def initialize: (?task_token: ::String, ?completed_type: ::Temporalio::Api::Enums::V1::QueryResultType::init, ?query_result: ::Temporalio::Api::Common::V1::Payloads::init?, ?error_message: ::String, ?namespace: ::String) -> void

          def []: (:task_token) -> ::String
                | (:completed_type) -> ::Temporalio::Api::Enums::V1::QueryResultType
                | (:query_result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:error_message) -> ::String
                | (:namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:task_token, ::String) -> ::String
                 | (:completed_type, ::Temporalio::Api::Enums::V1::QueryResultType) -> ::Temporalio::Api::Enums::V1::QueryResultType
                 | (:completed_type, ::Temporalio::Api::Enums::V1::QueryResultType::values) -> ::Temporalio::Api::Enums::V1::QueryResultType::values
                 | (:query_result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:query_result, M?) -> M?
                 | (:error_message, ::String) -> ::String
                 | (:namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RespondQueryTaskCompletedRequest
          end

          # The type of `#initialize` parameter.
          type init = RespondQueryTaskCompletedRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondQueryTaskCompletedRequest, RespondQueryTaskCompletedRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondQueryTaskCompletedRequest, RespondQueryTaskCompletedRequest | _ToProto]

          type array = ::Array[RespondQueryTaskCompletedRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondQueryTaskCompletedRequest | _ToProto]
        end

        class RespondQueryTaskCompletedResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RespondQueryTaskCompletedResponse
          end

          # The type of `#initialize` parameter.
          type init = RespondQueryTaskCompletedResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RespondQueryTaskCompletedResponse, RespondQueryTaskCompletedResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RespondQueryTaskCompletedResponse, RespondQueryTaskCompletedResponse | _ToProto]

          type array = ::Array[RespondQueryTaskCompletedResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RespondQueryTaskCompletedResponse | _ToProto]
        end

        class ResetStickyTaskQueueRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                        | ...

          def execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          def initialize: (?namespace: ::String, ?execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?) -> void

          def []: (:namespace) -> ::String
                | (:execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:execution, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ResetStickyTaskQueueRequest
          end

          # The type of `#initialize` parameter.
          type init = ResetStickyTaskQueueRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ResetStickyTaskQueueRequest, ResetStickyTaskQueueRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ResetStickyTaskQueueRequest, ResetStickyTaskQueueRequest | _ToProto]

          type array = ::Array[ResetStickyTaskQueueRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ResetStickyTaskQueueRequest | _ToProto]
        end

        class ResetStickyTaskQueueResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> ResetStickyTaskQueueResponse
          end

          # The type of `#initialize` parameter.
          type init = ResetStickyTaskQueueResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ResetStickyTaskQueueResponse, ResetStickyTaskQueueResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ResetStickyTaskQueueResponse, ResetStickyTaskQueueResponse | _ToProto]

          type array = ::Array[ResetStickyTaskQueueResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ResetStickyTaskQueueResponse | _ToProto]
        end

        class QueryWorkflowRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                        | ...

          def execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          attr_accessor query(): ::Temporalio::Api::Query::V1::WorkflowQuery?

          def query=: [M < ::Temporalio::Api::Query::V1::WorkflowQuery::_ToProto] (M?) -> M?
                    | ...

          def query!: () -> ::Temporalio::Api::Query::V1::WorkflowQuery?

          # QueryRejectCondition can used to reject the query if workflow state does not satisfy condition.
          #  Default: QUERY_REJECT_CONDITION_NONE.
          #
          attr_accessor query_reject_condition(): ::Temporalio::Api::Enums::V1::QueryRejectCondition

          # QueryRejectCondition can used to reject the query if workflow state does not satisfy condition.
          #  Default: QUERY_REJECT_CONDITION_NONE.
          #
          def query_reject_condition=: (::Temporalio::Api::Enums::V1::QueryRejectCondition::values) -> ::Temporalio::Api::Enums::V1::QueryRejectCondition::values
                                     | ...

          def query_reject_condition!: () -> ::Temporalio::Api::Enums::V1::QueryRejectCondition?

          def initialize: (?namespace: ::String, ?execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?query: ::Temporalio::Api::Query::V1::WorkflowQuery::init?, ?query_reject_condition: ::Temporalio::Api::Enums::V1::QueryRejectCondition::init) -> void

          def []: (:namespace) -> ::String
                | (:execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:query) -> ::Temporalio::Api::Query::V1::WorkflowQuery?
                | (:query_reject_condition) -> ::Temporalio::Api::Enums::V1::QueryRejectCondition
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:execution, M?) -> M?
                 | (:query, ::Temporalio::Api::Query::V1::WorkflowQuery?) -> ::Temporalio::Api::Query::V1::WorkflowQuery?
                 | [M < ::Temporalio::Api::Query::V1::WorkflowQuery::_ToProto] (:query, M?) -> M?
                 | (:query_reject_condition, ::Temporalio::Api::Enums::V1::QueryRejectCondition) -> ::Temporalio::Api::Enums::V1::QueryRejectCondition
                 | (:query_reject_condition, ::Temporalio::Api::Enums::V1::QueryRejectCondition::values) -> ::Temporalio::Api::Enums::V1::QueryRejectCondition::values
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> QueryWorkflowRequest
          end

          # The type of `#initialize` parameter.
          type init = QueryWorkflowRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[QueryWorkflowRequest, QueryWorkflowRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, QueryWorkflowRequest, QueryWorkflowRequest | _ToProto]

          type array = ::Array[QueryWorkflowRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, QueryWorkflowRequest | _ToProto]
        end

        class QueryWorkflowResponse < ::Protobuf::Message
          attr_accessor query_result(): ::Temporalio::Api::Common::V1::Payloads?

          def query_result=: [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (M?) -> M?
                           | ...

          def query_result!: () -> ::Temporalio::Api::Common::V1::Payloads?

          attr_accessor query_rejected(): ::Temporalio::Api::Query::V1::QueryRejected?

          def query_rejected=: [M < ::Temporalio::Api::Query::V1::QueryRejected::_ToProto] (M?) -> M?
                             | ...

          def query_rejected!: () -> ::Temporalio::Api::Query::V1::QueryRejected?

          def initialize: (?query_result: ::Temporalio::Api::Common::V1::Payloads::init?, ?query_rejected: ::Temporalio::Api::Query::V1::QueryRejected::init?) -> void

          def []: (:query_result) -> ::Temporalio::Api::Common::V1::Payloads?
                | (:query_rejected) -> ::Temporalio::Api::Query::V1::QueryRejected?
                | (::Symbol) -> untyped

          def []=: (:query_result, ::Temporalio::Api::Common::V1::Payloads?) -> ::Temporalio::Api::Common::V1::Payloads?
                 | [M < ::Temporalio::Api::Common::V1::Payloads::_ToProto] (:query_result, M?) -> M?
                 | (:query_rejected, ::Temporalio::Api::Query::V1::QueryRejected?) -> ::Temporalio::Api::Query::V1::QueryRejected?
                 | [M < ::Temporalio::Api::Query::V1::QueryRejected::_ToProto] (:query_rejected, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> QueryWorkflowResponse
          end

          # The type of `#initialize` parameter.
          type init = QueryWorkflowResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[QueryWorkflowResponse, QueryWorkflowResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, QueryWorkflowResponse, QueryWorkflowResponse | _ToProto]

          type array = ::Array[QueryWorkflowResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, QueryWorkflowResponse | _ToProto]
        end

        class DescribeWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          def execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                        | ...

          def execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          def initialize: (?namespace: ::String, ?execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?) -> void

          def []: (:namespace) -> ::String
                | (:execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:execution, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = DescribeWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeWorkflowExecutionRequest, DescribeWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeWorkflowExecutionRequest, DescribeWorkflowExecutionRequest | _ToProto]

          type array = ::Array[DescribeWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeWorkflowExecutionRequest | _ToProto]
        end

        class DescribeWorkflowExecutionResponse < ::Protobuf::Message
          attr_accessor execution_config(): ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig?

          def execution_config=: [M < ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig::_ToProto] (M?) -> M?
                               | ...

          def execution_config!: () -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig?

          attr_accessor workflow_execution_info(): ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo?

          def workflow_execution_info=: [M < ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::_ToProto] (M?) -> M?
                                      | ...

          def workflow_execution_info!: () -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo?

          attr_accessor pending_activities(): ::Temporalio::Api::Workflow::V1::PendingActivityInfo::field_array

          def pending_activities=: (::Temporalio::Api::Workflow::V1::PendingActivityInfo::array) -> ::Temporalio::Api::Workflow::V1::PendingActivityInfo::array
                                 | ...

          def pending_activities!: () -> ::Temporalio::Api::Workflow::V1::PendingActivityInfo::field_array?

          attr_accessor pending_children(): ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::field_array

          def pending_children=: (::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::array
                               | ...

          def pending_children!: () -> ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::field_array?

          attr_accessor pending_workflow_task(): ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo?

          def pending_workflow_task=: [M < ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo::_ToProto] (M?) -> M?
                                    | ...

          def pending_workflow_task!: () -> ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo?

          def initialize: (?execution_config: ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig::init?, ?workflow_execution_info: ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::init?, ?pending_activities: ::Temporalio::Api::Workflow::V1::PendingActivityInfo::array, ?pending_children: ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::array, ?pending_workflow_task: ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo::init?) -> void

          def []: (:execution_config) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig?
                | (:workflow_execution_info) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo?
                | (:pending_activities) -> ::Temporalio::Api::Workflow::V1::PendingActivityInfo::field_array
                | (:pending_children) -> ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::field_array
                | (:pending_workflow_task) -> ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo?
                | (::Symbol) -> untyped

          def []=: (:execution_config, ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig?) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig?
                 | [M < ::Temporalio::Api::Workflow::V1::WorkflowExecutionConfig::_ToProto] (:execution_config, M?) -> M?
                 | (:workflow_execution_info, ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo?) -> ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo?
                 | [M < ::Temporalio::Api::Workflow::V1::WorkflowExecutionInfo::_ToProto] (:workflow_execution_info, M?) -> M?
                 | (:pending_activities, ::Temporalio::Api::Workflow::V1::PendingActivityInfo::field_array) -> ::Temporalio::Api::Workflow::V1::PendingActivityInfo::field_array
                 | (:pending_activities, ::Temporalio::Api::Workflow::V1::PendingActivityInfo::array) -> ::Temporalio::Api::Workflow::V1::PendingActivityInfo::array
                 | (:pending_children, ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::field_array) -> ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::field_array
                 | (:pending_children, ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::array) -> ::Temporalio::Api::Workflow::V1::PendingChildExecutionInfo::array
                 | (:pending_workflow_task, ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo?) -> ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo?
                 | [M < ::Temporalio::Api::Workflow::V1::PendingWorkflowTaskInfo::_ToProto] (:pending_workflow_task, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = DescribeWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeWorkflowExecutionResponse, DescribeWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeWorkflowExecutionResponse, DescribeWorkflowExecutionResponse | _ToProto]

          type array = ::Array[DescribeWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeWorkflowExecutionResponse | _ToProto]
        end

        class DescribeTaskQueueRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          attr_accessor task_queue_type(): ::Temporalio::Api::Enums::V1::TaskQueueType

          def task_queue_type=: (::Temporalio::Api::Enums::V1::TaskQueueType::values) -> ::Temporalio::Api::Enums::V1::TaskQueueType::values
                              | ...

          def task_queue_type!: () -> ::Temporalio::Api::Enums::V1::TaskQueueType?

          attr_accessor include_task_queue_status(): bool

          def include_task_queue_status!: () -> bool?

          def initialize: (?namespace: ::String, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?, ?task_queue_type: ::Temporalio::Api::Enums::V1::TaskQueueType::init, ?include_task_queue_status: bool) -> void

          def []: (:namespace) -> ::String
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (:task_queue_type) -> ::Temporalio::Api::Enums::V1::TaskQueueType
                | (:include_task_queue_status) -> bool
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (:task_queue_type, ::Temporalio::Api::Enums::V1::TaskQueueType) -> ::Temporalio::Api::Enums::V1::TaskQueueType
                 | (:task_queue_type, ::Temporalio::Api::Enums::V1::TaskQueueType::values) -> ::Temporalio::Api::Enums::V1::TaskQueueType::values
                 | (:include_task_queue_status, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def include_task_queue_status?: () -> bool

          interface _ToProto
            def to_proto: () -> DescribeTaskQueueRequest
          end

          # The type of `#initialize` parameter.
          type init = DescribeTaskQueueRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeTaskQueueRequest, DescribeTaskQueueRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeTaskQueueRequest, DescribeTaskQueueRequest | _ToProto]

          type array = ::Array[DescribeTaskQueueRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeTaskQueueRequest | _ToProto]
        end

        class DescribeTaskQueueResponse < ::Protobuf::Message
          attr_accessor pollers(): ::Temporalio::Api::TaskQueue::V1::PollerInfo::field_array

          def pollers=: (::Temporalio::Api::TaskQueue::V1::PollerInfo::array) -> ::Temporalio::Api::TaskQueue::V1::PollerInfo::array
                      | ...

          def pollers!: () -> ::Temporalio::Api::TaskQueue::V1::PollerInfo::field_array?

          attr_accessor task_queue_status(): ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus?

          def task_queue_status=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus::_ToProto] (M?) -> M?
                                | ...

          def task_queue_status!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus?

          def initialize: (?pollers: ::Temporalio::Api::TaskQueue::V1::PollerInfo::array, ?task_queue_status: ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus::init?) -> void

          def []: (:pollers) -> ::Temporalio::Api::TaskQueue::V1::PollerInfo::field_array
                | (:task_queue_status) -> ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus?
                | (::Symbol) -> untyped

          def []=: (:pollers, ::Temporalio::Api::TaskQueue::V1::PollerInfo::field_array) -> ::Temporalio::Api::TaskQueue::V1::PollerInfo::field_array
                 | (:pollers, ::Temporalio::Api::TaskQueue::V1::PollerInfo::array) -> ::Temporalio::Api::TaskQueue::V1::PollerInfo::array
                 | (:task_queue_status, ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueueStatus::_ToProto] (:task_queue_status, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeTaskQueueResponse
          end

          # The type of `#initialize` parameter.
          type init = DescribeTaskQueueResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeTaskQueueResponse, DescribeTaskQueueResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeTaskQueueResponse, DescribeTaskQueueResponse | _ToProto]

          type array = ::Array[DescribeTaskQueueResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeTaskQueueResponse | _ToProto]
        end

        class GetClusterInfoRequest < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> GetClusterInfoRequest
          end

          # The type of `#initialize` parameter.
          type init = GetClusterInfoRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetClusterInfoRequest, GetClusterInfoRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetClusterInfoRequest, GetClusterInfoRequest | _ToProto]

          type array = ::Array[GetClusterInfoRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetClusterInfoRequest | _ToProto]
        end

        # GetClusterInfoResponse contains information about Temporal cluster.
        #
        class GetClusterInfoResponse < ::Protobuf::Message
          # Key is client name i.e "temporal-go", "temporal-java", or "temporal-cli".
          #  Value is ranges of supported versions of this client i.e ">1.1.1 <=1.4.0 || ^5.0.0".
          #
          attr_accessor supported_clients(): ::Protobuf::field_hash[::String, ::String]

          # Key is client name i.e "temporal-go", "temporal-java", or "temporal-cli".
          #  Value is ranges of supported versions of this client i.e ">1.1.1 <=1.4.0 || ^5.0.0".
          #
          def supported_clients=: (::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                                | ...

          def supported_clients!: () -> ::Protobuf::field_hash[::String, ::String]?

          attr_accessor server_version(): ::String

          def server_version!: () -> ::String?

          attr_accessor cluster_id(): ::String

          def cluster_id!: () -> ::String?

          attr_accessor version_info(): ::Temporalio::Api::Version::V1::VersionInfo?

          def version_info=: [M < ::Temporalio::Api::Version::V1::VersionInfo::_ToProto] (M?) -> M?
                           | ...

          def version_info!: () -> ::Temporalio::Api::Version::V1::VersionInfo?

          attr_accessor cluster_name(): ::String

          def cluster_name!: () -> ::String?

          attr_accessor history_shard_count(): ::Integer

          def history_shard_count!: () -> ::Integer?

          attr_accessor persistence_store(): ::String

          def persistence_store!: () -> ::String?

          attr_accessor visibility_store(): ::String

          def visibility_store!: () -> ::String?

          def initialize: (?supported_clients: ::Hash[::String, ::String], ?server_version: ::String, ?cluster_id: ::String, ?version_info: ::Temporalio::Api::Version::V1::VersionInfo::init?, ?cluster_name: ::String, ?history_shard_count: ::Integer, ?persistence_store: ::String, ?visibility_store: ::String) -> void

          def []: (:supported_clients) -> ::Protobuf::field_hash[::String, ::String]
                | (:server_version) -> ::String
                | (:cluster_id) -> ::String
                | (:version_info) -> ::Temporalio::Api::Version::V1::VersionInfo?
                | (:cluster_name) -> ::String
                | (:history_shard_count) -> ::Integer
                | (:persistence_store) -> ::String
                | (:visibility_store) -> ::String
                | (::Symbol) -> untyped

          def []=: (:supported_clients, ::Protobuf::field_hash[::String, ::String]) -> ::Protobuf::field_hash[::String, ::String]
                 | (:supported_clients, ::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                 | (:server_version, ::String) -> ::String
                 | (:cluster_id, ::String) -> ::String
                 | (:version_info, ::Temporalio::Api::Version::V1::VersionInfo?) -> ::Temporalio::Api::Version::V1::VersionInfo?
                 | [M < ::Temporalio::Api::Version::V1::VersionInfo::_ToProto] (:version_info, M?) -> M?
                 | (:cluster_name, ::String) -> ::String
                 | (:history_shard_count, ::Integer) -> ::Integer
                 | (:persistence_store, ::String) -> ::String
                 | (:visibility_store, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> GetClusterInfoResponse
          end

          # The type of `#initialize` parameter.
          type init = GetClusterInfoResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetClusterInfoResponse, GetClusterInfoResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetClusterInfoResponse, GetClusterInfoResponse | _ToProto]

          type array = ::Array[GetClusterInfoResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetClusterInfoResponse | _ToProto]
        end

        class GetSystemInfoRequest < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> GetSystemInfoRequest
          end

          # The type of `#initialize` parameter.
          type init = GetSystemInfoRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetSystemInfoRequest, GetSystemInfoRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetSystemInfoRequest, GetSystemInfoRequest | _ToProto]

          type array = ::Array[GetSystemInfoRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetSystemInfoRequest | _ToProto]
        end

        class GetSystemInfoResponse < ::Protobuf::Message
          # System capability details.
          #
          class Capabilities < ::Protobuf::Message
            # True if signal and query headers are supported.
            #
            attr_accessor signal_and_query_header(): bool

            def signal_and_query_header!: () -> bool?

            # True if internal errors are differentiated from other types of errors for purposes of
            #  retrying non-internal errors.
            #
            #  When unset/false, clients retry all failures. When true, clients should only retry
            #  non-internal errors.
            #
            attr_accessor internal_error_differentiation(): bool

            def internal_error_differentiation!: () -> bool?

            # True if RespondActivityTaskFailed API supports including heartbeat details
            #
            attr_accessor activity_failure_include_heartbeat(): bool

            def activity_failure_include_heartbeat!: () -> bool?

            # Supports scheduled workflow features.
            #
            attr_accessor supports_schedules(): bool

            def supports_schedules!: () -> bool?

            # True if server uses protos that include temporal.api.failure.v1.Failure.encoded_attributes
            #
            attr_accessor encoded_failure_attributes(): bool

            def encoded_failure_attributes!: () -> bool?

            # True if server supports dispatching Workflow and Activity tasks based on a worker's build_id
            #  (see:
            #  https://github.com/temporalio/proposals/blob/a123af3b559f43db16ea6dd31870bfb754c4dc5e/versioning/worker-versions.md)
            #
            attr_accessor build_id_based_versioning(): bool

            def build_id_based_versioning!: () -> bool?

            # True if server supports upserting workflow memo
            #
            attr_accessor upsert_memo(): bool

            def upsert_memo!: () -> bool?

            def initialize: (?signal_and_query_header: bool, ?internal_error_differentiation: bool, ?activity_failure_include_heartbeat: bool, ?supports_schedules: bool, ?encoded_failure_attributes: bool, ?build_id_based_versioning: bool, ?upsert_memo: bool) -> void

            def []: (:signal_and_query_header) -> bool
                  | (:internal_error_differentiation) -> bool
                  | (:activity_failure_include_heartbeat) -> bool
                  | (:supports_schedules) -> bool
                  | (:encoded_failure_attributes) -> bool
                  | (:build_id_based_versioning) -> bool
                  | (:upsert_memo) -> bool
                  | (::Symbol) -> untyped

            def []=: (:signal_and_query_header, bool) -> bool
                   | (:internal_error_differentiation, bool) -> bool
                   | (:activity_failure_include_heartbeat, bool) -> bool
                   | (:supports_schedules, bool) -> bool
                   | (:encoded_failure_attributes, bool) -> bool
                   | (:build_id_based_versioning, bool) -> bool
                   | (:upsert_memo, bool) -> bool
                   | (::Symbol, untyped) -> untyped

            def signal_and_query_header?: () -> bool

            def internal_error_differentiation?: () -> bool

            def activity_failure_include_heartbeat?: () -> bool

            def supports_schedules?: () -> bool

            def encoded_failure_attributes?: () -> bool

            def build_id_based_versioning?: () -> bool

            def upsert_memo?: () -> bool

            interface _ToProto
              def to_proto: () -> Capabilities
            end

            # The type of `#initialize` parameter.
            type init = Capabilities | _ToProto

            # The type of `repeated` field.
            type field_array = ::Protobuf::Field::FieldArray[Capabilities, Capabilities | _ToProto]

            # The type of `map` field.
            type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, Capabilities, Capabilities | _ToProto]

            type array = ::Array[Capabilities | _ToProto]

            type hash[KEY] = ::Hash[KEY, Capabilities | _ToProto]
          end

          # Version of the server.
          #
          attr_accessor server_version(): ::String

          def server_version!: () -> ::String?

          # All capabilities the system supports.
          #
          attr_accessor capabilities(): ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities?

          # All capabilities the system supports.
          #
          def capabilities=: [M < ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities::_ToProto] (M?) -> M?
                           | ...

          def capabilities!: () -> ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities?

          def initialize: (?server_version: ::String, ?capabilities: ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities::init?) -> void

          def []: (:server_version) -> ::String
                | (:capabilities) -> ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities?
                | (::Symbol) -> untyped

          def []=: (:server_version, ::String) -> ::String
                 | (:capabilities, ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities?) -> ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities?
                 | [M < ::Temporalio::Api::WorkflowService::V1::GetSystemInfoResponse::Capabilities::_ToProto] (:capabilities, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> GetSystemInfoResponse
          end

          # The type of `#initialize` parameter.
          type init = GetSystemInfoResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetSystemInfoResponse, GetSystemInfoResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetSystemInfoResponse, GetSystemInfoResponse | _ToProto]

          type array = ::Array[GetSystemInfoResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetSystemInfoResponse | _ToProto]
        end

        class ListTaskQueuePartitionsRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          attr_accessor task_queue(): ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def task_queue=: [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (M?) -> M?
                         | ...

          def task_queue!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?

          def initialize: (?namespace: ::String, ?task_queue: ::Temporalio::Api::TaskQueue::V1::TaskQueue::init?) -> void

          def []: (:namespace) -> ::String
                | (:task_queue) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:task_queue, ::Temporalio::Api::TaskQueue::V1::TaskQueue?) -> ::Temporalio::Api::TaskQueue::V1::TaskQueue?
                 | [M < ::Temporalio::Api::TaskQueue::V1::TaskQueue::_ToProto] (:task_queue, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListTaskQueuePartitionsRequest
          end

          # The type of `#initialize` parameter.
          type init = ListTaskQueuePartitionsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListTaskQueuePartitionsRequest, ListTaskQueuePartitionsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListTaskQueuePartitionsRequest, ListTaskQueuePartitionsRequest | _ToProto]

          type array = ::Array[ListTaskQueuePartitionsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListTaskQueuePartitionsRequest | _ToProto]
        end

        class ListTaskQueuePartitionsResponse < ::Protobuf::Message
          attr_accessor activity_task_queue_partitions(): ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array

          def activity_task_queue_partitions=: (::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array
                                             | ...

          def activity_task_queue_partitions!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array?

          attr_accessor workflow_task_queue_partitions(): ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array

          def workflow_task_queue_partitions=: (::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array
                                             | ...

          def workflow_task_queue_partitions!: () -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array?

          def initialize: (?activity_task_queue_partitions: ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array, ?workflow_task_queue_partitions: ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array) -> void

          def []: (:activity_task_queue_partitions) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array
                | (:workflow_task_queue_partitions) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array
                | (::Symbol) -> untyped

          def []=: (:activity_task_queue_partitions, ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array
                 | (:activity_task_queue_partitions, ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array
                 | (:workflow_task_queue_partitions, ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::field_array
                 | (:workflow_task_queue_partitions, ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array) -> ::Temporalio::Api::TaskQueue::V1::TaskQueuePartitionMetadata::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListTaskQueuePartitionsResponse
          end

          # The type of `#initialize` parameter.
          type init = ListTaskQueuePartitionsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListTaskQueuePartitionsResponse, ListTaskQueuePartitionsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListTaskQueuePartitionsResponse, ListTaskQueuePartitionsResponse | _ToProto]

          type array = ::Array[ListTaskQueuePartitionsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListTaskQueuePartitionsResponse | _ToProto]
        end

        # (-- api-linter: core::0133::request-parent-required=disabled
        #      aip.dev/not-precedent: CreateSchedule doesn't follow Google API format --)
        #  (-- api-linter: core::0133::request-unknown-fields=disabled
        #      aip.dev/not-precedent: CreateSchedule doesn't follow Google API format --)
        #  (-- api-linter: core::0133::request-resource-behavior=disabled
        #      aip.dev/not-precedent: field_behavior annotation not available in our gogo fork --)
        #  (-- api-linter: core::0203::optional=disabled
        #      aip.dev/not-precedent: field_behavior annotation not available in our gogo fork --)
        #
        class CreateScheduleRequest < ::Protobuf::Message
          # The namespace the schedule should be created in.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # The id of the new schedule.
          #
          attr_accessor schedule_id(): ::String

          def schedule_id!: () -> ::String?

          # The schedule spec, policies, action, and initial state.
          #
          attr_accessor schedule(): ::Temporalio::Api::Schedule::V1::Schedule?

          # The schedule spec, policies, action, and initial state.
          #
          def schedule=: [M < ::Temporalio::Api::Schedule::V1::Schedule::_ToProto] (M?) -> M?
                       | ...

          def schedule!: () -> ::Temporalio::Api::Schedule::V1::Schedule?

          # Optional initial patch (e.g. to run the action once immediately).
          #
          attr_accessor initial_patch(): ::Temporalio::Api::Schedule::V1::SchedulePatch?

          # Optional initial patch (e.g. to run the action once immediately).
          #
          def initial_patch=: [M < ::Temporalio::Api::Schedule::V1::SchedulePatch::_ToProto] (M?) -> M?
                            | ...

          def initial_patch!: () -> ::Temporalio::Api::Schedule::V1::SchedulePatch?

          # The identity of the client who initiated this request.
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # A unique identifier for this create request for idempotence. Typically UUIDv4.
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # Memo and search attributes to attach to the schedule itself.
          #
          attr_accessor memo(): ::Temporalio::Api::Common::V1::Memo?

          # Memo and search attributes to attach to the schedule itself.
          #
          def memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          def initialize: (?namespace: ::String, ?schedule_id: ::String, ?schedule: ::Temporalio::Api::Schedule::V1::Schedule::init?, ?initial_patch: ::Temporalio::Api::Schedule::V1::SchedulePatch::init?, ?identity: ::String, ?request_id: ::String, ?memo: ::Temporalio::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?) -> void

          def []: (:namespace) -> ::String
                | (:schedule_id) -> ::String
                | (:schedule) -> ::Temporalio::Api::Schedule::V1::Schedule?
                | (:initial_patch) -> ::Temporalio::Api::Schedule::V1::SchedulePatch?
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (:memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:schedule_id, ::String) -> ::String
                 | (:schedule, ::Temporalio::Api::Schedule::V1::Schedule?) -> ::Temporalio::Api::Schedule::V1::Schedule?
                 | [M < ::Temporalio::Api::Schedule::V1::Schedule::_ToProto] (:schedule, M?) -> M?
                 | (:initial_patch, ::Temporalio::Api::Schedule::V1::SchedulePatch?) -> ::Temporalio::Api::Schedule::V1::SchedulePatch?
                 | [M < ::Temporalio::Api::Schedule::V1::SchedulePatch::_ToProto] (:initial_patch, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (:memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CreateScheduleRequest
          end

          # The type of `#initialize` parameter.
          type init = CreateScheduleRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CreateScheduleRequest, CreateScheduleRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CreateScheduleRequest, CreateScheduleRequest | _ToProto]

          type array = ::Array[CreateScheduleRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, CreateScheduleRequest | _ToProto]
        end

        class CreateScheduleResponse < ::Protobuf::Message
          attr_accessor conflict_token(): ::String

          def conflict_token!: () -> ::String?

          def initialize: (?conflict_token: ::String) -> void

          def []: (:conflict_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:conflict_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> CreateScheduleResponse
          end

          # The type of `#initialize` parameter.
          type init = CreateScheduleResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[CreateScheduleResponse, CreateScheduleResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, CreateScheduleResponse, CreateScheduleResponse | _ToProto]

          type array = ::Array[CreateScheduleResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, CreateScheduleResponse | _ToProto]
        end

        class DescribeScheduleRequest < ::Protobuf::Message
          # The namespace of the schedule to describe.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # The id of the schedule to describe.
          #
          attr_accessor schedule_id(): ::String

          def schedule_id!: () -> ::String?

          def initialize: (?namespace: ::String, ?schedule_id: ::String) -> void

          def []: (:namespace) -> ::String
                | (:schedule_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:schedule_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeScheduleRequest
          end

          # The type of `#initialize` parameter.
          type init = DescribeScheduleRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeScheduleRequest, DescribeScheduleRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeScheduleRequest, DescribeScheduleRequest | _ToProto]

          type array = ::Array[DescribeScheduleRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeScheduleRequest | _ToProto]
        end

        class DescribeScheduleResponse < ::Protobuf::Message
          # The complete current schedule details. This may not match the schedule as
          #  created because:
          #  - some types of schedule specs may get compiled into others (e.g.
          #    CronString into StructuredCalendarSpec)
          #  - some unspecified fields may be replaced by defaults
          #  - some fields in the state are modified automatically
          #  - the schedule may have been modified by UpdateSchedule or PatchSchedule
          #
          attr_accessor schedule(): ::Temporalio::Api::Schedule::V1::Schedule?

          # The complete current schedule details. This may not match the schedule as
          #  created because:
          #  - some types of schedule specs may get compiled into others (e.g.
          #    CronString into StructuredCalendarSpec)
          #  - some unspecified fields may be replaced by defaults
          #  - some fields in the state are modified automatically
          #  - the schedule may have been modified by UpdateSchedule or PatchSchedule
          #
          def schedule=: [M < ::Temporalio::Api::Schedule::V1::Schedule::_ToProto] (M?) -> M?
                       | ...

          def schedule!: () -> ::Temporalio::Api::Schedule::V1::Schedule?

          # Extra schedule state info.
          #
          attr_accessor info(): ::Temporalio::Api::Schedule::V1::ScheduleInfo?

          # Extra schedule state info.
          #
          def info=: [M < ::Temporalio::Api::Schedule::V1::ScheduleInfo::_ToProto] (M?) -> M?
                   | ...

          def info!: () -> ::Temporalio::Api::Schedule::V1::ScheduleInfo?

          # The memo and search attributes that the schedule was created with.
          #
          attr_accessor memo(): ::Temporalio::Api::Common::V1::Memo?

          # The memo and search attributes that the schedule was created with.
          #
          def memo=: [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (M?) -> M?
                   | ...

          def memo!: () -> ::Temporalio::Api::Common::V1::Memo?

          attr_accessor search_attributes(): ::Temporalio::Api::Common::V1::SearchAttributes?

          def search_attributes=: [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (M?) -> M?
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Common::V1::SearchAttributes?

          # This value can be passed back to UpdateSchedule to ensure that the
          #  schedule was not modified between a Describe and an Update, which could
          #  lead to lost updates and other confusion.
          #
          attr_accessor conflict_token(): ::String

          def conflict_token!: () -> ::String?

          def initialize: (?schedule: ::Temporalio::Api::Schedule::V1::Schedule::init?, ?info: ::Temporalio::Api::Schedule::V1::ScheduleInfo::init?, ?memo: ::Temporalio::Api::Common::V1::Memo::init?, ?search_attributes: ::Temporalio::Api::Common::V1::SearchAttributes::init?, ?conflict_token: ::String) -> void

          def []: (:schedule) -> ::Temporalio::Api::Schedule::V1::Schedule?
                | (:info) -> ::Temporalio::Api::Schedule::V1::ScheduleInfo?
                | (:memo) -> ::Temporalio::Api::Common::V1::Memo?
                | (:search_attributes) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                | (:conflict_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:schedule, ::Temporalio::Api::Schedule::V1::Schedule?) -> ::Temporalio::Api::Schedule::V1::Schedule?
                 | [M < ::Temporalio::Api::Schedule::V1::Schedule::_ToProto] (:schedule, M?) -> M?
                 | (:info, ::Temporalio::Api::Schedule::V1::ScheduleInfo?) -> ::Temporalio::Api::Schedule::V1::ScheduleInfo?
                 | [M < ::Temporalio::Api::Schedule::V1::ScheduleInfo::_ToProto] (:info, M?) -> M?
                 | (:memo, ::Temporalio::Api::Common::V1::Memo?) -> ::Temporalio::Api::Common::V1::Memo?
                 | [M < ::Temporalio::Api::Common::V1::Memo::_ToProto] (:memo, M?) -> M?
                 | (:search_attributes, ::Temporalio::Api::Common::V1::SearchAttributes?) -> ::Temporalio::Api::Common::V1::SearchAttributes?
                 | [M < ::Temporalio::Api::Common::V1::SearchAttributes::_ToProto] (:search_attributes, M?) -> M?
                 | (:conflict_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeScheduleResponse
          end

          # The type of `#initialize` parameter.
          type init = DescribeScheduleResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeScheduleResponse, DescribeScheduleResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeScheduleResponse, DescribeScheduleResponse | _ToProto]

          type array = ::Array[DescribeScheduleResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeScheduleResponse | _ToProto]
        end

        # (-- api-linter: core::0134::request-mask-required=disabled
        #      aip.dev/not-precedent: UpdateSchedule doesn't follow Google API format --)
        #
        class UpdateScheduleRequest < ::Protobuf::Message
          # The namespace of the schedule to update.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # The id of the schedule to update.
          #
          attr_accessor schedule_id(): ::String

          def schedule_id!: () -> ::String?

          # The new schedule. The four main fields of the schedule (spec, action,
          #  policies, state) are replaced completely by the values in this message.
          #
          attr_accessor schedule(): ::Temporalio::Api::Schedule::V1::Schedule?

          # The new schedule. The four main fields of the schedule (spec, action,
          #  policies, state) are replaced completely by the values in this message.
          #
          def schedule=: [M < ::Temporalio::Api::Schedule::V1::Schedule::_ToProto] (M?) -> M?
                       | ...

          def schedule!: () -> ::Temporalio::Api::Schedule::V1::Schedule?

          # This can be the value of conflict_token from a DescribeScheduleResponse,
          #  which will cause this request to fail if the schedule has been modified
          #  between the Describe and this Update.
          #  If missing, the schedule will be updated unconditionally.
          #
          attr_accessor conflict_token(): ::String

          def conflict_token!: () -> ::String?

          # The identity of the client who initiated this request.
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # A unique identifier for this update request for idempotence. Typically UUIDv4.
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          def initialize: (?namespace: ::String, ?schedule_id: ::String, ?schedule: ::Temporalio::Api::Schedule::V1::Schedule::init?, ?conflict_token: ::String, ?identity: ::String, ?request_id: ::String) -> void

          def []: (:namespace) -> ::String
                | (:schedule_id) -> ::String
                | (:schedule) -> ::Temporalio::Api::Schedule::V1::Schedule?
                | (:conflict_token) -> ::String
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:schedule_id, ::String) -> ::String
                 | (:schedule, ::Temporalio::Api::Schedule::V1::Schedule?) -> ::Temporalio::Api::Schedule::V1::Schedule?
                 | [M < ::Temporalio::Api::Schedule::V1::Schedule::_ToProto] (:schedule, M?) -> M?
                 | (:conflict_token, ::String) -> ::String
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> UpdateScheduleRequest
          end

          # The type of `#initialize` parameter.
          type init = UpdateScheduleRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateScheduleRequest, UpdateScheduleRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateScheduleRequest, UpdateScheduleRequest | _ToProto]

          type array = ::Array[UpdateScheduleRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateScheduleRequest | _ToProto]
        end

        class UpdateScheduleResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> UpdateScheduleResponse
          end

          # The type of `#initialize` parameter.
          type init = UpdateScheduleResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateScheduleResponse, UpdateScheduleResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateScheduleResponse, UpdateScheduleResponse | _ToProto]

          type array = ::Array[UpdateScheduleResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateScheduleResponse | _ToProto]
        end

        class PatchScheduleRequest < ::Protobuf::Message
          # The namespace of the schedule to patch.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # The id of the schedule to patch.
          #
          attr_accessor schedule_id(): ::String

          def schedule_id!: () -> ::String?

          attr_accessor patch(): ::Temporalio::Api::Schedule::V1::SchedulePatch?

          def patch=: [M < ::Temporalio::Api::Schedule::V1::SchedulePatch::_ToProto] (M?) -> M?
                    | ...

          def patch!: () -> ::Temporalio::Api::Schedule::V1::SchedulePatch?

          # The identity of the client who initiated this request.
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # A unique identifier for this update request for idempotence. Typically UUIDv4.
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          def initialize: (?namespace: ::String, ?schedule_id: ::String, ?patch: ::Temporalio::Api::Schedule::V1::SchedulePatch::init?, ?identity: ::String, ?request_id: ::String) -> void

          def []: (:namespace) -> ::String
                | (:schedule_id) -> ::String
                | (:patch) -> ::Temporalio::Api::Schedule::V1::SchedulePatch?
                | (:identity) -> ::String
                | (:request_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:schedule_id, ::String) -> ::String
                 | (:patch, ::Temporalio::Api::Schedule::V1::SchedulePatch?) -> ::Temporalio::Api::Schedule::V1::SchedulePatch?
                 | [M < ::Temporalio::Api::Schedule::V1::SchedulePatch::_ToProto] (:patch, M?) -> M?
                 | (:identity, ::String) -> ::String
                 | (:request_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> PatchScheduleRequest
          end

          # The type of `#initialize` parameter.
          type init = PatchScheduleRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[PatchScheduleRequest, PatchScheduleRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, PatchScheduleRequest, PatchScheduleRequest | _ToProto]

          type array = ::Array[PatchScheduleRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, PatchScheduleRequest | _ToProto]
        end

        class PatchScheduleResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> PatchScheduleResponse
          end

          # The type of `#initialize` parameter.
          type init = PatchScheduleResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[PatchScheduleResponse, PatchScheduleResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, PatchScheduleResponse, PatchScheduleResponse | _ToProto]

          type array = ::Array[PatchScheduleResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, PatchScheduleResponse | _ToProto]
        end

        class ListScheduleMatchingTimesRequest < ::Protobuf::Message
          # The namespace of the schedule to query.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # The id of the schedule to query.
          #
          attr_accessor schedule_id(): ::String

          def schedule_id!: () -> ::String?

          # Time range to query.
          #
          attr_accessor start_time(): ::Google::Protobuf::Timestamp?

          # Time range to query.
          #
          def start_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                         | ...

          def start_time!: () -> ::Google::Protobuf::Timestamp?

          attr_accessor end_time(): ::Google::Protobuf::Timestamp?

          def end_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                       | ...

          def end_time!: () -> ::Google::Protobuf::Timestamp?

          def initialize: (?namespace: ::String, ?schedule_id: ::String, ?start_time: ::Google::Protobuf::Timestamp::init?, ?end_time: ::Google::Protobuf::Timestamp::init?) -> void

          def []: (:namespace) -> ::String
                | (:schedule_id) -> ::String
                | (:start_time) -> ::Google::Protobuf::Timestamp?
                | (:end_time) -> ::Google::Protobuf::Timestamp?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:schedule_id, ::String) -> ::String
                 | (:start_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:start_time, M?) -> M?
                 | (:end_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:end_time, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListScheduleMatchingTimesRequest
          end

          # The type of `#initialize` parameter.
          type init = ListScheduleMatchingTimesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListScheduleMatchingTimesRequest, ListScheduleMatchingTimesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListScheduleMatchingTimesRequest, ListScheduleMatchingTimesRequest | _ToProto]

          type array = ::Array[ListScheduleMatchingTimesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListScheduleMatchingTimesRequest | _ToProto]
        end

        class ListScheduleMatchingTimesResponse < ::Protobuf::Message
          attr_accessor start_time(): ::Google::Protobuf::Timestamp::field_array

          def start_time=: (::Google::Protobuf::Timestamp::array) -> ::Google::Protobuf::Timestamp::array
                         | ...

          def start_time!: () -> ::Google::Protobuf::Timestamp::field_array?

          def initialize: (?start_time: ::Google::Protobuf::Timestamp::array) -> void

          def []: (:start_time) -> ::Google::Protobuf::Timestamp::field_array
                | (::Symbol) -> untyped

          def []=: (:start_time, ::Google::Protobuf::Timestamp::field_array) -> ::Google::Protobuf::Timestamp::field_array
                 | (:start_time, ::Google::Protobuf::Timestamp::array) -> ::Google::Protobuf::Timestamp::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListScheduleMatchingTimesResponse
          end

          # The type of `#initialize` parameter.
          type init = ListScheduleMatchingTimesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListScheduleMatchingTimesResponse, ListScheduleMatchingTimesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListScheduleMatchingTimesResponse, ListScheduleMatchingTimesResponse | _ToProto]

          type array = ::Array[ListScheduleMatchingTimesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListScheduleMatchingTimesResponse | _ToProto]
        end

        # (-- api-linter: core::0135::request-name-required=disabled
        #      aip.dev/not-precedent: DeleteSchedule doesn't follow Google API format --)
        #  (-- api-linter: core::0135::request-unknown-fields=disabled
        #      aip.dev/not-precedent: DeleteSchedule doesn't follow Google API format --)
        #
        class DeleteScheduleRequest < ::Protobuf::Message
          # The namespace of the schedule to delete.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # The id of the schedule to delete.
          #
          attr_accessor schedule_id(): ::String

          def schedule_id!: () -> ::String?

          # The identity of the client who initiated this request.
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?namespace: ::String, ?schedule_id: ::String, ?identity: ::String) -> void

          def []: (:namespace) -> ::String
                | (:schedule_id) -> ::String
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:schedule_id, ::String) -> ::String
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeleteScheduleRequest
          end

          # The type of `#initialize` parameter.
          type init = DeleteScheduleRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteScheduleRequest, DeleteScheduleRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteScheduleRequest, DeleteScheduleRequest | _ToProto]

          type array = ::Array[DeleteScheduleRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteScheduleRequest | _ToProto]
        end

        class DeleteScheduleResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> DeleteScheduleResponse
          end

          # The type of `#initialize` parameter.
          type init = DeleteScheduleResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteScheduleResponse, DeleteScheduleResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteScheduleResponse, DeleteScheduleResponse | _ToProto]

          type array = ::Array[DeleteScheduleResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteScheduleResponse | _ToProto]
        end

        class ListSchedulesRequest < ::Protobuf::Message
          # The namespace to list schedules in.
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # How many to return at once.
          #
          attr_accessor maximum_page_size(): ::Integer

          def maximum_page_size!: () -> ::Integer?

          # Token to get the next page of results.
          #
          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?namespace: ::String, ?maximum_page_size: ::Integer, ?next_page_token: ::String) -> void

          def []: (:namespace) -> ::String
                | (:maximum_page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:maximum_page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListSchedulesRequest
          end

          # The type of `#initialize` parameter.
          type init = ListSchedulesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListSchedulesRequest, ListSchedulesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListSchedulesRequest, ListSchedulesRequest | _ToProto]

          type array = ::Array[ListSchedulesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListSchedulesRequest | _ToProto]
        end

        class ListSchedulesResponse < ::Protobuf::Message
          attr_accessor schedules(): ::Temporalio::Api::Schedule::V1::ScheduleListEntry::field_array

          def schedules=: (::Temporalio::Api::Schedule::V1::ScheduleListEntry::array) -> ::Temporalio::Api::Schedule::V1::ScheduleListEntry::array
                        | ...

          def schedules!: () -> ::Temporalio::Api::Schedule::V1::ScheduleListEntry::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?schedules: ::Temporalio::Api::Schedule::V1::ScheduleListEntry::array, ?next_page_token: ::String) -> void

          def []: (:schedules) -> ::Temporalio::Api::Schedule::V1::ScheduleListEntry::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:schedules, ::Temporalio::Api::Schedule::V1::ScheduleListEntry::field_array) -> ::Temporalio::Api::Schedule::V1::ScheduleListEntry::field_array
                 | (:schedules, ::Temporalio::Api::Schedule::V1::ScheduleListEntry::array) -> ::Temporalio::Api::Schedule::V1::ScheduleListEntry::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListSchedulesResponse
          end

          # The type of `#initialize` parameter.
          type init = ListSchedulesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListSchedulesResponse, ListSchedulesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListSchedulesResponse, ListSchedulesResponse | _ToProto]

          type array = ::Array[ListSchedulesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListSchedulesResponse | _ToProto]
        end

        # (-- api-linter: core::0134::request-mask-required=disabled
        #      aip.dev/not-precedent: UpdateWorkerBuildIdOrderingRequest doesn't follow Google API format --)
        #  (-- api-linter: core::0134::request-resource-required=disabled
        #      aip.dev/not-precedent: UpdateWorkerBuildIdOrderingRequest RPC doesn't follow Google API format. --)
        #
        class UpdateWorkerBuildIdOrderingRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Must be set, the task queue to apply changes to. Because all workers on
          #  a given task queue must have the same set of workflow & activity
          #  implementations, there is no reason to specify a task queue type here.
          #
          attr_accessor task_queue(): ::String

          def task_queue!: () -> ::String?

          # The version id we are targeting.
          #
          attr_accessor version_id(): ::Temporalio::Api::TaskQueue::V1::VersionId?

          # The version id we are targeting.
          #
          def version_id=: [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (M?) -> M?
                         | ...

          def version_id!: () -> ::Temporalio::Api::TaskQueue::V1::VersionId?

          # When set, indicates that the `version_id` in this message is compatible
          #  with the one specified in this field. Because compatability should form
          #  a DAG, any build id can only be the "next compatible" version for one
          #  other ID of a certain type at a time, and any setting which would create a cycle is invalid.
          #
          attr_accessor previous_compatible(): ::Temporalio::Api::TaskQueue::V1::VersionId?

          # When set, indicates that the `version_id` in this message is compatible
          #  with the one specified in this field. Because compatability should form
          #  a DAG, any build id can only be the "next compatible" version for one
          #  other ID of a certain type at a time, and any setting which would create a cycle is invalid.
          #
          def previous_compatible=: [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (M?) -> M?
                                  | ...

          def previous_compatible!: () -> ::Temporalio::Api::TaskQueue::V1::VersionId?

          # When set, establishes the specified `version_id` as the default of it's type
          #  for the queue. Workers matching it will begin processing new workflow executions.
          #  The existing default will be marked as a previous incompatible version
          #  to this one, assuming it is not also in `is_compatible_with`.
          #
          attr_accessor become_default(): bool

          def become_default!: () -> bool?

          def initialize: (?namespace: ::String, ?task_queue: ::String, ?version_id: ::Temporalio::Api::TaskQueue::V1::VersionId::init?, ?previous_compatible: ::Temporalio::Api::TaskQueue::V1::VersionId::init?, ?become_default: bool) -> void

          def []: (:namespace) -> ::String
                | (:task_queue) -> ::String
                | (:version_id) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                | (:previous_compatible) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                | (:become_default) -> bool
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:task_queue, ::String) -> ::String
                 | (:version_id, ::Temporalio::Api::TaskQueue::V1::VersionId?) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                 | [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (:version_id, M?) -> M?
                 | (:previous_compatible, ::Temporalio::Api::TaskQueue::V1::VersionId?) -> ::Temporalio::Api::TaskQueue::V1::VersionId?
                 | [M < ::Temporalio::Api::TaskQueue::V1::VersionId::_ToProto] (:previous_compatible, M?) -> M?
                 | (:become_default, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def become_default?: () -> bool

          interface _ToProto
            def to_proto: () -> UpdateWorkerBuildIdOrderingRequest
          end

          # The type of `#initialize` parameter.
          type init = UpdateWorkerBuildIdOrderingRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateWorkerBuildIdOrderingRequest, UpdateWorkerBuildIdOrderingRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateWorkerBuildIdOrderingRequest, UpdateWorkerBuildIdOrderingRequest | _ToProto]

          type array = ::Array[UpdateWorkerBuildIdOrderingRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateWorkerBuildIdOrderingRequest | _ToProto]
        end

        class UpdateWorkerBuildIdOrderingResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> UpdateWorkerBuildIdOrderingResponse
          end

          # The type of `#initialize` parameter.
          type init = UpdateWorkerBuildIdOrderingResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateWorkerBuildIdOrderingResponse, UpdateWorkerBuildIdOrderingResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateWorkerBuildIdOrderingResponse, UpdateWorkerBuildIdOrderingResponse | _ToProto]

          type array = ::Array[UpdateWorkerBuildIdOrderingResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateWorkerBuildIdOrderingResponse | _ToProto]
        end

        # (-- api-linter: core::0134::request-resource-required=disabled
        #      aip.dev/not-precedent: GetWorkerBuildIdOrderingRequest RPC doesn't follow Google API format. --)
        #
        class GetWorkerBuildIdOrderingRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Must be set, the task queue to interrogate about worker id ordering
          #
          attr_accessor task_queue(): ::String

          def task_queue!: () -> ::String?

          # Limits how deep the returned DAG will go. 1 will return only the
          #  default build id. A default/0 value will return the entire graph.
          #
          attr_accessor max_depth(): ::Integer

          def max_depth!: () -> ::Integer?

          def initialize: (?namespace: ::String, ?task_queue: ::String, ?max_depth: ::Integer) -> void

          def []: (:namespace) -> ::String
                | (:task_queue) -> ::String
                | (:max_depth) -> ::Integer
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:task_queue, ::String) -> ::String
                 | (:max_depth, ::Integer) -> ::Integer
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> GetWorkerBuildIdOrderingRequest
          end

          # The type of `#initialize` parameter.
          type init = GetWorkerBuildIdOrderingRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetWorkerBuildIdOrderingRequest, GetWorkerBuildIdOrderingRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetWorkerBuildIdOrderingRequest, GetWorkerBuildIdOrderingRequest | _ToProto]

          type array = ::Array[GetWorkerBuildIdOrderingRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetWorkerBuildIdOrderingRequest | _ToProto]
        end

        class GetWorkerBuildIdOrderingResponse < ::Protobuf::Message
          # The currently established default version
          #
          attr_accessor current_default(): ::Temporalio::Api::TaskQueue::V1::VersionIdNode?

          # The currently established default version
          #
          def current_default=: [M < ::Temporalio::Api::TaskQueue::V1::VersionIdNode::_ToProto] (M?) -> M?
                              | ...

          def current_default!: () -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode?

          # Other current latest-compatible versions who are not the overall default. These are the
          #  versions that will be used when generating new tasks by following the graph from the
          #  version of the last task out to a leaf.
          #
          attr_accessor compatible_leaves(): ::Temporalio::Api::TaskQueue::V1::VersionIdNode::field_array

          # Other current latest-compatible versions who are not the overall default. These are the
          #  versions that will be used when generating new tasks by following the graph from the
          #  version of the last task out to a leaf.
          #
          def compatible_leaves=: (::Temporalio::Api::TaskQueue::V1::VersionIdNode::array) -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode::array
                                | ...

          def compatible_leaves!: () -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode::field_array?

          def initialize: (?current_default: ::Temporalio::Api::TaskQueue::V1::VersionIdNode::init?, ?compatible_leaves: ::Temporalio::Api::TaskQueue::V1::VersionIdNode::array) -> void

          def []: (:current_default) -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode?
                | (:compatible_leaves) -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode::field_array
                | (::Symbol) -> untyped

          def []=: (:current_default, ::Temporalio::Api::TaskQueue::V1::VersionIdNode?) -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode?
                 | [M < ::Temporalio::Api::TaskQueue::V1::VersionIdNode::_ToProto] (:current_default, M?) -> M?
                 | (:compatible_leaves, ::Temporalio::Api::TaskQueue::V1::VersionIdNode::field_array) -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode::field_array
                 | (:compatible_leaves, ::Temporalio::Api::TaskQueue::V1::VersionIdNode::array) -> ::Temporalio::Api::TaskQueue::V1::VersionIdNode::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> GetWorkerBuildIdOrderingResponse
          end

          # The type of `#initialize` parameter.
          type init = GetWorkerBuildIdOrderingResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[GetWorkerBuildIdOrderingResponse, GetWorkerBuildIdOrderingResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, GetWorkerBuildIdOrderingResponse, GetWorkerBuildIdOrderingResponse | _ToProto]

          type array = ::Array[GetWorkerBuildIdOrderingResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, GetWorkerBuildIdOrderingResponse | _ToProto]
        end

        # (-- api-linter: core::0134=disabled
        #      aip.dev/not-precedent: Update RPCs don't follow Google API format. --)
        #
        class UpdateWorkflowRequest < ::Protobuf::Message
          # A unique ID for this logical request
          #
          attr_accessor request_id(): ::String

          def request_id!: () -> ::String?

          # The manner in which the update result will be accessed.
          #  This field requires a non-default value; the default value of the enum
          #  will result in an error.
          #
          attr_accessor result_access_style(): ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle

          # The manner in which the update result will be accessed.
          #  This field requires a non-default value; the default value of the enum
          #  will result in an error.
          #
          def result_access_style=: (::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle::values) -> ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle::values
                                  | ...

          def result_access_style!: () -> ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle?

          # The namespace name of the target workflow
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # The target workflow id and (optionally) a specific run thereof
          #  (-- api-linter: core::0203::optional=disabled
          #      aip.dev/not-precedent: false positive triggered by the word "optional" --)
          #
          attr_accessor workflow_execution(): ::Temporalio::Api::Common::V1::WorkflowExecution?

          # The target workflow id and (optionally) a specific run thereof
          #  (-- api-linter: core::0203::optional=disabled
          #      aip.dev/not-precedent: false positive triggered by the word "optional" --)
          #
          def workflow_execution=: [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporalio::Api::Common::V1::WorkflowExecution?

          # If set, this call will error if the most recent (if no run id is set on
          #  `workflow_execution`), or specified (if it is) workflow execution is not
          #  part of the same execution chain as this id.
          #
          attr_accessor first_execution_run_id(): ::String

          def first_execution_run_id!: () -> ::String?

          # A string identifying the agent that requested this interaction.
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # The name under which the workflow update function is registered and the
          #  arguments to pass to said function.
          #
          attr_accessor input(): ::Temporalio::Api::Interaction::V1::Input?

          # The name under which the workflow update function is registered and the
          #  arguments to pass to said function.
          #
          def input=: [M < ::Temporalio::Api::Interaction::V1::Input::_ToProto] (M?) -> M?
                    | ...

          def input!: () -> ::Temporalio::Api::Interaction::V1::Input?

          def initialize: (?request_id: ::String, ?result_access_style: ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle::init, ?namespace: ::String, ?workflow_execution: ::Temporalio::Api::Common::V1::WorkflowExecution::init?, ?first_execution_run_id: ::String, ?identity: ::String, ?input: ::Temporalio::Api::Interaction::V1::Input::init?) -> void

          def []: (:request_id) -> ::String
                | (:result_access_style) -> ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle
                | (:namespace) -> ::String
                | (:workflow_execution) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                | (:first_execution_run_id) -> ::String
                | (:identity) -> ::String
                | (:input) -> ::Temporalio::Api::Interaction::V1::Input?
                | (::Symbol) -> untyped

          def []=: (:request_id, ::String) -> ::String
                 | (:result_access_style, ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle) -> ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle
                 | (:result_access_style, ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle::values) -> ::Temporalio::Api::Enums::V1::WorkflowUpdateResultAccessStyle::values
                 | (:namespace, ::String) -> ::String
                 | (:workflow_execution, ::Temporalio::Api::Common::V1::WorkflowExecution?) -> ::Temporalio::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporalio::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (:first_execution_run_id, ::String) -> ::String
                 | (:identity, ::String) -> ::String
                 | (:input, ::Temporalio::Api::Interaction::V1::Input?) -> ::Temporalio::Api::Interaction::V1::Input?
                 | [M < ::Temporalio::Api::Interaction::V1::Input::_ToProto] (:input, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> UpdateWorkflowRequest
          end

          # The type of `#initialize` parameter.
          type init = UpdateWorkflowRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateWorkflowRequest, UpdateWorkflowRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateWorkflowRequest, UpdateWorkflowRequest | _ToProto]

          type array = ::Array[UpdateWorkflowRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateWorkflowRequest | _ToProto]
        end

        class UpdateWorkflowResponse < ::Protobuf::Message
          # An opaque token that can be used to retrieve the update result via
          #  polling if it is not returned as part of the gRPC response
          #
          attr_accessor update_token(): ::String

          def update_token!: () -> ::String?

          # The success or failure status of the update
          #
          attr_accessor output(): ::Temporalio::Api::Interaction::V1::Output?

          # The success or failure status of the update
          #
          def output=: [M < ::Temporalio::Api::Interaction::V1::Output::_ToProto] (M?) -> M?
                     | ...

          def output!: () -> ::Temporalio::Api::Interaction::V1::Output?

          def initialize: (?update_token: ::String, ?output: ::Temporalio::Api::Interaction::V1::Output::init?) -> void

          def []: (:update_token) -> ::String
                | (:output) -> ::Temporalio::Api::Interaction::V1::Output?
                | (::Symbol) -> untyped

          def []=: (:update_token, ::String) -> ::String
                 | (:output, ::Temporalio::Api::Interaction::V1::Output?) -> ::Temporalio::Api::Interaction::V1::Output?
                 | [M < ::Temporalio::Api::Interaction::V1::Output::_ToProto] (:output, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> UpdateWorkflowResponse
          end

          # The type of `#initialize` parameter.
          type init = UpdateWorkflowResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[UpdateWorkflowResponse, UpdateWorkflowResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, UpdateWorkflowResponse, UpdateWorkflowResponse | _ToProto]

          type array = ::Array[UpdateWorkflowResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, UpdateWorkflowResponse | _ToProto]
        end

        class StartBatchOperationRequest < ::Protobuf::Message
          # Namespace that contains the batch operation
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Visibility query defines the the group of workflow to do batch operation
          #
          attr_accessor visibility_query(): ::String

          def visibility_query!: () -> ::String?

          # Job ID defines the unique ID for the batch job
          #
          attr_accessor job_id(): ::String

          def job_id!: () -> ::String?

          # Reason to perform the batch operation
          #
          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          attr_accessor termination_operation(): ::Temporalio::Api::Batch::V1::BatchOperationTermination?

          def termination_operation=: [M < ::Temporalio::Api::Batch::V1::BatchOperationTermination::_ToProto] (M?) -> M?
                                    | ...

          def termination_operation!: () -> ::Temporalio::Api::Batch::V1::BatchOperationTermination?

          attr_accessor signal_operation(): ::Temporalio::Api::Batch::V1::BatchOperationSignal?

          def signal_operation=: [M < ::Temporalio::Api::Batch::V1::BatchOperationSignal::_ToProto] (M?) -> M?
                               | ...

          def signal_operation!: () -> ::Temporalio::Api::Batch::V1::BatchOperationSignal?

          attr_accessor cancellation_operation(): ::Temporalio::Api::Batch::V1::BatchOperationCancellation?

          def cancellation_operation=: [M < ::Temporalio::Api::Batch::V1::BatchOperationCancellation::_ToProto] (M?) -> M?
                                     | ...

          def cancellation_operation!: () -> ::Temporalio::Api::Batch::V1::BatchOperationCancellation?

          attr_accessor deletion_operation(): ::Temporalio::Api::Batch::V1::BatchOperationDeletion?

          def deletion_operation=: [M < ::Temporalio::Api::Batch::V1::BatchOperationDeletion::_ToProto] (M?) -> M?
                                 | ...

          def deletion_operation!: () -> ::Temporalio::Api::Batch::V1::BatchOperationDeletion?

          def initialize: (?namespace: ::String, ?visibility_query: ::String, ?job_id: ::String, ?reason: ::String, ?termination_operation: ::Temporalio::Api::Batch::V1::BatchOperationTermination::init?, ?signal_operation: ::Temporalio::Api::Batch::V1::BatchOperationSignal::init?, ?cancellation_operation: ::Temporalio::Api::Batch::V1::BatchOperationCancellation::init?, ?deletion_operation: ::Temporalio::Api::Batch::V1::BatchOperationDeletion::init?) -> void

          def []: (:namespace) -> ::String
                | (:visibility_query) -> ::String
                | (:job_id) -> ::String
                | (:reason) -> ::String
                | (:termination_operation) -> ::Temporalio::Api::Batch::V1::BatchOperationTermination?
                | (:signal_operation) -> ::Temporalio::Api::Batch::V1::BatchOperationSignal?
                | (:cancellation_operation) -> ::Temporalio::Api::Batch::V1::BatchOperationCancellation?
                | (:deletion_operation) -> ::Temporalio::Api::Batch::V1::BatchOperationDeletion?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:visibility_query, ::String) -> ::String
                 | (:job_id, ::String) -> ::String
                 | (:reason, ::String) -> ::String
                 | (:termination_operation, ::Temporalio::Api::Batch::V1::BatchOperationTermination?) -> ::Temporalio::Api::Batch::V1::BatchOperationTermination?
                 | [M < ::Temporalio::Api::Batch::V1::BatchOperationTermination::_ToProto] (:termination_operation, M?) -> M?
                 | (:signal_operation, ::Temporalio::Api::Batch::V1::BatchOperationSignal?) -> ::Temporalio::Api::Batch::V1::BatchOperationSignal?
                 | [M < ::Temporalio::Api::Batch::V1::BatchOperationSignal::_ToProto] (:signal_operation, M?) -> M?
                 | (:cancellation_operation, ::Temporalio::Api::Batch::V1::BatchOperationCancellation?) -> ::Temporalio::Api::Batch::V1::BatchOperationCancellation?
                 | [M < ::Temporalio::Api::Batch::V1::BatchOperationCancellation::_ToProto] (:cancellation_operation, M?) -> M?
                 | (:deletion_operation, ::Temporalio::Api::Batch::V1::BatchOperationDeletion?) -> ::Temporalio::Api::Batch::V1::BatchOperationDeletion?
                 | [M < ::Temporalio::Api::Batch::V1::BatchOperationDeletion::_ToProto] (:deletion_operation, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StartBatchOperationRequest
          end

          # The type of `#initialize` parameter.
          type init = StartBatchOperationRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartBatchOperationRequest, StartBatchOperationRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartBatchOperationRequest, StartBatchOperationRequest | _ToProto]

          type array = ::Array[StartBatchOperationRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartBatchOperationRequest | _ToProto]
        end

        class StartBatchOperationResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> StartBatchOperationResponse
          end

          # The type of `#initialize` parameter.
          type init = StartBatchOperationResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StartBatchOperationResponse, StartBatchOperationResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StartBatchOperationResponse, StartBatchOperationResponse | _ToProto]

          type array = ::Array[StartBatchOperationResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, StartBatchOperationResponse | _ToProto]
        end

        class StopBatchOperationRequest < ::Protobuf::Message
          # Namespace that contains the batch operation
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Batch job id
          #
          attr_accessor job_id(): ::String

          def job_id!: () -> ::String?

          # Reason to stop a batch operation
          #
          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          # Identity of the operator
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?namespace: ::String, ?job_id: ::String, ?reason: ::String, ?identity: ::String) -> void

          def []: (:namespace) -> ::String
                | (:job_id) -> ::String
                | (:reason) -> ::String
                | (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:job_id, ::String) -> ::String
                 | (:reason, ::String) -> ::String
                 | (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> StopBatchOperationRequest
          end

          # The type of `#initialize` parameter.
          type init = StopBatchOperationRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StopBatchOperationRequest, StopBatchOperationRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StopBatchOperationRequest, StopBatchOperationRequest | _ToProto]

          type array = ::Array[StopBatchOperationRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, StopBatchOperationRequest | _ToProto]
        end

        class StopBatchOperationResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> StopBatchOperationResponse
          end

          # The type of `#initialize` parameter.
          type init = StopBatchOperationResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[StopBatchOperationResponse, StopBatchOperationResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, StopBatchOperationResponse, StopBatchOperationResponse | _ToProto]

          type array = ::Array[StopBatchOperationResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, StopBatchOperationResponse | _ToProto]
        end

        class DescribeBatchOperationRequest < ::Protobuf::Message
          # Namespace that contains the batch operation
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Batch job id
          #
          attr_accessor job_id(): ::String

          def job_id!: () -> ::String?

          def initialize: (?namespace: ::String, ?job_id: ::String) -> void

          def []: (:namespace) -> ::String
                | (:job_id) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:job_id, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeBatchOperationRequest
          end

          # The type of `#initialize` parameter.
          type init = DescribeBatchOperationRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeBatchOperationRequest, DescribeBatchOperationRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeBatchOperationRequest, DescribeBatchOperationRequest | _ToProto]

          type array = ::Array[DescribeBatchOperationRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeBatchOperationRequest | _ToProto]
        end

        class DescribeBatchOperationResponse < ::Protobuf::Message
          # Batch operation type
          #
          attr_accessor operation_type(): ::Temporalio::Api::Enums::V1::BatchOperationType

          # Batch operation type
          #
          def operation_type=: (::Temporalio::Api::Enums::V1::BatchOperationType::values) -> ::Temporalio::Api::Enums::V1::BatchOperationType::values
                             | ...

          def operation_type!: () -> ::Temporalio::Api::Enums::V1::BatchOperationType?

          # Batch job ID
          #
          attr_accessor job_id(): ::String

          def job_id!: () -> ::String?

          # Batch operation state
          #
          attr_accessor state(): ::Temporalio::Api::Enums::V1::BatchOperationState

          # Batch operation state
          #
          def state=: (::Temporalio::Api::Enums::V1::BatchOperationState::values) -> ::Temporalio::Api::Enums::V1::BatchOperationState::values
                    | ...

          def state!: () -> ::Temporalio::Api::Enums::V1::BatchOperationState?

          # Batch operation start time
          #
          attr_accessor start_time(): ::Google::Protobuf::Timestamp?

          # Batch operation start time
          #
          def start_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                         | ...

          def start_time!: () -> ::Google::Protobuf::Timestamp?

          # Batch operation close time
          #
          attr_accessor close_time(): ::Google::Protobuf::Timestamp?

          # Batch operation close time
          #
          def close_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                         | ...

          def close_time!: () -> ::Google::Protobuf::Timestamp?

          # Total operation count
          #
          attr_accessor total_operation_count(): ::Integer

          def total_operation_count!: () -> ::Integer?

          # Complete operation count
          #
          attr_accessor complete_operation_count(): ::Integer

          def complete_operation_count!: () -> ::Integer?

          # Failure operation count
          #
          attr_accessor failure_operation_count(): ::Integer

          def failure_operation_count!: () -> ::Integer?

          # Identity indicates the operator identity
          #
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          # Reason indicates the reason to stop a operation
          #
          attr_accessor reason(): ::String

          def reason!: () -> ::String?

          def initialize: (?operation_type: ::Temporalio::Api::Enums::V1::BatchOperationType::init, ?job_id: ::String, ?state: ::Temporalio::Api::Enums::V1::BatchOperationState::init, ?start_time: ::Google::Protobuf::Timestamp::init?, ?close_time: ::Google::Protobuf::Timestamp::init?, ?total_operation_count: ::Integer, ?complete_operation_count: ::Integer, ?failure_operation_count: ::Integer, ?identity: ::String, ?reason: ::String) -> void

          def []: (:operation_type) -> ::Temporalio::Api::Enums::V1::BatchOperationType
                | (:job_id) -> ::String
                | (:state) -> ::Temporalio::Api::Enums::V1::BatchOperationState
                | (:start_time) -> ::Google::Protobuf::Timestamp?
                | (:close_time) -> ::Google::Protobuf::Timestamp?
                | (:total_operation_count) -> ::Integer
                | (:complete_operation_count) -> ::Integer
                | (:failure_operation_count) -> ::Integer
                | (:identity) -> ::String
                | (:reason) -> ::String
                | (::Symbol) -> untyped

          def []=: (:operation_type, ::Temporalio::Api::Enums::V1::BatchOperationType) -> ::Temporalio::Api::Enums::V1::BatchOperationType
                 | (:operation_type, ::Temporalio::Api::Enums::V1::BatchOperationType::values) -> ::Temporalio::Api::Enums::V1::BatchOperationType::values
                 | (:job_id, ::String) -> ::String
                 | (:state, ::Temporalio::Api::Enums::V1::BatchOperationState) -> ::Temporalio::Api::Enums::V1::BatchOperationState
                 | (:state, ::Temporalio::Api::Enums::V1::BatchOperationState::values) -> ::Temporalio::Api::Enums::V1::BatchOperationState::values
                 | (:start_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:start_time, M?) -> M?
                 | (:close_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:close_time, M?) -> M?
                 | (:total_operation_count, ::Integer) -> ::Integer
                 | (:complete_operation_count, ::Integer) -> ::Integer
                 | (:failure_operation_count, ::Integer) -> ::Integer
                 | (:identity, ::String) -> ::String
                 | (:reason, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeBatchOperationResponse
          end

          # The type of `#initialize` parameter.
          type init = DescribeBatchOperationResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeBatchOperationResponse, DescribeBatchOperationResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeBatchOperationResponse, DescribeBatchOperationResponse | _ToProto]

          type array = ::Array[DescribeBatchOperationResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeBatchOperationResponse | _ToProto]
        end

        class ListBatchOperationsRequest < ::Protobuf::Message
          # Namespace that contains the batch operation
          #
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # List page size
          #
          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          # Next page token
          #
          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?namespace: ::String, ?page_size: ::Integer, ?next_page_token: ::String) -> void

          def []: (:namespace) -> ::String
                | (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListBatchOperationsRequest
          end

          # The type of `#initialize` parameter.
          type init = ListBatchOperationsRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListBatchOperationsRequest, ListBatchOperationsRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListBatchOperationsRequest, ListBatchOperationsRequest | _ToProto]

          type array = ::Array[ListBatchOperationsRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListBatchOperationsRequest | _ToProto]
        end

        class ListBatchOperationsResponse < ::Protobuf::Message
          # BatchOperationInfo contains the basic info about batch operation
          #
          attr_accessor operation_info(): ::Temporalio::Api::Batch::V1::BatchOperationInfo::field_array

          # BatchOperationInfo contains the basic info about batch operation
          #
          def operation_info=: (::Temporalio::Api::Batch::V1::BatchOperationInfo::array) -> ::Temporalio::Api::Batch::V1::BatchOperationInfo::array
                             | ...

          def operation_info!: () -> ::Temporalio::Api::Batch::V1::BatchOperationInfo::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?operation_info: ::Temporalio::Api::Batch::V1::BatchOperationInfo::array, ?next_page_token: ::String) -> void

          def []: (:operation_info) -> ::Temporalio::Api::Batch::V1::BatchOperationInfo::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:operation_info, ::Temporalio::Api::Batch::V1::BatchOperationInfo::field_array) -> ::Temporalio::Api::Batch::V1::BatchOperationInfo::field_array
                 | (:operation_info, ::Temporalio::Api::Batch::V1::BatchOperationInfo::array) -> ::Temporalio::Api::Batch::V1::BatchOperationInfo::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListBatchOperationsResponse
          end

          # The type of `#initialize` parameter.
          type init = ListBatchOperationsResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListBatchOperationsResponse, ListBatchOperationsResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListBatchOperationsResponse, ListBatchOperationsResponse | _ToProto]

          type array = ::Array[ListBatchOperationsResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListBatchOperationsResponse | _ToProto]
        end
      end
    end
  end
end
