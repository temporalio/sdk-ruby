module Temporal
  module Api
    module Cluster
      module V1
        # data column
        #
        class ClusterMetadata < ::Protobuf::Message
          attr_accessor cluster(): ::String

          def cluster!: () -> ::String?

          attr_accessor history_shard_count(): ::Integer

          def history_shard_count!: () -> ::Integer?

          attr_accessor cluster_id(): ::String

          def cluster_id!: () -> ::String?

          attr_accessor version_info(): ::Temporal::Api::Version::V1::VersionInfo?

          def version_info=: [M < ::Temporal::Api::Version::V1::VersionInfo::_ToProto] (M?) -> M?
                           | ...

          def version_info!: () -> ::Temporal::Api::Version::V1::VersionInfo?

          attr_accessor index_search_attributes(): ::Temporal::Api::Cluster::V1::IndexSearchAttributes::field_hash[::String]

          def index_search_attributes=: (::Temporal::Api::Cluster::V1::IndexSearchAttributes::hash[::String]) -> ::Temporal::Api::Cluster::V1::IndexSearchAttributes::hash[::String]
                                      | ...

          def index_search_attributes!: () -> ::Temporal::Api::Cluster::V1::IndexSearchAttributes::field_hash[::String]?

          attr_accessor cluster_address(): ::String

          def cluster_address!: () -> ::String?

          attr_accessor failover_version_increment(): ::Integer

          def failover_version_increment!: () -> ::Integer?

          attr_accessor initial_failover_version(): ::Integer

          def initial_failover_version!: () -> ::Integer?

          attr_accessor is_global_namespace_enabled(): bool

          def is_global_namespace_enabled!: () -> bool?

          attr_accessor is_connection_enabled(): bool

          def is_connection_enabled!: () -> bool?

          def initialize: (?cluster: ::String, ?history_shard_count: ::Integer, ?cluster_id: ::String, ?version_info: ::Temporal::Api::Version::V1::VersionInfo::init?, ?index_search_attributes: ::Temporal::Api::Cluster::V1::IndexSearchAttributes::hash[::String], ?cluster_address: ::String, ?failover_version_increment: ::Integer, ?initial_failover_version: ::Integer, ?is_global_namespace_enabled: bool, ?is_connection_enabled: bool) -> void

          def []: (:cluster) -> ::String
                | (:history_shard_count) -> ::Integer
                | (:cluster_id) -> ::String
                | (:version_info) -> ::Temporal::Api::Version::V1::VersionInfo?
                | (:index_search_attributes) -> ::Temporal::Api::Cluster::V1::IndexSearchAttributes::field_hash[::String]
                | (:cluster_address) -> ::String
                | (:failover_version_increment) -> ::Integer
                | (:initial_failover_version) -> ::Integer
                | (:is_global_namespace_enabled) -> bool
                | (:is_connection_enabled) -> bool
                | (::Symbol) -> untyped

          def []=: (:cluster, ::String) -> ::String
                 | (:history_shard_count, ::Integer) -> ::Integer
                 | (:cluster_id, ::String) -> ::String
                 | (:version_info, ::Temporal::Api::Version::V1::VersionInfo?) -> ::Temporal::Api::Version::V1::VersionInfo?
                 | [M < ::Temporal::Api::Version::V1::VersionInfo::_ToProto] (:version_info, M?) -> M?
                 | (:index_search_attributes, ::Temporal::Api::Cluster::V1::IndexSearchAttributes::field_hash[::String]) -> ::Temporal::Api::Cluster::V1::IndexSearchAttributes::field_hash[::String]
                 | (:index_search_attributes, ::Temporal::Api::Cluster::V1::IndexSearchAttributes::hash[::String]) -> ::Temporal::Api::Cluster::V1::IndexSearchAttributes::hash[::String]
                 | (:cluster_address, ::String) -> ::String
                 | (:failover_version_increment, ::Integer) -> ::Integer
                 | (:initial_failover_version, ::Integer) -> ::Integer
                 | (:is_global_namespace_enabled, bool) -> bool
                 | (:is_connection_enabled, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def is_global_namespace_enabled?: () -> bool

          def is_connection_enabled?: () -> bool

          interface _ToProto
            def to_proto: () -> ClusterMetadata
          end

          # The type of `#initialize` parameter.
          type init = ClusterMetadata | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ClusterMetadata, ClusterMetadata | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ClusterMetadata, ClusterMetadata | _ToProto]

          type array = ::Array[ClusterMetadata | _ToProto]

          type hash[KEY] = ::Hash[KEY, ClusterMetadata | _ToProto]
        end

        class IndexSearchAttributes < ::Protobuf::Message
          attr_accessor custom_search_attributes(): ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]

          def custom_search_attributes=: (::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                                       | ...

          def custom_search_attributes!: () -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          def initialize: (?custom_search_attributes: ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> void

          def []: (:custom_search_attributes) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (::Symbol) -> untyped

          def []=: (:custom_search_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:custom_search_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> IndexSearchAttributes
          end

          # The type of `#initialize` parameter.
          type init = IndexSearchAttributes | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[IndexSearchAttributes, IndexSearchAttributes | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, IndexSearchAttributes, IndexSearchAttributes | _ToProto]

          type array = ::Array[IndexSearchAttributes | _ToProto]

          type hash[KEY] = ::Hash[KEY, IndexSearchAttributes | _ToProto]
        end

        class HostInfo < ::Protobuf::Message
          attr_accessor identity(): ::String

          def identity!: () -> ::String?

          def initialize: (?identity: ::String) -> void

          def []: (:identity) -> ::String
                | (::Symbol) -> untyped

          def []=: (:identity, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> HostInfo
          end

          # The type of `#initialize` parameter.
          type init = HostInfo | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[HostInfo, HostInfo | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, HostInfo, HostInfo | _ToProto]

          type array = ::Array[HostInfo | _ToProto]

          type hash[KEY] = ::Hash[KEY, HostInfo | _ToProto]
        end

        class RingInfo < ::Protobuf::Message
          attr_accessor role(): ::String

          def role!: () -> ::String?

          attr_accessor member_count(): ::Integer

          def member_count!: () -> ::Integer?

          attr_accessor members(): ::Temporal::Api::Cluster::V1::HostInfo::field_array

          def members=: (::Temporal::Api::Cluster::V1::HostInfo::array) -> ::Temporal::Api::Cluster::V1::HostInfo::array
                      | ...

          def members!: () -> ::Temporal::Api::Cluster::V1::HostInfo::field_array?

          def initialize: (?role: ::String, ?member_count: ::Integer, ?members: ::Temporal::Api::Cluster::V1::HostInfo::array) -> void

          def []: (:role) -> ::String
                | (:member_count) -> ::Integer
                | (:members) -> ::Temporal::Api::Cluster::V1::HostInfo::field_array
                | (::Symbol) -> untyped

          def []=: (:role, ::String) -> ::String
                 | (:member_count, ::Integer) -> ::Integer
                 | (:members, ::Temporal::Api::Cluster::V1::HostInfo::field_array) -> ::Temporal::Api::Cluster::V1::HostInfo::field_array
                 | (:members, ::Temporal::Api::Cluster::V1::HostInfo::array) -> ::Temporal::Api::Cluster::V1::HostInfo::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RingInfo
          end

          # The type of `#initialize` parameter.
          type init = RingInfo | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RingInfo, RingInfo | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RingInfo, RingInfo | _ToProto]

          type array = ::Array[RingInfo | _ToProto]

          type hash[KEY] = ::Hash[KEY, RingInfo | _ToProto]
        end

        class MembershipInfo < ::Protobuf::Message
          attr_accessor current_host(): ::Temporal::Api::Cluster::V1::HostInfo?

          def current_host=: [M < ::Temporal::Api::Cluster::V1::HostInfo::_ToProto] (M?) -> M?
                           | ...

          def current_host!: () -> ::Temporal::Api::Cluster::V1::HostInfo?

          attr_accessor reachable_members(): ::Protobuf::field_array[::String]

          def reachable_members=: (::Array[::String]) -> ::Array[::String]
                                | ...

          def reachable_members!: () -> ::Protobuf::field_array[::String]?

          attr_accessor rings(): ::Temporal::Api::Cluster::V1::RingInfo::field_array

          def rings=: (::Temporal::Api::Cluster::V1::RingInfo::array) -> ::Temporal::Api::Cluster::V1::RingInfo::array
                    | ...

          def rings!: () -> ::Temporal::Api::Cluster::V1::RingInfo::field_array?

          def initialize: (?current_host: ::Temporal::Api::Cluster::V1::HostInfo::init?, ?reachable_members: ::Array[::String], ?rings: ::Temporal::Api::Cluster::V1::RingInfo::array) -> void

          def []: (:current_host) -> ::Temporal::Api::Cluster::V1::HostInfo?
                | (:reachable_members) -> ::Protobuf::field_array[::String]
                | (:rings) -> ::Temporal::Api::Cluster::V1::RingInfo::field_array
                | (::Symbol) -> untyped

          def []=: (:current_host, ::Temporal::Api::Cluster::V1::HostInfo?) -> ::Temporal::Api::Cluster::V1::HostInfo?
                 | [M < ::Temporal::Api::Cluster::V1::HostInfo::_ToProto] (:current_host, M?) -> M?
                 | (:reachable_members, ::Protobuf::field_array[::String]) -> ::Protobuf::field_array[::String]
                 | (:reachable_members, ::Array[::String]) -> ::Array[::String]
                 | (:rings, ::Temporal::Api::Cluster::V1::RingInfo::field_array) -> ::Temporal::Api::Cluster::V1::RingInfo::field_array
                 | (:rings, ::Temporal::Api::Cluster::V1::RingInfo::array) -> ::Temporal::Api::Cluster::V1::RingInfo::array
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> MembershipInfo
          end

          # The type of `#initialize` parameter.
          type init = MembershipInfo | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[MembershipInfo, MembershipInfo | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, MembershipInfo, MembershipInfo | _ToProto]

          type array = ::Array[MembershipInfo | _ToProto]

          type hash[KEY] = ::Hash[KEY, MembershipInfo | _ToProto]
        end

        class ClusterMember < ::Protobuf::Message
          attr_accessor role(): ::Temporal::Api::Enums::V1::ClusterMemberRole

          def role=: (::Temporal::Api::Enums::V1::ClusterMemberRole::values) -> ::Temporal::Api::Enums::V1::ClusterMemberRole::values
                   | ...

          def role!: () -> ::Temporal::Api::Enums::V1::ClusterMemberRole?

          attr_accessor host_id(): ::String

          def host_id!: () -> ::String?

          attr_accessor rpc_address(): ::String

          def rpc_address!: () -> ::String?

          attr_accessor rpc_port(): ::Integer

          def rpc_port!: () -> ::Integer?

          attr_accessor session_start_time(): ::Google::Protobuf::Timestamp?

          def session_start_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                                 | ...

          def session_start_time!: () -> ::Google::Protobuf::Timestamp?

          attr_accessor last_heartbit_time(): ::Google::Protobuf::Timestamp?

          def last_heartbit_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                                 | ...

          def last_heartbit_time!: () -> ::Google::Protobuf::Timestamp?

          attr_accessor record_expiry_time(): ::Google::Protobuf::Timestamp?

          def record_expiry_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                                 | ...

          def record_expiry_time!: () -> ::Google::Protobuf::Timestamp?

          def initialize: (?role: ::Temporal::Api::Enums::V1::ClusterMemberRole::init, ?host_id: ::String, ?rpc_address: ::String, ?rpc_port: ::Integer, ?session_start_time: ::Google::Protobuf::Timestamp::init?, ?last_heartbit_time: ::Google::Protobuf::Timestamp::init?, ?record_expiry_time: ::Google::Protobuf::Timestamp::init?) -> void

          def []: (:role) -> ::Temporal::Api::Enums::V1::ClusterMemberRole
                | (:host_id) -> ::String
                | (:rpc_address) -> ::String
                | (:rpc_port) -> ::Integer
                | (:session_start_time) -> ::Google::Protobuf::Timestamp?
                | (:last_heartbit_time) -> ::Google::Protobuf::Timestamp?
                | (:record_expiry_time) -> ::Google::Protobuf::Timestamp?
                | (::Symbol) -> untyped

          def []=: (:role, ::Temporal::Api::Enums::V1::ClusterMemberRole) -> ::Temporal::Api::Enums::V1::ClusterMemberRole
                 | (:role, ::Temporal::Api::Enums::V1::ClusterMemberRole::values) -> ::Temporal::Api::Enums::V1::ClusterMemberRole::values
                 | (:host_id, ::String) -> ::String
                 | (:rpc_address, ::String) -> ::String
                 | (:rpc_port, ::Integer) -> ::Integer
                 | (:session_start_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:session_start_time, M?) -> M?
                 | (:last_heartbit_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:last_heartbit_time, M?) -> M?
                 | (:record_expiry_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:record_expiry_time, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ClusterMember
          end

          # The type of `#initialize` parameter.
          type init = ClusterMember | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ClusterMember, ClusterMember | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ClusterMember, ClusterMember | _ToProto]

          type array = ::Array[ClusterMember | _ToProto]

          type hash[KEY] = ::Hash[KEY, ClusterMember | _ToProto]
        end
      end
    end
  end
end
