module Temporalio
  module Api
    module OperatorService
      module V1
        # (-- Search Attribute --)
        #
        class AddSearchAttributesRequest < ::Protobuf::Message
          # Mapping between search attribute name and its IndexedValueType.
          #
          attr_accessor search_attributes(): ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]

          # Mapping between search attribute name and its IndexedValueType.
          #
          def search_attributes=: (::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                                | ...

          def search_attributes!: () -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          def initialize: (?search_attributes: ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> void

          def []: (:search_attributes) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (::Symbol) -> untyped

          def []=: (:search_attributes, ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:search_attributes, ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> AddSearchAttributesRequest
          end

          # The type of `#initialize` parameter.
          type init = AddSearchAttributesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddSearchAttributesRequest, AddSearchAttributesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddSearchAttributesRequest, AddSearchAttributesRequest | _ToProto]

          type array = ::Array[AddSearchAttributesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddSearchAttributesRequest | _ToProto]
        end

        class AddSearchAttributesResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> AddSearchAttributesResponse
          end

          # The type of `#initialize` parameter.
          type init = AddSearchAttributesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddSearchAttributesResponse, AddSearchAttributesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddSearchAttributesResponse, AddSearchAttributesResponse | _ToProto]

          type array = ::Array[AddSearchAttributesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddSearchAttributesResponse | _ToProto]
        end

        class RemoveSearchAttributesRequest < ::Protobuf::Message
          # Search attribute names to delete.
          #
          attr_accessor search_attributes(): ::Protobuf::field_array[::String]

          # Search attribute names to delete.
          #
          def search_attributes=: (::Array[::String]) -> ::Array[::String]
                                | ...

          def search_attributes!: () -> ::Protobuf::field_array[::String]?

          def initialize: (?search_attributes: ::Array[::String]) -> void

          def []: (:search_attributes) -> ::Protobuf::field_array[::String]
                | (::Symbol) -> untyped

          def []=: (:search_attributes, ::Protobuf::field_array[::String]) -> ::Protobuf::field_array[::String]
                 | (:search_attributes, ::Array[::String]) -> ::Array[::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RemoveSearchAttributesRequest
          end

          # The type of `#initialize` parameter.
          type init = RemoveSearchAttributesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveSearchAttributesRequest, RemoveSearchAttributesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveSearchAttributesRequest, RemoveSearchAttributesRequest | _ToProto]

          type array = ::Array[RemoveSearchAttributesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveSearchAttributesRequest | _ToProto]
        end

        class RemoveSearchAttributesResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RemoveSearchAttributesResponse
          end

          # The type of `#initialize` parameter.
          type init = RemoveSearchAttributesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveSearchAttributesResponse, RemoveSearchAttributesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveSearchAttributesResponse, RemoveSearchAttributesResponse | _ToProto]

          type array = ::Array[RemoveSearchAttributesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveSearchAttributesResponse | _ToProto]
        end

        class ListSearchAttributesRequest < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> ListSearchAttributesRequest
          end

          # The type of `#initialize` parameter.
          type init = ListSearchAttributesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListSearchAttributesRequest, ListSearchAttributesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListSearchAttributesRequest, ListSearchAttributesRequest | _ToProto]

          type array = ::Array[ListSearchAttributesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListSearchAttributesRequest | _ToProto]
        end

        class ListSearchAttributesResponse < ::Protobuf::Message
          # Mapping between custom (user-registered) search attribute name to its IndexedValueType.
          #
          attr_accessor custom_attributes(): ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]

          # Mapping between custom (user-registered) search attribute name to its IndexedValueType.
          #
          def custom_attributes=: (::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                                | ...

          def custom_attributes!: () -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          # Mapping between system (predefined) search attribute name to its IndexedValueType.
          #
          attr_accessor system_attributes(): ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]

          # Mapping between system (predefined) search attribute name to its IndexedValueType.
          #
          def system_attributes=: (::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                                | ...

          def system_attributes!: () -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          # Mapping from the attribute name to the visibility storage native type.
          #
          attr_accessor storage_schema(): ::Protobuf::field_hash[::String, ::String]

          # Mapping from the attribute name to the visibility storage native type.
          #
          def storage_schema=: (::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                             | ...

          def storage_schema!: () -> ::Protobuf::field_hash[::String, ::String]?

          def initialize: (?custom_attributes: ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String], ?system_attributes: ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String], ?storage_schema: ::Hash[::String, ::String]) -> void

          def []: (:custom_attributes) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (:system_attributes) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (:storage_schema) -> ::Protobuf::field_hash[::String, ::String]
                | (::Symbol) -> untyped

          def []=: (:custom_attributes, ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:custom_attributes, ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (:system_attributes, ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:system_attributes, ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporalio::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (:storage_schema, ::Protobuf::field_hash[::String, ::String]) -> ::Protobuf::field_hash[::String, ::String]
                 | (:storage_schema, ::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListSearchAttributesResponse
          end

          # The type of `#initialize` parameter.
          type init = ListSearchAttributesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListSearchAttributesResponse, ListSearchAttributesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListSearchAttributesResponse, ListSearchAttributesResponse | _ToProto]

          type array = ::Array[ListSearchAttributesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListSearchAttributesResponse | _ToProto]
        end

        # (-- api-linter: core::0135::request-unknown-fields=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #  (-- api-linter: core::0135::request-name-required=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #
        class DeleteNamespaceRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          def initialize: (?namespace: ::String) -> void

          def []: (:namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeleteNamespaceRequest
          end

          # The type of `#initialize` parameter.
          type init = DeleteNamespaceRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteNamespaceRequest, DeleteNamespaceRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteNamespaceRequest, DeleteNamespaceRequest | _ToProto]

          type array = ::Array[DeleteNamespaceRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteNamespaceRequest | _ToProto]
        end

        class DeleteNamespaceResponse < ::Protobuf::Message
          # Temporary namespace name that is used during reclaim resources step.
          #
          attr_accessor deleted_namespace(): ::String

          def deleted_namespace!: () -> ::String?

          def initialize: (?deleted_namespace: ::String) -> void

          def []: (:deleted_namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:deleted_namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeleteNamespaceResponse
          end

          # The type of `#initialize` parameter.
          type init = DeleteNamespaceResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteNamespaceResponse, DeleteNamespaceResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteNamespaceResponse, DeleteNamespaceResponse | _ToProto]

          type array = ::Array[DeleteNamespaceResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteNamespaceResponse | _ToProto]
        end

        class AddOrUpdateRemoteClusterRequest < ::Protobuf::Message
          # Frontend Address is a cross cluster accessible address.
          #
          attr_accessor frontend_address(): ::String

          def frontend_address!: () -> ::String?

          # Flag to enable / disable the cross cluster connection.
          #
          attr_accessor enable_remote_cluster_connection(): bool

          def enable_remote_cluster_connection!: () -> bool?

          def initialize: (?frontend_address: ::String, ?enable_remote_cluster_connection: bool) -> void

          def []: (:frontend_address) -> ::String
                | (:enable_remote_cluster_connection) -> bool
                | (::Symbol) -> untyped

          def []=: (:frontend_address, ::String) -> ::String
                 | (:enable_remote_cluster_connection, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def enable_remote_cluster_connection?: () -> bool

          interface _ToProto
            def to_proto: () -> AddOrUpdateRemoteClusterRequest
          end

          # The type of `#initialize` parameter.
          type init = AddOrUpdateRemoteClusterRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddOrUpdateRemoteClusterRequest, AddOrUpdateRemoteClusterRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddOrUpdateRemoteClusterRequest, AddOrUpdateRemoteClusterRequest | _ToProto]

          type array = ::Array[AddOrUpdateRemoteClusterRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddOrUpdateRemoteClusterRequest | _ToProto]
        end

        class AddOrUpdateRemoteClusterResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> AddOrUpdateRemoteClusterResponse
          end

          # The type of `#initialize` parameter.
          type init = AddOrUpdateRemoteClusterResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddOrUpdateRemoteClusterResponse, AddOrUpdateRemoteClusterResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddOrUpdateRemoteClusterResponse, AddOrUpdateRemoteClusterResponse | _ToProto]

          type array = ::Array[AddOrUpdateRemoteClusterResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddOrUpdateRemoteClusterResponse | _ToProto]
        end

        class RemoveRemoteClusterRequest < ::Protobuf::Message
          # Remote cluster name to be removed.
          #
          attr_accessor cluster_name(): ::String

          def cluster_name!: () -> ::String?

          def initialize: (?cluster_name: ::String) -> void

          def []: (:cluster_name) -> ::String
                | (::Symbol) -> untyped

          def []=: (:cluster_name, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RemoveRemoteClusterRequest
          end

          # The type of `#initialize` parameter.
          type init = RemoveRemoteClusterRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveRemoteClusterRequest, RemoveRemoteClusterRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveRemoteClusterRequest, RemoveRemoteClusterRequest | _ToProto]

          type array = ::Array[RemoveRemoteClusterRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveRemoteClusterRequest | _ToProto]
        end

        class RemoveRemoteClusterResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RemoveRemoteClusterResponse
          end

          # The type of `#initialize` parameter.
          type init = RemoveRemoteClusterResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveRemoteClusterResponse, RemoveRemoteClusterResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveRemoteClusterResponse, RemoveRemoteClusterResponse | _ToProto]

          type array = ::Array[RemoveRemoteClusterResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveRemoteClusterResponse | _ToProto]
        end

        class ListClustersRequest < ::Protobuf::Message
          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?page_size: ::Integer, ?next_page_token: ::String) -> void

          def []: (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClustersRequest
          end

          # The type of `#initialize` parameter.
          type init = ListClustersRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClustersRequest, ListClustersRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClustersRequest, ListClustersRequest | _ToProto]

          type array = ::Array[ListClustersRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClustersRequest | _ToProto]
        end

        class ListClustersResponse < ::Protobuf::Message
          # List of all cluster information
          #
          attr_accessor clusters(): ::Temporalio::Api::OperatorService::V1::ClusterMetadata::field_array

          # List of all cluster information
          #
          def clusters=: (::Temporalio::Api::OperatorService::V1::ClusterMetadata::array) -> ::Temporalio::Api::OperatorService::V1::ClusterMetadata::array
                       | ...

          def clusters!: () -> ::Temporalio::Api::OperatorService::V1::ClusterMetadata::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?clusters: ::Temporalio::Api::OperatorService::V1::ClusterMetadata::array, ?next_page_token: ::String) -> void

          def []: (:clusters) -> ::Temporalio::Api::OperatorService::V1::ClusterMetadata::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:clusters, ::Temporalio::Api::OperatorService::V1::ClusterMetadata::field_array) -> ::Temporalio::Api::OperatorService::V1::ClusterMetadata::field_array
                 | (:clusters, ::Temporalio::Api::OperatorService::V1::ClusterMetadata::array) -> ::Temporalio::Api::OperatorService::V1::ClusterMetadata::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClustersResponse
          end

          # The type of `#initialize` parameter.
          type init = ListClustersResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClustersResponse, ListClustersResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClustersResponse, ListClustersResponse | _ToProto]

          type array = ::Array[ListClustersResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClustersResponse | _ToProto]
        end

        class ClusterMetadata < ::Protobuf::Message
          # Name of the cluster name.
          #
          attr_accessor cluster_name(): ::String

          def cluster_name!: () -> ::String?

          # Id of the cluster.
          #
          attr_accessor cluster_id(): ::String

          def cluster_id!: () -> ::String?

          # Cluster accessible address.
          #
          attr_accessor address(): ::String

          def address!: () -> ::String?

          # A unique failover version across all connected clusters.
          #
          attr_accessor initial_failover_version(): ::Integer

          def initial_failover_version!: () -> ::Integer?

          # History service shard number.
          #
          attr_accessor history_shard_count(): ::Integer

          def history_shard_count!: () -> ::Integer?

          # A flag to indicate if a connection is active.
          #
          attr_accessor is_connection_enabled(): bool

          def is_connection_enabled!: () -> bool?

          def initialize: (?cluster_name: ::String, ?cluster_id: ::String, ?address: ::String, ?initial_failover_version: ::Integer, ?history_shard_count: ::Integer, ?is_connection_enabled: bool) -> void

          def []: (:cluster_name) -> ::String
                | (:cluster_id) -> ::String
                | (:address) -> ::String
                | (:initial_failover_version) -> ::Integer
                | (:history_shard_count) -> ::Integer
                | (:is_connection_enabled) -> bool
                | (::Symbol) -> untyped

          def []=: (:cluster_name, ::String) -> ::String
                 | (:cluster_id, ::String) -> ::String
                 | (:address, ::String) -> ::String
                 | (:initial_failover_version, ::Integer) -> ::Integer
                 | (:history_shard_count, ::Integer) -> ::Integer
                 | (:is_connection_enabled, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def is_connection_enabled?: () -> bool

          interface _ToProto
            def to_proto: () -> ClusterMetadata
          end

          # The type of `#initialize` parameter.
          type init = ClusterMetadata | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ClusterMetadata, ClusterMetadata | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ClusterMetadata, ClusterMetadata | _ToProto]

          type array = ::Array[ClusterMetadata | _ToProto]

          type hash[KEY] = ::Hash[KEY, ClusterMetadata | _ToProto]
        end
      end
    end
  end
end
