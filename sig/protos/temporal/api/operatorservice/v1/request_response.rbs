module Temporal
  module Api
    module Operatorservice
      module V1
        # (-- Search Attribute --)
        #
        class AddSearchAttributesRequest < ::Protobuf::Message
          # Mapping between search attribute name and its IndexedValueType.
          #
          attr_accessor search_attributes(): ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]

          # Mapping between search attribute name and its IndexedValueType.
          #
          def search_attributes=: (::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                                | ...

          def search_attributes!: () -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          def initialize: (?search_attributes: ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> void

          def []: (:search_attributes) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (::Symbol) -> untyped

          def []=: (:search_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:search_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> AddSearchAttributesRequest
          end

          # The type of `#initialize` parameter.
          type init = AddSearchAttributesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddSearchAttributesRequest, AddSearchAttributesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddSearchAttributesRequest, AddSearchAttributesRequest | _ToProto]

          type array = ::Array[AddSearchAttributesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddSearchAttributesRequest | _ToProto]
        end

        class AddSearchAttributesResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> AddSearchAttributesResponse
          end

          # The type of `#initialize` parameter.
          type init = AddSearchAttributesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddSearchAttributesResponse, AddSearchAttributesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddSearchAttributesResponse, AddSearchAttributesResponse | _ToProto]

          type array = ::Array[AddSearchAttributesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddSearchAttributesResponse | _ToProto]
        end

        class RemoveSearchAttributesRequest < ::Protobuf::Message
          # Search attribute names to delete.
          #
          attr_accessor search_attributes(): ::Protobuf::field_array[::String]

          # Search attribute names to delete.
          #
          def search_attributes=: (::Array[::String]) -> ::Array[::String]
                                | ...

          def search_attributes!: () -> ::Protobuf::field_array[::String]?

          def initialize: (?search_attributes: ::Array[::String]) -> void

          def []: (:search_attributes) -> ::Protobuf::field_array[::String]
                | (::Symbol) -> untyped

          def []=: (:search_attributes, ::Protobuf::field_array[::String]) -> ::Protobuf::field_array[::String]
                 | (:search_attributes, ::Array[::String]) -> ::Array[::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RemoveSearchAttributesRequest
          end

          # The type of `#initialize` parameter.
          type init = RemoveSearchAttributesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveSearchAttributesRequest, RemoveSearchAttributesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveSearchAttributesRequest, RemoveSearchAttributesRequest | _ToProto]

          type array = ::Array[RemoveSearchAttributesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveSearchAttributesRequest | _ToProto]
        end

        class RemoveSearchAttributesResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RemoveSearchAttributesResponse
          end

          # The type of `#initialize` parameter.
          type init = RemoveSearchAttributesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveSearchAttributesResponse, RemoveSearchAttributesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveSearchAttributesResponse, RemoveSearchAttributesResponse | _ToProto]

          type array = ::Array[RemoveSearchAttributesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveSearchAttributesResponse | _ToProto]
        end

        class ListSearchAttributesRequest < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> ListSearchAttributesRequest
          end

          # The type of `#initialize` parameter.
          type init = ListSearchAttributesRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListSearchAttributesRequest, ListSearchAttributesRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListSearchAttributesRequest, ListSearchAttributesRequest | _ToProto]

          type array = ::Array[ListSearchAttributesRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListSearchAttributesRequest | _ToProto]
        end

        class ListSearchAttributesResponse < ::Protobuf::Message
          # Mapping between custom (user-registered) search attribute name to its IndexedValueType.
          #
          attr_accessor custom_attributes(): ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]

          # Mapping between custom (user-registered) search attribute name to its IndexedValueType.
          #
          def custom_attributes=: (::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                                | ...

          def custom_attributes!: () -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          # Mapping between system (predefined) search attribute name to its IndexedValueType.
          #
          attr_accessor system_attributes(): ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]

          # Mapping between system (predefined) search attribute name to its IndexedValueType.
          #
          def system_attributes=: (::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                                | ...

          def system_attributes!: () -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]?

          # Mapping from the attribute name to the visibility storage native type.
          #
          attr_accessor storage_schema(): ::Protobuf::field_hash[::String, ::String]

          # Mapping from the attribute name to the visibility storage native type.
          #
          def storage_schema=: (::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                             | ...

          def storage_schema!: () -> ::Protobuf::field_hash[::String, ::String]?

          def initialize: (?custom_attributes: ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String], ?system_attributes: ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String], ?storage_schema: ::Hash[::String, ::String]) -> void

          def []: (:custom_attributes) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (:system_attributes) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                | (:storage_schema) -> ::Protobuf::field_hash[::String, ::String]
                | (::Symbol) -> untyped

          def []=: (:custom_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:custom_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (:system_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::field_hash[::String]
                 | (:system_attributes, ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]) -> ::Temporal::Api::Enums::V1::IndexedValueType::hash[::String]
                 | (:storage_schema, ::Protobuf::field_hash[::String, ::String]) -> ::Protobuf::field_hash[::String, ::String]
                 | (:storage_schema, ::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListSearchAttributesResponse
          end

          # The type of `#initialize` parameter.
          type init = ListSearchAttributesResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListSearchAttributesResponse, ListSearchAttributesResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListSearchAttributesResponse, ListSearchAttributesResponse | _ToProto]

          type array = ::Array[ListSearchAttributesResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListSearchAttributesResponse | _ToProto]
        end

        # (-- api-linter: core::0135::request-unknown-fields=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #  (-- api-linter: core::0135::request-name-required=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #
        class DeleteNamespaceRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          def initialize: (?namespace: ::String) -> void

          def []: (:namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeleteNamespaceRequest
          end

          # The type of `#initialize` parameter.
          type init = DeleteNamespaceRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteNamespaceRequest, DeleteNamespaceRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteNamespaceRequest, DeleteNamespaceRequest | _ToProto]

          type array = ::Array[DeleteNamespaceRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteNamespaceRequest | _ToProto]
        end

        class DeleteNamespaceResponse < ::Protobuf::Message
          # Temporary namespace name that is used during reclaim resources step.
          #
          attr_accessor deleted_namespace(): ::String

          def deleted_namespace!: () -> ::String?

          def initialize: (?deleted_namespace: ::String) -> void

          def []: (:deleted_namespace) -> ::String
                | (::Symbol) -> untyped

          def []=: (:deleted_namespace, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeleteNamespaceResponse
          end

          # The type of `#initialize` parameter.
          type init = DeleteNamespaceResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteNamespaceResponse, DeleteNamespaceResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteNamespaceResponse, DeleteNamespaceResponse | _ToProto]

          type array = ::Array[DeleteNamespaceResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteNamespaceResponse | _ToProto]
        end

        # (-- api-linter: core::0135::request-unknown-fields=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #  (-- api-linter: core::0135::request-name-required=disabled
        #      aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
        #
        class DeleteWorkflowExecutionRequest < ::Protobuf::Message
          attr_accessor namespace(): ::String

          def namespace!: () -> ::String?

          # Workflow Execution to delete. If run_id is not specified, the latest one is used.
          #
          attr_accessor workflow_execution(): ::Temporal::Api::Common::V1::WorkflowExecution?

          # Workflow Execution to delete. If run_id is not specified, the latest one is used.
          #
          def workflow_execution=: [M < ::Temporal::Api::Common::V1::WorkflowExecution::_ToProto] (M?) -> M?
                                 | ...

          def workflow_execution!: () -> ::Temporal::Api::Common::V1::WorkflowExecution?

          def initialize: (?namespace: ::String, ?workflow_execution: ::Temporal::Api::Common::V1::WorkflowExecution::init?) -> void

          def []: (:namespace) -> ::String
                | (:workflow_execution) -> ::Temporal::Api::Common::V1::WorkflowExecution?
                | (::Symbol) -> untyped

          def []=: (:namespace, ::String) -> ::String
                 | (:workflow_execution, ::Temporal::Api::Common::V1::WorkflowExecution?) -> ::Temporal::Api::Common::V1::WorkflowExecution?
                 | [M < ::Temporal::Api::Common::V1::WorkflowExecution::_ToProto] (:workflow_execution, M?) -> M?
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DeleteWorkflowExecutionRequest
          end

          # The type of `#initialize` parameter.
          type init = DeleteWorkflowExecutionRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteWorkflowExecutionRequest, DeleteWorkflowExecutionRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteWorkflowExecutionRequest, DeleteWorkflowExecutionRequest | _ToProto]

          type array = ::Array[DeleteWorkflowExecutionRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteWorkflowExecutionRequest | _ToProto]
        end

        class DeleteWorkflowExecutionResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> DeleteWorkflowExecutionResponse
          end

          # The type of `#initialize` parameter.
          type init = DeleteWorkflowExecutionResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DeleteWorkflowExecutionResponse, DeleteWorkflowExecutionResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DeleteWorkflowExecutionResponse, DeleteWorkflowExecutionResponse | _ToProto]

          type array = ::Array[DeleteWorkflowExecutionResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DeleteWorkflowExecutionResponse | _ToProto]
        end

        class AddOrUpdateRemoteClusterRequest < ::Protobuf::Message
          attr_accessor frontend_address(): ::String

          def frontend_address!: () -> ::String?

          attr_accessor enable_remote_cluster_connection(): bool

          def enable_remote_cluster_connection!: () -> bool?

          def initialize: (?frontend_address: ::String, ?enable_remote_cluster_connection: bool) -> void

          def []: (:frontend_address) -> ::String
                | (:enable_remote_cluster_connection) -> bool
                | (::Symbol) -> untyped

          def []=: (:frontend_address, ::String) -> ::String
                 | (:enable_remote_cluster_connection, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def enable_remote_cluster_connection?: () -> bool

          interface _ToProto
            def to_proto: () -> AddOrUpdateRemoteClusterRequest
          end

          # The type of `#initialize` parameter.
          type init = AddOrUpdateRemoteClusterRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddOrUpdateRemoteClusterRequest, AddOrUpdateRemoteClusterRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddOrUpdateRemoteClusterRequest, AddOrUpdateRemoteClusterRequest | _ToProto]

          type array = ::Array[AddOrUpdateRemoteClusterRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddOrUpdateRemoteClusterRequest | _ToProto]
        end

        class AddOrUpdateRemoteClusterResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> AddOrUpdateRemoteClusterResponse
          end

          # The type of `#initialize` parameter.
          type init = AddOrUpdateRemoteClusterResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[AddOrUpdateRemoteClusterResponse, AddOrUpdateRemoteClusterResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, AddOrUpdateRemoteClusterResponse, AddOrUpdateRemoteClusterResponse | _ToProto]

          type array = ::Array[AddOrUpdateRemoteClusterResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, AddOrUpdateRemoteClusterResponse | _ToProto]
        end

        class RemoveRemoteClusterRequest < ::Protobuf::Message
          attr_accessor cluster_name(): ::String

          def cluster_name!: () -> ::String?

          def initialize: (?cluster_name: ::String) -> void

          def []: (:cluster_name) -> ::String
                | (::Symbol) -> untyped

          def []=: (:cluster_name, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> RemoveRemoteClusterRequest
          end

          # The type of `#initialize` parameter.
          type init = RemoveRemoteClusterRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveRemoteClusterRequest, RemoveRemoteClusterRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveRemoteClusterRequest, RemoveRemoteClusterRequest | _ToProto]

          type array = ::Array[RemoveRemoteClusterRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveRemoteClusterRequest | _ToProto]
        end

        class RemoveRemoteClusterResponse < ::Protobuf::Message
          def initialize: () -> void

          interface _ToProto
            def to_proto: () -> RemoveRemoteClusterResponse
          end

          # The type of `#initialize` parameter.
          type init = RemoveRemoteClusterResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[RemoveRemoteClusterResponse, RemoveRemoteClusterResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, RemoveRemoteClusterResponse, RemoveRemoteClusterResponse | _ToProto]

          type array = ::Array[RemoveRemoteClusterResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, RemoveRemoteClusterResponse | _ToProto]
        end

        class DescribeClusterRequest < ::Protobuf::Message
          attr_accessor cluster_name(): ::String

          def cluster_name!: () -> ::String?

          def initialize: (?cluster_name: ::String) -> void

          def []: (:cluster_name) -> ::String
                | (::Symbol) -> untyped

          def []=: (:cluster_name, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> DescribeClusterRequest
          end

          # The type of `#initialize` parameter.
          type init = DescribeClusterRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeClusterRequest, DescribeClusterRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeClusterRequest, DescribeClusterRequest | _ToProto]

          type array = ::Array[DescribeClusterRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeClusterRequest | _ToProto]
        end

        class DescribeClusterResponse < ::Protobuf::Message
          attr_accessor supported_clients(): ::Protobuf::field_hash[::String, ::String]

          def supported_clients=: (::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                                | ...

          def supported_clients!: () -> ::Protobuf::field_hash[::String, ::String]?

          attr_accessor server_version(): ::String

          def server_version!: () -> ::String?

          attr_accessor membership_info(): ::Temporal::Api::Cluster::V1::MembershipInfo?

          def membership_info=: [M < ::Temporal::Api::Cluster::V1::MembershipInfo::_ToProto] (M?) -> M?
                              | ...

          def membership_info!: () -> ::Temporal::Api::Cluster::V1::MembershipInfo?

          attr_accessor cluster_id(): ::String

          def cluster_id!: () -> ::String?

          attr_accessor cluster_name(): ::String

          def cluster_name!: () -> ::String?

          attr_accessor history_shard_count(): ::Integer

          def history_shard_count!: () -> ::Integer?

          attr_accessor persistence_store(): ::String

          def persistence_store!: () -> ::String?

          attr_accessor visibility_store(): ::String

          def visibility_store!: () -> ::String?

          attr_accessor version_info(): ::Temporal::Api::Version::V1::VersionInfo?

          def version_info=: [M < ::Temporal::Api::Version::V1::VersionInfo::_ToProto] (M?) -> M?
                           | ...

          def version_info!: () -> ::Temporal::Api::Version::V1::VersionInfo?

          attr_accessor failover_version_increment(): ::Integer

          def failover_version_increment!: () -> ::Integer?

          attr_accessor initial_failover_version(): ::Integer

          def initial_failover_version!: () -> ::Integer?

          attr_accessor is_global_namespace_enabled(): bool

          def is_global_namespace_enabled!: () -> bool?

          def initialize: (?supported_clients: ::Hash[::String, ::String], ?server_version: ::String, ?membership_info: ::Temporal::Api::Cluster::V1::MembershipInfo::init?, ?cluster_id: ::String, ?cluster_name: ::String, ?history_shard_count: ::Integer, ?persistence_store: ::String, ?visibility_store: ::String, ?version_info: ::Temporal::Api::Version::V1::VersionInfo::init?, ?failover_version_increment: ::Integer, ?initial_failover_version: ::Integer, ?is_global_namespace_enabled: bool) -> void

          def []: (:supported_clients) -> ::Protobuf::field_hash[::String, ::String]
                | (:server_version) -> ::String
                | (:membership_info) -> ::Temporal::Api::Cluster::V1::MembershipInfo?
                | (:cluster_id) -> ::String
                | (:cluster_name) -> ::String
                | (:history_shard_count) -> ::Integer
                | (:persistence_store) -> ::String
                | (:visibility_store) -> ::String
                | (:version_info) -> ::Temporal::Api::Version::V1::VersionInfo?
                | (:failover_version_increment) -> ::Integer
                | (:initial_failover_version) -> ::Integer
                | (:is_global_namespace_enabled) -> bool
                | (::Symbol) -> untyped

          def []=: (:supported_clients, ::Protobuf::field_hash[::String, ::String]) -> ::Protobuf::field_hash[::String, ::String]
                 | (:supported_clients, ::Hash[::String, ::String]) -> ::Hash[::String, ::String]
                 | (:server_version, ::String) -> ::String
                 | (:membership_info, ::Temporal::Api::Cluster::V1::MembershipInfo?) -> ::Temporal::Api::Cluster::V1::MembershipInfo?
                 | [M < ::Temporal::Api::Cluster::V1::MembershipInfo::_ToProto] (:membership_info, M?) -> M?
                 | (:cluster_id, ::String) -> ::String
                 | (:cluster_name, ::String) -> ::String
                 | (:history_shard_count, ::Integer) -> ::Integer
                 | (:persistence_store, ::String) -> ::String
                 | (:visibility_store, ::String) -> ::String
                 | (:version_info, ::Temporal::Api::Version::V1::VersionInfo?) -> ::Temporal::Api::Version::V1::VersionInfo?
                 | [M < ::Temporal::Api::Version::V1::VersionInfo::_ToProto] (:version_info, M?) -> M?
                 | (:failover_version_increment, ::Integer) -> ::Integer
                 | (:initial_failover_version, ::Integer) -> ::Integer
                 | (:is_global_namespace_enabled, bool) -> bool
                 | (::Symbol, untyped) -> untyped

          def is_global_namespace_enabled?: () -> bool

          interface _ToProto
            def to_proto: () -> DescribeClusterResponse
          end

          # The type of `#initialize` parameter.
          type init = DescribeClusterResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[DescribeClusterResponse, DescribeClusterResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, DescribeClusterResponse, DescribeClusterResponse | _ToProto]

          type array = ::Array[DescribeClusterResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, DescribeClusterResponse | _ToProto]
        end

        class ListClustersRequest < ::Protobuf::Message
          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?page_size: ::Integer, ?next_page_token: ::String) -> void

          def []: (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClustersRequest
          end

          # The type of `#initialize` parameter.
          type init = ListClustersRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClustersRequest, ListClustersRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClustersRequest, ListClustersRequest | _ToProto]

          type array = ::Array[ListClustersRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClustersRequest | _ToProto]
        end

        class ListClustersResponse < ::Protobuf::Message
          attr_accessor clusters(): ::Temporal::Api::Cluster::V1::ClusterMetadata::field_array

          def clusters=: (::Temporal::Api::Cluster::V1::ClusterMetadata::array) -> ::Temporal::Api::Cluster::V1::ClusterMetadata::array
                       | ...

          def clusters!: () -> ::Temporal::Api::Cluster::V1::ClusterMetadata::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?clusters: ::Temporal::Api::Cluster::V1::ClusterMetadata::array, ?next_page_token: ::String) -> void

          def []: (:clusters) -> ::Temporal::Api::Cluster::V1::ClusterMetadata::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:clusters, ::Temporal::Api::Cluster::V1::ClusterMetadata::field_array) -> ::Temporal::Api::Cluster::V1::ClusterMetadata::field_array
                 | (:clusters, ::Temporal::Api::Cluster::V1::ClusterMetadata::array) -> ::Temporal::Api::Cluster::V1::ClusterMetadata::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClustersResponse
          end

          # The type of `#initialize` parameter.
          type init = ListClustersResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClustersResponse, ListClustersResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClustersResponse, ListClustersResponse | _ToProto]

          type array = ::Array[ListClustersResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClustersResponse | _ToProto]
        end

        class ListClusterMembersRequest < ::Protobuf::Message
          # (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "within" is used to indicate a time range. --)
          #
          attr_accessor last_heartbeat_within(): ::Google::Protobuf::Duration?

          # (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "within" is used to indicate a time range. --)
          #
          def last_heartbeat_within=: [M < ::Google::Protobuf::Duration::_ToProto] (M?) -> M?
                                    | ...

          def last_heartbeat_within!: () -> ::Google::Protobuf::Duration?

          attr_accessor rpc_address(): ::String

          def rpc_address!: () -> ::String?

          attr_accessor host_id(): ::String

          def host_id!: () -> ::String?

          attr_accessor role(): ::Temporal::Api::Enums::V1::ClusterMemberRole

          def role=: (::Temporal::Api::Enums::V1::ClusterMemberRole::values) -> ::Temporal::Api::Enums::V1::ClusterMemberRole::values
                   | ...

          def role!: () -> ::Temporal::Api::Enums::V1::ClusterMemberRole?

          # (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "after" is used to indicate a time range. --)
          #
          attr_accessor session_started_after_time(): ::Google::Protobuf::Timestamp?

          # (-- api-linter: core::0140::prepositions=disabled
          #      aip.dev/not-precedent: "after" is used to indicate a time range. --)
          #
          def session_started_after_time=: [M < ::Google::Protobuf::Timestamp::_ToProto] (M?) -> M?
                                         | ...

          def session_started_after_time!: () -> ::Google::Protobuf::Timestamp?

          attr_accessor page_size(): ::Integer

          def page_size!: () -> ::Integer?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?last_heartbeat_within: ::Google::Protobuf::Duration::init?, ?rpc_address: ::String, ?host_id: ::String, ?role: ::Temporal::Api::Enums::V1::ClusterMemberRole::init, ?session_started_after_time: ::Google::Protobuf::Timestamp::init?, ?page_size: ::Integer, ?next_page_token: ::String) -> void

          def []: (:last_heartbeat_within) -> ::Google::Protobuf::Duration?
                | (:rpc_address) -> ::String
                | (:host_id) -> ::String
                | (:role) -> ::Temporal::Api::Enums::V1::ClusterMemberRole
                | (:session_started_after_time) -> ::Google::Protobuf::Timestamp?
                | (:page_size) -> ::Integer
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:last_heartbeat_within, ::Google::Protobuf::Duration?) -> ::Google::Protobuf::Duration?
                 | [M < ::Google::Protobuf::Duration::_ToProto] (:last_heartbeat_within, M?) -> M?
                 | (:rpc_address, ::String) -> ::String
                 | (:host_id, ::String) -> ::String
                 | (:role, ::Temporal::Api::Enums::V1::ClusterMemberRole) -> ::Temporal::Api::Enums::V1::ClusterMemberRole
                 | (:role, ::Temporal::Api::Enums::V1::ClusterMemberRole::values) -> ::Temporal::Api::Enums::V1::ClusterMemberRole::values
                 | (:session_started_after_time, ::Google::Protobuf::Timestamp?) -> ::Google::Protobuf::Timestamp?
                 | [M < ::Google::Protobuf::Timestamp::_ToProto] (:session_started_after_time, M?) -> M?
                 | (:page_size, ::Integer) -> ::Integer
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClusterMembersRequest
          end

          # The type of `#initialize` parameter.
          type init = ListClusterMembersRequest | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClusterMembersRequest, ListClusterMembersRequest | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClusterMembersRequest, ListClusterMembersRequest | _ToProto]

          type array = ::Array[ListClusterMembersRequest | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClusterMembersRequest | _ToProto]
        end

        class ListClusterMembersResponse < ::Protobuf::Message
          attr_accessor active_members(): ::Temporal::Api::Cluster::V1::ClusterMember::field_array

          def active_members=: (::Temporal::Api::Cluster::V1::ClusterMember::array) -> ::Temporal::Api::Cluster::V1::ClusterMember::array
                             | ...

          def active_members!: () -> ::Temporal::Api::Cluster::V1::ClusterMember::field_array?

          attr_accessor next_page_token(): ::String

          def next_page_token!: () -> ::String?

          def initialize: (?active_members: ::Temporal::Api::Cluster::V1::ClusterMember::array, ?next_page_token: ::String) -> void

          def []: (:active_members) -> ::Temporal::Api::Cluster::V1::ClusterMember::field_array
                | (:next_page_token) -> ::String
                | (::Symbol) -> untyped

          def []=: (:active_members, ::Temporal::Api::Cluster::V1::ClusterMember::field_array) -> ::Temporal::Api::Cluster::V1::ClusterMember::field_array
                 | (:active_members, ::Temporal::Api::Cluster::V1::ClusterMember::array) -> ::Temporal::Api::Cluster::V1::ClusterMember::array
                 | (:next_page_token, ::String) -> ::String
                 | (::Symbol, untyped) -> untyped

          interface _ToProto
            def to_proto: () -> ListClusterMembersResponse
          end

          # The type of `#initialize` parameter.
          type init = ListClusterMembersResponse | _ToProto

          # The type of `repeated` field.
          type field_array = ::Protobuf::Field::FieldArray[ListClusterMembersResponse, ListClusterMembersResponse | _ToProto]

          # The type of `map` field.
          type field_hash[KEY] = ::Protobuf::Field::FieldHash[KEY, ListClusterMembersResponse, ListClusterMembersResponse | _ToProto]

          type array = ::Array[ListClusterMembersResponse | _ToProto]

          type hash[KEY] = ::Hash[KEY, ListClusterMembersResponse | _ToProto]
        end
      end
    end
  end
end
