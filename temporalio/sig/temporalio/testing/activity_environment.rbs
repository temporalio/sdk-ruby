module Temporalio
  module Testing
    class ActivityEnvironment
      def self.default_info: -> Activity::Info

      def initialize: (
        ?info: Activity::Info,
        ?on_heartbeat: Proc?,
        ?cancellation: Cancellation,
        ?worker_shutdown_cancellation: Cancellation,
        ?payload_converter: Converters::PayloadConverter,
        ?logger: Logger,
        ?activity_executors: Hash[Symbol, Worker::ActivityExecutor],
        ?metric_meter: Metric::Meter?,
        ?client: Client?
      ) -> void

      def run: (
        Activity::Definition | singleton(Activity::Definition) | Activity::Definition::Info activity,
        *Object? args
      ) -> untyped
    end
  end
end