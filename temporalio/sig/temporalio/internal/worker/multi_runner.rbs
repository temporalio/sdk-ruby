module Temporalio
  module Internal
    module Worker
      class MultiRunner
        interface _Worker
          def _bridge_worker: -> Bridge::Worker
          def _initiate_shutdown: -> void
          def _wait_all_complete: -> void
        end


        def initialize: (workers: Array[_Worker], shutdown_signals: Array[String | Integer]) -> void

        def apply_thread_or_fiber_block: ?{ (?) -> untyped } -> void

        def apply_workflow_activation_decoded: (
          workflow_worker: WorkflowWorker,
          activation: untyped
        ) -> void

        def apply_workflow_activation_complete: (
          workflow_worker: WorkflowWorker,
          activation_completion: untyped,
          encoded: bool
        ) -> void

        def raise_in_thread_or_fiber_block: (Exception error) -> void

        def initiate_shutdown: -> void

        def wait_complete_and_finalize_shutdown: -> void

        def next_event: -> Event

        class Event
          class PollSuccess < Event
            attr_reader worker: _Worker
            attr_reader worker_type: Symbol
            attr_reader bytes: String

            def initialize: (
              worker: _Worker,
              worker_type: Symbol,
              bytes: String
            ) -> void
          end

          class WorkflowActivationDecoded < Event
            attr_reader workflow_worker: WorkflowWorker
            attr_reader activation: untyped

            def initialize: (
              workflow_worker: WorkflowWorker,
              activation: untyped
            ) -> void
          end

          class WorkflowActivationComplete < Event
            attr_reader workflow_worker: WorkflowWorker
            attr_reader activation_completion: untyped
            attr_reader encoded: bool
            attr_reader completion_complete_queue: Queue

            def initialize: (
              workflow_worker: WorkflowWorker,
              activation_completion: untyped,
              encoded: bool,
              completion_complete_queue: Queue
            ) -> void
          end

          class WorkflowActivationCompletionComplete < Event
            attr_reader run_id: String
            attr_reader error: Exception

            def initialize: (
              run_id: String,
              error: Exception
            ) -> void
          end

          class PollFailure < Event
            attr_reader worker: _Worker
            attr_reader worker_type: Symbol
            attr_reader error: Exception

            def initialize: (
              worker: _Worker,
              worker_type: Symbol,
              error: Exception
            ) -> void
          end

          class PollerShutDown < Event
            attr_reader worker: _Worker
            attr_reader worker_type: Symbol

            def initialize: (
              worker: _Worker,
              worker_type: Symbol
            ) -> void
          end

          class AllPollersShutDown < Event
            def self.instance: -> AllPollersShutDown
          end

          class BlockSuccess < Event
            attr_reader result: Object?

            def initialize: (result: Object?) -> void
          end

          class BlockFailure < Event
            attr_reader error: Exception

            def initialize: (error: Exception) -> void
          end
        end

        class InjectEventForTesting < Temporalio::Error
          attr_reader event: Event

          def initialize: (Event event) -> void
        end
      end
    end
  end
end